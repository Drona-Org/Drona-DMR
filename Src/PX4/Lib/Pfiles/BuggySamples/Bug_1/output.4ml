model pfiles_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" includes Mission_1_p 
, PX4Model_p
, FlightController_p
, Timer_p
, POrbTopics_p
, AllEnums_p
, POrb_p
, HeartbeatMonitor_p
, GPSHealthMonitor_p 
, BatteryMonitor_p
, AltitudeMonitor_p
, GeofenceMonitor_p
, Commands_p
, Float32_p
, P_common_MessageTypes_p
, P_common_EnumFunctions_p
{
  MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NewStmt("MissionPlannerMachine", NIL, SourceInfo(8, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NewStmt("MissionPlannerMachine", NIL, SourceInfo(8, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)),
  FileInfo(AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NewStmt("MissionPlannerMachine", NIL, SourceInfo(8, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/pfiles.p"),
  LineInfo(AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NewStmt("MissionPlannerMachine", NIL, SourceInfo(8, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), ENTRY, 7),
  LineInfo(AnonFunDecl(MachineDecl("TestApplication", REAL, NIL, QualifiedName("Init", NIL), TRUE), NIL, NIL, NewStmt("MissionPlannerMachine", NIL, SourceInfo(8, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), EXIT, 9).
}

model Mission_1_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml"  
{
  MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("orb"), New("POrbMachine", NIL), SourceInfo(17, 4)), Seq(BinStmt(ASSIGN, Name("timer"), New("TimerMachine", NulApp(THIS)), SourceInfo(18, 4)), Seq(BinStmt(ASSIGN, Name("controller"), New("FlightControllerMachine", Name("orb")), SourceInfo(19, 13)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(20, 4)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(21, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4))))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("StartMission", NIL), MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("orb", MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("controller", MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("timer", MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("landing", MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("orb"), New("POrbMachine", NIL), SourceInfo(17, 4)), Seq(BinStmt(ASSIGN, Name("timer"), New("TimerMachine", NulApp(THIS)), SourceInfo(18, 4)), Seq(BinStmt(ASSIGN, Name("controller"), New("FlightControllerMachine", Name("orb")), SourceInfo(19, 13)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(20, 4)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(21, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4))))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_ready", QualifiedName("StartMission", NIL), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("orb"), New("POrbMachine", NIL), SourceInfo(17, 4)), Seq(BinStmt(ASSIGN, Name("timer"), New("TimerMachine", NulApp(THIS)), SourceInfo(18, 4)), Seq(BinStmt(ASSIGN, Name("controller"), New("FlightControllerMachine", Name("orb")), SourceInfo(19, 13)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(20, 4)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(21, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4))))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: sending take off to 5 meters\\n", SourceInfo(34, 4)), Send(Name("controller"), Name("mission_takeoff"), FunApp("IntToFloat32", Exprs(NONE, NulApp(5), NIL)), NONE, SourceInfo(35, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("landing")), Seq(Print("MissionPlannerMachine: loitering for 10 seconds\\n", SourceInfo(39, 5)), Send(Name("timer"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(40, 5))), Seq(Print("MissionPlannerMachine: landed safely\\n", SourceInfo(43, 5)), Raise(NulApp(HALT), NIL, SourceInfo(44, 5))), SourceInfo(38, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(48, 4)), Seq(Print("MissionPlannerMachine: mission complete, time to land\\n", SourceInfo(49, 4)), Seq(BinStmt(ASSIGN, Name("landing"), NulApp(TRUE), SourceInfo(50, 4)), Send(Name("controller"), Name("mission_land"), NIL, NONE, SourceInfo(51, 4))))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL)),
  DoDecl(StateDecl(QualifiedName("StartMission", NIL), MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_armed", AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: sending take off to 5 meters\\n", SourceInfo(34, 4)), Send(Name("controller"), Name("mission_takeoff"), FunApp("IntToFloat32", Exprs(NONE, NulApp(5), NIL)), NONE, SourceInfo(35, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("StartMission", NIL), MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "altitude_reached", AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("landing")), Seq(Print("MissionPlannerMachine: loitering for 10 seconds\\n", SourceInfo(39, 5)), Send(Name("timer"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(40, 5))), Seq(Print("MissionPlannerMachine: landed safely\\n", SourceInfo(43, 5)), Raise(NulApp(HALT), NIL, SourceInfo(44, 5))), SourceInfo(38, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("StartMission", NIL), MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_timeout", AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(48, 4)), Seq(Print("MissionPlannerMachine: mission complete, time to land\\n", SourceInfo(49, 4)), Seq(BinStmt(ASSIGN, Name("landing"), NulApp(TRUE), SourceInfo(50, 4)), Send(Name("controller"), Name("mission_land"), NIL, NONE, SourceInfo(51, 4))))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL))),
  DoDecl(StateDecl(QualifiedName("StartMission", NIL), MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_cancel_success", IGNORE),
  DoDecl(StateDecl(QualifiedName("StartMission", NIL), MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_cancel_failure", IGNORE),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("orb"), New("POrbMachine", NIL), SourceInfo(17, 4)), Seq(BinStmt(ASSIGN, Name("timer"), New("TimerMachine", NulApp(THIS)), SourceInfo(18, 4)), Seq(BinStmt(ASSIGN, Name("controller"), New("FlightControllerMachine", Name("orb")), SourceInfo(19, 13)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(20, 4)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(21, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4))))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/mission_1.p"),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/mission_1.p"),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: sending take off to 5 meters\\n", SourceInfo(34, 4)), Send(Name("controller"), Name("mission_takeoff"), FunApp("IntToFloat32", Exprs(NONE, NulApp(5), NIL)), NONE, SourceInfo(35, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/mission_1.p"),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("landing")), Seq(Print("MissionPlannerMachine: loitering for 10 seconds\\n", SourceInfo(39, 5)), Send(Name("timer"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(40, 5))), Seq(Print("MissionPlannerMachine: landed safely\\n", SourceInfo(43, 5)), Raise(NulApp(HALT), NIL, SourceInfo(44, 5))), SourceInfo(38, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/mission_1.p"),
  FileInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(48, 4)), Seq(Print("MissionPlannerMachine: mission complete, time to land\\n", SourceInfo(49, 4)), Seq(BinStmt(ASSIGN, Name("landing"), NulApp(TRUE), SourceInfo(50, 4)), Send(Name("controller"), Name("mission_land"), NIL, NONE, SourceInfo(51, 4))))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/mission_1.p"),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("orb"), New("POrbMachine", NIL), SourceInfo(17, 4)), Seq(BinStmt(ASSIGN, Name("timer"), New("TimerMachine", NulApp(THIS)), SourceInfo(18, 4)), Seq(BinStmt(ASSIGN, Name("controller"), New("FlightControllerMachine", Name("orb")), SourceInfo(19, 13)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(20, 4)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(21, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4))))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), ENTRY, 16),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("orb"), New("POrbMachine", NIL), SourceInfo(17, 4)), Seq(BinStmt(ASSIGN, Name("timer"), New("TimerMachine", NulApp(THIS)), SourceInfo(18, 4)), Seq(BinStmt(ASSIGN, Name("controller"), New("FlightControllerMachine", Name("orb")), SourceInfo(19, 13)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(20, 4)), Seq(Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(21, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4))))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), EXIT, 23),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), ENTRY, 28),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: arming the drone\\n", SourceInfo(30, 4)), Send(Name("controller"), Name("mission_arm"), NIL, NONE, SourceInfo(31, 7))), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), EXIT, 32),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: sending take off to 5 meters\\n", SourceInfo(34, 4)), Send(Name("controller"), Name("mission_takeoff"), FunApp("IntToFloat32", Exprs(NONE, NulApp(5), NIL)), NONE, SourceInfo(35, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL)), ENTRY, 33),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("MissionPlannerMachine: sending take off to 5 meters\\n", SourceInfo(34, 4)), Send(Name("controller"), Name("mission_takeoff"), FunApp("IntToFloat32", Exprs(NONE, NulApp(5), NIL)), NONE, SourceInfo(35, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL)), EXIT, 36),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("landing")), Seq(Print("MissionPlannerMachine: loitering for 10 seconds\\n", SourceInfo(39, 5)), Send(Name("timer"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(40, 5))), Seq(Print("MissionPlannerMachine: landed safely\\n", SourceInfo(43, 5)), Raise(NulApp(HALT), NIL, SourceInfo(44, 5))), SourceInfo(38, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL)), ENTRY, 37),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("landing")), Seq(Print("MissionPlannerMachine: loitering for 10 seconds\\n", SourceInfo(39, 5)), Send(Name("timer"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(40, 5))), Seq(Print("MissionPlannerMachine: landed safely\\n", SourceInfo(43, 5)), Raise(NulApp(HALT), NIL, SourceInfo(44, 5))), SourceInfo(38, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL)), EXIT, 46),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(48, 4)), Seq(Print("MissionPlannerMachine: mission complete, time to land\\n", SourceInfo(49, 4)), Seq(BinStmt(ASSIGN, Name("landing"), NulApp(TRUE), SourceInfo(50, 4)), Send(Name("controller"), Name("mission_land"), NIL, NONE, SourceInfo(51, 4))))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL)), ENTRY, 47),
  LineInfo(AnonFunDecl(MachineDecl("MissionPlannerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(48, 4)), Seq(Print("MissionPlannerMachine: mission complete, time to land\\n", SourceInfo(49, 4)), Seq(BinStmt(ASSIGN, Name("landing"), NulApp(TRUE), SourceInfo(50, 4)), Send(Name("controller"), Name("mission_land"), NIL, NONE, SourceInfo(51, 4))))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL)), EXIT, 52).
}

model PX4Model_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  MachineDecl("PX4Model", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("PX4Model", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("PX4Model", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("PX4Model", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  AnonFunDecl(MachineDecl("PX4Model", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("PX4Model", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  FileInfo(AnonFunDecl(MachineDecl("PX4Model", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("PX4Model", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL).
}

model FlightController_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  EventDecl("mission_arm", NIL, NIL),
  EventDecl("mission_disarm", NIL, NIL),
  EventDecl("mission_takeoff", NIL, NameType("float32")),
  EventDecl("mission_goto", NIL, NIL),
  EventDecl("mission_land", NIL, NIL),
  EventDecl("fmom_ready", NIL, NIL),
  EventDecl("fmom_armed_ok", NIL, NIL),
  EventDecl("fmom_battery_critical", NIL, NIL),
  EventDecl("fmom_alt_reached", NIL, NIL),
  MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("LowBattery", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("LowBattery: we cannot fly\\n", SourceInfo(227, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_11", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("GeofenceBreached", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("Drone is outside geo fence - flying back home !!\\n", SourceInfo(234, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_return_to_launch_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(235, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_12", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("ArmedMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("TakingOff", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("Loitering", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: loitering...\\n", SourceInfo(305, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_17", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("Landing", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "zero", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 6, SourceInfo(324, 4)), Seq(Print("FlightControllerMachine: landing...\\n", SourceInfo(325, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("zero"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", Name("zero"), NIL)))), NONE, SourceInfo(326, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_land_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("homeAlt"), NIL)))))))))), NONE, SourceInfo(331, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_18", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("POrbV", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("commander", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("altitudeMonitor", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("geofenceMonitor", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("GPSStatusV", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("GPSHealthType")),
  VarDecl("gps", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("mavlink_global_position_int_t")),
  VarDecl("home", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("mavlink_local_position_ned_t")),
  VarDecl("homeAlt", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("float32")),
  VarDecl("arming", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  VarDecl("armed", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  VarDecl("alive", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  VarDecl("locked", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  VarDecl("battery_low", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "fmom_ready", QualifiedName("StandByMode", NIL), PUSH),
  TransDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "fmom_armed_ok", QualifiedName("ArmedMode", NIL), PUSH),
  TransDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "fmom_battery_critical", QualifiedName("LowBattery", NIL), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("ArmedMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "geofence_reached", QualifiedName("GeofenceBreached", NIL), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("ArmedMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_takeoff", QualifiedName("TakingOff", NIL), PUSH),
  TransDecl(StateDecl(QualifiedName("TakingOff", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_land", QualifiedName("Landing", NIL), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("TakingOff", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "altitude_reached", QualifiedName("Loitering", NIL), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("TakingOff", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "fmom_battery_critical", QualifiedName("Landing", NIL), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("Loitering", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: loitering...\\n", SourceInfo(305, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_17", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_land", QualifiedName("Landing", NIL), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("Loitering", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: loitering...\\n", SourceInfo(305, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_17", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "fmom_battery_critical", QualifiedName("Landing", NIL), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  FunDecl("CheckState", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NIL, NIL, NIL, Ite(BinApp(AND, BinApp(AND, Name("alive"), Name("locked")), UnApp(NOT, Name("battery_low"))), Raise(Name("fmom_ready"), NIL, SourceInfo(356, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(354, 3))),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Ite(BinApp(AND, Name("alive"), UnApp(NOT, Field(Name("status"), "isAlive"))), Seq(Print("FlightControllerMachine: Hearbeat message not received for a long time... is your drone dead?\\n", SourceInfo(84, 5)), Seq(Print("FlightControllerMachine: Not much we can actually do here, chances are we can't send commands either...\\n", SourceInfo(85, 5)), Assert(NulApp(FALSE), NIL, SourceInfo(86, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(82, 4)), Seq(BinStmt(ASSIGN, Name("alive"), Field(Name("status"), "isAlive"), SourceInfo(88, 4)), Seq(Ite(Name("alive"), Print("Heartbeat looks good.\\n", SourceInfo(91, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 4)), FunStmt("CheckState", NIL, NIL, 0, SourceInfo(93, 4))))), NmdTupType(NmdTupTypeField(NONE, "status", NameType("HeartbeatStatusType")), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(97, 4)), Seq(Print("received battery_critical, raising fmom_battery_critical\\n", SourceInfo(98, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(99, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("GPSStatusV"), Name("gps_status"), SourceInfo(107, 4)), Seq(BinStmt(ASSIGN, Name("locked"), Field(Name("GPSStatusV"), "locked"), SourceInfo(108, 4)), Seq(Ite(UnApp(NOT, Field(Name("GPSStatusV"), "locked")), Print("FlightControllerMachine: GPS Lock lost.\\n", SourceInfo(111, 5)), Print("FlightControllerMachine: GPS Lock gained.\\n", SourceInfo(115, 5)), SourceInfo(109, 4)), FunStmt("CheckState", NIL, NIL, 1, SourceInfo(117, 4))))), NmdTupType(NmdTupTypeField(NONE, "gps_status", NameType("GPSHealthType")), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("home"), Name("pos"), SourceInfo(122, 4)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("ev", Name("home_location"), NamedExprs("payload", Name("pos"), NIL)))), NONE, SourceInfo(123, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "conversion", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("conversion"), 2, SourceInfo(129, 4)), Seq(BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(130, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, Field(Name("pos"), "_alt"), NIL), Name("homeAlt"), 3, SourceInfo(131, 4)), FunStmt("DivFloat32", Exprs(NONE, Name("homeAlt"), Exprs(NONE, Name("conversion"), NIL)), Name("homeAlt"), 4, SourceInfo(132, 4))))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot arm until we hear from the drone\\n", SourceInfo(135, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until we hear from the drone\\n", SourceInfo(138, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until we hear from the drone\\n", SourceInfo(141, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take land until we hear from the drone\\n", SourceInfo(144, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected altitude_reached message\\n", SourceInfo(149, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_4", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected geofence_reached message\\n", SourceInfo(152, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_5", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("arming")), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(TRUE), SourceInfo(175, 5)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(1), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(176, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(173, 7)), NmdTupType(NmdTupTypeField(NONE, "_payload_7", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(183, 6)), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(TRUE), SourceInfo(184, 6)), Raise(Name("fmom_armed_ok"), NIL, SourceInfo(185, 6)))), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(FALSE), SourceInfo(188, 6)), Print("FlightControllerMachine: Disarmed\\n", SourceInfo(189, 6))), SourceInfo(182, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(181, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(199, 6)), Print("FlightControllerMachine: Arming failed\\n", SourceInfo(200, 6))), Print("FlightControllerMachine: Disarm failed\\n", SourceInfo(202, 6)), SourceInfo(198, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(197, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until drone is armed\\n", SourceInfo(208, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_8", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until drone is armed\\n", SourceInfo(211, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_9", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot land until drone is armed\\n", SourceInfo(214, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_10", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(221, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("LowBattery: we cannot fly\\n", SourceInfo(227, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_11", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("Drone is outside geo fence - flying back home !!\\n", SourceInfo(234, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_return_to_launch_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(235, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_12", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(POP, SourceInfo(252, 29)), NmdTupType(NmdTupTypeField(NONE, "_payload_14", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: todo: goto not implemented yet\\n", SourceInfo(257, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_15", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: landing ignored, we should already be on the ground\\n", SourceInfo(261, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_16", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(265, 4)), NulStmt(POP, SourceInfo(266, 4))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command received\\n", SourceInfo(286, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(285, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command failed\\n", SourceInfo(292, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(291, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: loitering...\\n", SourceInfo(305, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_17", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(313, 4)), Seq(Print("received battery_critical while Loitering\\n", SourceInfo(314, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(315, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "zero", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 6, SourceInfo(324, 4)), Seq(Print("FlightControllerMachine: landing...\\n", SourceInfo(325, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("zero"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", Name("zero"), NIL)))), NONE, SourceInfo(326, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_land_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("homeAlt"), NIL)))))))))), NONE, SourceInfo(331, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_18", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command received\\n", SourceInfo(336, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(335, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command failed\\n", SourceInfo(342, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(341, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)),
  AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: landed safely\\n", SourceInfo(347, 4)), NulStmt(POP, SourceInfo(348, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_19", BaseType(ANY)), NIL)),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "heartbeatmonitoring", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Ite(BinApp(AND, Name("alive"), UnApp(NOT, Field(Name("status"), "isAlive"))), Seq(Print("FlightControllerMachine: Hearbeat message not received for a long time... is your drone dead?\\n", SourceInfo(84, 5)), Seq(Print("FlightControllerMachine: Not much we can actually do here, chances are we can't send commands either...\\n", SourceInfo(85, 5)), Assert(NulApp(FALSE), NIL, SourceInfo(86, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(82, 4)), Seq(BinStmt(ASSIGN, Name("alive"), Field(Name("status"), "isAlive"), SourceInfo(88, 4)), Seq(Ite(Name("alive"), Print("Heartbeat looks good.\\n", SourceInfo(91, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 4)), FunStmt("CheckState", NIL, NIL, 0, SourceInfo(93, 4))))), NmdTupType(NmdTupTypeField(NONE, "status", NameType("HeartbeatStatusType")), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "battery_critical", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(97, 4)), Seq(Print("received battery_critical, raising fmom_battery_critical\\n", SourceInfo(98, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(99, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "fmom_battery_critical", IGNORE),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "gps_healthmonitoring", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("GPSStatusV"), Name("gps_status"), SourceInfo(107, 4)), Seq(BinStmt(ASSIGN, Name("locked"), Field(Name("GPSStatusV"), "locked"), SourceInfo(108, 4)), Seq(Ite(UnApp(NOT, Field(Name("GPSStatusV"), "locked")), Print("FlightControllerMachine: GPS Lock lost.\\n", SourceInfo(111, 5)), Print("FlightControllerMachine: GPS Lock gained.\\n", SourceInfo(115, 5)), SourceInfo(109, 4)), FunStmt("CheckState", NIL, NIL, 1, SourceInfo(117, 4))))), NmdTupType(NmdTupTypeField(NONE, "gps_status", NameType("GPSHealthType")), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "local_position", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("home"), Name("pos"), SourceInfo(122, 4)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("ev", Name("home_location"), NamedExprs("payload", Name("pos"), NIL)))), NONE, SourceInfo(123, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "global_position", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "conversion", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("conversion"), 2, SourceInfo(129, 4)), Seq(BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(130, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, Field(Name("pos"), "_alt"), NIL), Name("homeAlt"), 3, SourceInfo(131, 4)), FunStmt("DivFloat32", Exprs(NONE, Name("homeAlt"), Exprs(NONE, Name("conversion"), NIL)), Name("homeAlt"), 4, SourceInfo(132, 4))))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_arm", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot arm until we hear from the drone\\n", SourceInfo(135, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_takeoff", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until we hear from the drone\\n", SourceInfo(138, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_goto", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until we hear from the drone\\n", SourceInfo(141, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_land", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take land until we hear from the drone\\n", SourceInfo(144, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_disarm", IGNORE),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "altitude_reached", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected altitude_reached message\\n", SourceInfo(149, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_4", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "geofence_reached", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected geofence_reached message\\n", SourceInfo(152, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_5", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_disarm", IGNORE),
  DoDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_arm", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("arming")), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(TRUE), SourceInfo(175, 5)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(1), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(176, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(173, 7)), NmdTupType(NmdTupTypeField(NONE, "_payload_7", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "CommandSucceeded", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(183, 6)), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(TRUE), SourceInfo(184, 6)), Raise(Name("fmom_armed_ok"), NIL, SourceInfo(185, 6)))), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(FALSE), SourceInfo(188, 6)), Print("FlightControllerMachine: Disarmed\\n", SourceInfo(189, 6))), SourceInfo(182, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(181, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL))),
  DoDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "CommandFailed", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(199, 6)), Print("FlightControllerMachine: Arming failed\\n", SourceInfo(200, 6))), Print("FlightControllerMachine: Disarm failed\\n", SourceInfo(202, 6)), SourceInfo(198, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(197, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL))),
  DoDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_takeoff", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until drone is armed\\n", SourceInfo(208, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_8", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_goto", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until drone is armed\\n", SourceInfo(211, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_9", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_land", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot land until drone is armed\\n", SourceInfo(214, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_10", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("StandByMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "global_position", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(221, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("ArmedMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_disarm", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(POP, SourceInfo(252, 29)), NmdTupType(NmdTupTypeField(NONE, "_payload_14", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("ArmedMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_goto", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: todo: goto not implemented yet\\n", SourceInfo(257, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_15", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("ArmedMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "mission_land", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: landing ignored, we should already be on the ground\\n", SourceInfo(261, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_16", BaseType(ANY)), NIL))),
  DoDecl(StateDecl(QualifiedName("ArmedMode", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "battery_critical", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(265, 4)), NulStmt(POP, SourceInfo(266, 4))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL))),
  DoDecl(StateDecl(QualifiedName("TakingOff", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "CommandSucceeded", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command received\\n", SourceInfo(286, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(285, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL))),
  DoDecl(StateDecl(QualifiedName("TakingOff", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "CommandFailed", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command failed\\n", SourceInfo(292, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(291, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL))),
  DoDecl(StateDecl(QualifiedName("Loitering", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: loitering...\\n", SourceInfo(305, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_17", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "battery_critical", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(313, 4)), Seq(Print("received battery_critical while Loitering\\n", SourceInfo(314, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(315, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL))),
  DoDecl(StateDecl(QualifiedName("Landing", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "zero", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 6, SourceInfo(324, 4)), Seq(Print("FlightControllerMachine: landing...\\n", SourceInfo(325, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("zero"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", Name("zero"), NIL)))), NONE, SourceInfo(326, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_land_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("homeAlt"), NIL)))))))))), NONE, SourceInfo(331, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_18", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "CommandSucceeded", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command received\\n", SourceInfo(336, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(335, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL))),
  DoDecl(StateDecl(QualifiedName("Landing", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "zero", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 6, SourceInfo(324, 4)), Seq(Print("FlightControllerMachine: landing...\\n", SourceInfo(325, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("zero"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", Name("zero"), NIL)))), NONE, SourceInfo(326, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_land_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("homeAlt"), NIL)))))))))), NONE, SourceInfo(331, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_18", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "CommandFailed", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command failed\\n", SourceInfo(342, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(341, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL))),
  DoDecl(StateDecl(QualifiedName("Landing", NIL), MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "zero", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 6, SourceInfo(324, 4)), Seq(Print("FlightControllerMachine: landing...\\n", SourceInfo(325, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("zero"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", Name("zero"), NIL)))), NONE, SourceInfo(326, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_land_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("homeAlt"), NIL)))))))))), NONE, SourceInfo(331, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_18", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "altitude_reached", AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: landed safely\\n", SourceInfo(347, 4)), NulStmt(POP, SourceInfo(348, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_19", BaseType(ANY)), NIL))),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Ite(BinApp(AND, Name("alive"), UnApp(NOT, Field(Name("status"), "isAlive"))), Seq(Print("FlightControllerMachine: Hearbeat message not received for a long time... is your drone dead?\\n", SourceInfo(84, 5)), Seq(Print("FlightControllerMachine: Not much we can actually do here, chances are we can't send commands either...\\n", SourceInfo(85, 5)), Assert(NulApp(FALSE), NIL, SourceInfo(86, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(82, 4)), Seq(BinStmt(ASSIGN, Name("alive"), Field(Name("status"), "isAlive"), SourceInfo(88, 4)), Seq(Ite(Name("alive"), Print("Heartbeat looks good.\\n", SourceInfo(91, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 4)), FunStmt("CheckState", NIL, NIL, 0, SourceInfo(93, 4))))), NmdTupType(NmdTupTypeField(NONE, "status", NameType("HeartbeatStatusType")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(97, 4)), Seq(Print("received battery_critical, raising fmom_battery_critical\\n", SourceInfo(98, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(99, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("GPSStatusV"), Name("gps_status"), SourceInfo(107, 4)), Seq(BinStmt(ASSIGN, Name("locked"), Field(Name("GPSStatusV"), "locked"), SourceInfo(108, 4)), Seq(Ite(UnApp(NOT, Field(Name("GPSStatusV"), "locked")), Print("FlightControllerMachine: GPS Lock lost.\\n", SourceInfo(111, 5)), Print("FlightControllerMachine: GPS Lock gained.\\n", SourceInfo(115, 5)), SourceInfo(109, 4)), FunStmt("CheckState", NIL, NIL, 1, SourceInfo(117, 4))))), NmdTupType(NmdTupTypeField(NONE, "gps_status", NameType("GPSHealthType")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("home"), Name("pos"), SourceInfo(122, 4)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("ev", Name("home_location"), NamedExprs("payload", Name("pos"), NIL)))), NONE, SourceInfo(123, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "conversion", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("conversion"), 2, SourceInfo(129, 4)), Seq(BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(130, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, Field(Name("pos"), "_alt"), NIL), Name("homeAlt"), 3, SourceInfo(131, 4)), FunStmt("DivFloat32", Exprs(NONE, Name("homeAlt"), Exprs(NONE, Name("conversion"), NIL)), Name("homeAlt"), 4, SourceInfo(132, 4))))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot arm until we hear from the drone\\n", SourceInfo(135, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until we hear from the drone\\n", SourceInfo(138, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until we hear from the drone\\n", SourceInfo(141, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take land until we hear from the drone\\n", SourceInfo(144, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected altitude_reached message\\n", SourceInfo(149, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_4", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected geofence_reached message\\n", SourceInfo(152, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_5", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("arming")), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(TRUE), SourceInfo(175, 5)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(1), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(176, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(173, 7)), NmdTupType(NmdTupTypeField(NONE, "_payload_7", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(183, 6)), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(TRUE), SourceInfo(184, 6)), Raise(Name("fmom_armed_ok"), NIL, SourceInfo(185, 6)))), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(FALSE), SourceInfo(188, 6)), Print("FlightControllerMachine: Disarmed\\n", SourceInfo(189, 6))), SourceInfo(182, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(181, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(199, 6)), Print("FlightControllerMachine: Arming failed\\n", SourceInfo(200, 6))), Print("FlightControllerMachine: Disarm failed\\n", SourceInfo(202, 6)), SourceInfo(198, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(197, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until drone is armed\\n", SourceInfo(208, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_8", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until drone is armed\\n", SourceInfo(211, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_9", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot land until drone is armed\\n", SourceInfo(214, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_10", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(221, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("LowBattery: we cannot fly\\n", SourceInfo(227, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_11", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("Drone is outside geo fence - flying back home !!\\n", SourceInfo(234, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_return_to_launch_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(235, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_12", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(POP, SourceInfo(252, 29)), NmdTupType(NmdTupTypeField(NONE, "_payload_14", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: todo: goto not implemented yet\\n", SourceInfo(257, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_15", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: landing ignored, we should already be on the ground\\n", SourceInfo(261, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_16", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(265, 4)), NulStmt(POP, SourceInfo(266, 4))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command received\\n", SourceInfo(286, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(285, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command failed\\n", SourceInfo(292, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(291, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: loitering...\\n", SourceInfo(305, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_17", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(313, 4)), Seq(Print("received battery_critical while Loitering\\n", SourceInfo(314, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(315, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "zero", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 6, SourceInfo(324, 4)), Seq(Print("FlightControllerMachine: landing...\\n", SourceInfo(325, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("zero"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", Name("zero"), NIL)))), NONE, SourceInfo(326, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_land_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("homeAlt"), NIL)))))))))), NONE, SourceInfo(331, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_18", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command received\\n", SourceInfo(336, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(335, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command failed\\n", SourceInfo(342, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(341, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: landed safely\\n", SourceInfo(347, 4)), NulStmt(POP, SourceInfo(348, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_19", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  FileInfo(FunDecl("CheckState", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NIL, NIL, NIL, Ite(BinApp(AND, BinApp(AND, Name("alive"), Name("locked")), UnApp(NOT, Name("battery_low"))), Raise(Name("fmom_ready"), NIL, SourceInfo(356, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(354, 3))), "file:///d:/git/safecps/systems/px4/lib/pfiles/flightcontroller.p"),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), ENTRY, 43),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("orb"), SourceInfo(44, 4)), Seq(BinStmt(ASSIGN, Name("commander"), New("CommanderMachine", Name("orb")), SourceInfo(47, 4)), Seq(NewStmt("HeartbeatMonitorMachine", Name("orb"), SourceInfo(50, 4)), Seq(NewStmt("GPSHealthMonitorMachine", Name("orb"), SourceInfo(53, 4)), Seq(NewStmt("BatteryMonitorMachine", Name("orb"), SourceInfo(56, 4)), Seq(BinStmt(ASSIGN, Name("altitudeMonitor"), New("AltitudeMonitorMachine", Name("orb")), SourceInfo(59, 4)), Seq(BinStmt(ASSIGN, Name("geofenceMonitor"), New("GeofenceMonitorMachine", Name("orb")), SourceInfo(62, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(65, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(67, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(69, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("global_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(70, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(72, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(74, 4)), Seq(Send(Name("geofenceMonitor"), Name("SetGeofenceRadius"), FunApp("IntToFloat32", Exprs(NONE, NulApp(10), NIL)), NONE, SourceInfo(76, 4)), Print("Waiting for heartbeat & GPS lock from drone...\\n", SourceInfo(78, 4)))))))))))))))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), EXIT, 79),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Ite(BinApp(AND, Name("alive"), UnApp(NOT, Field(Name("status"), "isAlive"))), Seq(Print("FlightControllerMachine: Hearbeat message not received for a long time... is your drone dead?\\n", SourceInfo(84, 5)), Seq(Print("FlightControllerMachine: Not much we can actually do here, chances are we can't send commands either...\\n", SourceInfo(85, 5)), Assert(NulApp(FALSE), NIL, SourceInfo(86, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(82, 4)), Seq(BinStmt(ASSIGN, Name("alive"), Field(Name("status"), "isAlive"), SourceInfo(88, 4)), Seq(Ite(Name("alive"), Print("Heartbeat looks good.\\n", SourceInfo(91, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 4)), FunStmt("CheckState", NIL, NIL, 0, SourceInfo(93, 4))))), NmdTupType(NmdTupTypeField(NONE, "status", NameType("HeartbeatStatusType")), NIL)), ENTRY, 81),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Ite(BinApp(AND, Name("alive"), UnApp(NOT, Field(Name("status"), "isAlive"))), Seq(Print("FlightControllerMachine: Hearbeat message not received for a long time... is your drone dead?\\n", SourceInfo(84, 5)), Seq(Print("FlightControllerMachine: Not much we can actually do here, chances are we can't send commands either...\\n", SourceInfo(85, 5)), Assert(NulApp(FALSE), NIL, SourceInfo(86, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(82, 4)), Seq(BinStmt(ASSIGN, Name("alive"), Field(Name("status"), "isAlive"), SourceInfo(88, 4)), Seq(Ite(Name("alive"), Print("Heartbeat looks good.\\n", SourceInfo(91, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 4)), FunStmt("CheckState", NIL, NIL, 0, SourceInfo(93, 4))))), NmdTupType(NmdTupTypeField(NONE, "status", NameType("HeartbeatStatusType")), NIL)), EXIT, 94),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(97, 4)), Seq(Print("received battery_critical, raising fmom_battery_critical\\n", SourceInfo(98, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(99, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), ENTRY, 96),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(97, 4)), Seq(Print("received battery_critical, raising fmom_battery_critical\\n", SourceInfo(98, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(99, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), EXIT, 100),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("GPSStatusV"), Name("gps_status"), SourceInfo(107, 4)), Seq(BinStmt(ASSIGN, Name("locked"), Field(Name("GPSStatusV"), "locked"), SourceInfo(108, 4)), Seq(Ite(UnApp(NOT, Field(Name("GPSStatusV"), "locked")), Print("FlightControllerMachine: GPS Lock lost.\\n", SourceInfo(111, 5)), Print("FlightControllerMachine: GPS Lock gained.\\n", SourceInfo(115, 5)), SourceInfo(109, 4)), FunStmt("CheckState", NIL, NIL, 1, SourceInfo(117, 4))))), NmdTupType(NmdTupTypeField(NONE, "gps_status", NameType("GPSHealthType")), NIL)), ENTRY, 106),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("GPSStatusV"), Name("gps_status"), SourceInfo(107, 4)), Seq(BinStmt(ASSIGN, Name("locked"), Field(Name("GPSStatusV"), "locked"), SourceInfo(108, 4)), Seq(Ite(UnApp(NOT, Field(Name("GPSStatusV"), "locked")), Print("FlightControllerMachine: GPS Lock lost.\\n", SourceInfo(111, 5)), Print("FlightControllerMachine: GPS Lock gained.\\n", SourceInfo(115, 5)), SourceInfo(109, 4)), FunStmt("CheckState", NIL, NIL, 1, SourceInfo(117, 4))))), NmdTupType(NmdTupTypeField(NONE, "gps_status", NameType("GPSHealthType")), NIL)), EXIT, 118),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("home"), Name("pos"), SourceInfo(122, 4)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("ev", Name("home_location"), NamedExprs("payload", Name("pos"), NIL)))), NONE, SourceInfo(123, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), ENTRY, 121),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("home"), Name("pos"), SourceInfo(122, 4)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("ev", Name("home_location"), NamedExprs("payload", Name("pos"), NIL)))), NONE, SourceInfo(123, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), EXIT, 124),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "conversion", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("conversion"), 2, SourceInfo(129, 4)), Seq(BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(130, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, Field(Name("pos"), "_alt"), NIL), Name("homeAlt"), 3, SourceInfo(131, 4)), FunStmt("DivFloat32", Exprs(NONE, Name("homeAlt"), Exprs(NONE, Name("conversion"), NIL)), Name("homeAlt"), 4, SourceInfo(132, 4))))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL)), ENTRY, 127),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "conversion", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("conversion"), 2, SourceInfo(129, 4)), Seq(BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(130, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, Field(Name("pos"), "_alt"), NIL), Name("homeAlt"), 3, SourceInfo(131, 4)), FunStmt("DivFloat32", Exprs(NONE, Name("homeAlt"), Exprs(NONE, Name("conversion"), NIL)), Name("homeAlt"), 4, SourceInfo(132, 4))))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL)), EXIT, 133),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot arm until we hear from the drone\\n", SourceInfo(135, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), ENTRY, 134),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot arm until we hear from the drone\\n", SourceInfo(135, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), EXIT, 136),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until we hear from the drone\\n", SourceInfo(138, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), ENTRY, 137),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until we hear from the drone\\n", SourceInfo(138, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_1", BaseType(ANY)), NIL)), EXIT, 139),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until we hear from the drone\\n", SourceInfo(141, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL)), ENTRY, 140),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until we hear from the drone\\n", SourceInfo(141, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_2", BaseType(ANY)), NIL)), EXIT, 142),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take land until we hear from the drone\\n", SourceInfo(144, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL)), ENTRY, 143),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take land until we hear from the drone\\n", SourceInfo(144, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_3", BaseType(ANY)), NIL)), EXIT, 145),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected altitude_reached message\\n", SourceInfo(149, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_4", BaseType(ANY)), NIL)), ENTRY, 148),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected altitude_reached message\\n", SourceInfo(149, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_4", BaseType(ANY)), NIL)), EXIT, 150),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected geofence_reached message\\n", SourceInfo(152, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_5", BaseType(ANY)), NIL)), ENTRY, 151),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("unexpected geofence_reached message\\n", SourceInfo(152, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_5", BaseType(ANY)), NIL)), EXIT, 153),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), ENTRY, 159),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: In standby mode\\n", SourceInfo(160, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_ready_topic", NIL), NamedExprs("ev", Name("mission_ready"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(163, 4)), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(165, 4)), Ite(Name("armed"), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(168, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(166, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_6", BaseType(ANY)), NIL)), EXIT, 170),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("arming")), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(TRUE), SourceInfo(175, 5)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(1), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(176, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(173, 7)), NmdTupType(NmdTupTypeField(NONE, "_payload_7", BaseType(ANY)), NIL)), ENTRY, 172),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(UnApp(NOT, Name("arming")), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(TRUE), SourceInfo(175, 5)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_component_arm_disarm_enum", NIL), NamedExprs("a1", NulApp(1), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(176, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(173, 7)), NmdTupType(NmdTupTypeField(NONE, "_payload_7", BaseType(ANY)), NIL)), EXIT, 178),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(183, 6)), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(TRUE), SourceInfo(184, 6)), Raise(Name("fmom_armed_ok"), NIL, SourceInfo(185, 6)))), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(FALSE), SourceInfo(188, 6)), Print("FlightControllerMachine: Disarmed\\n", SourceInfo(189, 6))), SourceInfo(182, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(181, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), ENTRY, 180),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(183, 6)), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(TRUE), SourceInfo(184, 6)), Raise(Name("fmom_armed_ok"), NIL, SourceInfo(185, 6)))), Seq(BinStmt(ASSIGN, Name("armed"), NulApp(FALSE), SourceInfo(188, 6)), Print("FlightControllerMachine: Disarmed\\n", SourceInfo(189, 6))), SourceInfo(182, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(181, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), EXIT, 192),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(199, 6)), Print("FlightControllerMachine: Arming failed\\n", SourceInfo(200, 6))), Print("FlightControllerMachine: Disarm failed\\n", SourceInfo(202, 6)), SourceInfo(198, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(197, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), ENTRY, 195),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_component_arm_disarm_enum", NIL)), Ite(Name("arming"), Seq(BinStmt(ASSIGN, Name("arming"), NulApp(FALSE), SourceInfo(199, 6)), Print("FlightControllerMachine: Arming failed\\n", SourceInfo(200, 6))), Print("FlightControllerMachine: Disarm failed\\n", SourceInfo(202, 6)), SourceInfo(198, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(197, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), EXIT, 205),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until drone is armed\\n", SourceInfo(208, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_8", BaseType(ANY)), NIL)), ENTRY, 207),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take off until drone is armed\\n", SourceInfo(208, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_8", BaseType(ANY)), NIL)), EXIT, 209),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until drone is armed\\n", SourceInfo(211, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_9", BaseType(ANY)), NIL)), ENTRY, 210),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot take execute mission until drone is armed\\n", SourceInfo(211, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_9", BaseType(ANY)), NIL)), EXIT, 212),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot land until drone is armed\\n", SourceInfo(214, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_10", BaseType(ANY)), NIL)), ENTRY, 213),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: Cannot land until drone is armed\\n", SourceInfo(214, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_10", BaseType(ANY)), NIL)), EXIT, 215),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(221, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL)), ENTRY, 220),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Name("gps"), Name("pos"), SourceInfo(221, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_global_position_int_t")), NIL)), EXIT, 222),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("LowBattery: we cannot fly\\n", SourceInfo(227, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_11", BaseType(ANY)), NIL)), ENTRY, 226),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("LowBattery: we cannot fly\\n", SourceInfo(227, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_11", BaseType(ANY)), NIL)), EXIT, 228),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("Drone is outside geo fence - flying back home !!\\n", SourceInfo(234, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_return_to_launch_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(235, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_12", BaseType(ANY)), NIL)), ENTRY, 233),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("Drone is outside geo fence - flying back home !!\\n", SourceInfo(234, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_return_to_launch_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", NulApp(0), NamedExprs("a5", NulApp(0), NamedExprs("a6", NulApp(0), NamedExprs("a7", NulApp(0), NIL)))))))))), NONE, SourceInfo(235, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_12", BaseType(ANY)), NIL)), EXIT, 236),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), ENTRY, 240),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: **** Drone is ARMED ****\\n", SourceInfo(241, 7)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("mission_armed_topic", NIL), NamedExprs("ev", Name("mission_armed"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(242, 4)), Ite(Name("battery_low"), NulStmt(POP, SourceInfo(246, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(244, 4)))), NmdTupType(NmdTupTypeField(NONE, "_payload_13", BaseType(ANY)), NIL)), EXIT, 248),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(POP, SourceInfo(252, 29)), NmdTupType(NmdTupTypeField(NONE, "_payload_14", BaseType(ANY)), NIL)), ENTRY, 252),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(POP, SourceInfo(252, 29)), NmdTupType(NmdTupTypeField(NONE, "_payload_14", BaseType(ANY)), NIL)), EXIT, 252),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: todo: goto not implemented yet\\n", SourceInfo(257, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_15", BaseType(ANY)), NIL)), ENTRY, 256),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: todo: goto not implemented yet\\n", SourceInfo(257, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_15", BaseType(ANY)), NIL)), EXIT, 258),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: landing ignored, we should already be on the ground\\n", SourceInfo(261, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_16", BaseType(ANY)), NIL)), ENTRY, 260),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: landing ignored, we should already be on the ground\\n", SourceInfo(261, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_16", BaseType(ANY)), NIL)), EXIT, 262),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(265, 4)), NulStmt(POP, SourceInfo(266, 4))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), ENTRY, 264),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(265, 4)), NulStmt(POP, SourceInfo(266, 4))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), EXIT, 267),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), ENTRY, 273),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "target_alt", NameType("float32")), NIL), Seq(Print("FlightControllerMachine: taking off...\\n", SourceInfo(275, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("alt"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", FunApp("IntToFloat32", Exprs(NONE, NulApp(1), NIL)), NIL)))), NONE, SourceInfo(276, 4)), Seq(FunStmt("AddFloat32", Exprs(NONE, Name("alt"), Exprs(NONE, Name("homeAlt"), NIL)), Name("target_alt"), 5, SourceInfo(277, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_takeoff_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("target_alt"), NIL)))))))))), NONE, SourceInfo(280, 4))))), NmdTupType(NmdTupTypeField(NONE, "alt", NameType("float32")), NIL)), EXIT, 281),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command received\\n", SourceInfo(286, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(285, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), ENTRY, 284),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command received\\n", SourceInfo(286, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(285, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), EXIT, 288),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command failed\\n", SourceInfo(292, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(291, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), ENTRY, 290),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_takeoff_enum", NIL)), Print("FlightControllerMachine: take off command failed\\n", SourceInfo(292, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(291, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), EXIT, 294),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: loitering...\\n", SourceInfo(305, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_17", BaseType(ANY)), NIL)), ENTRY, 304),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Print("FlightControllerMachine: loitering...\\n", SourceInfo(305, 4)), NmdTupType(NmdTupTypeField(NONE, "_payload_17", BaseType(ANY)), NIL)), EXIT, 306),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(313, 4)), Seq(Print("received battery_critical while Loitering\\n", SourceInfo(314, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(315, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), ENTRY, 312),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("battery_low"), Name("critical"), SourceInfo(313, 4)), Seq(Print("received battery_critical while Loitering\\n", SourceInfo(314, 4)), Raise(Name("fmom_battery_critical"), NIL, SourceInfo(315, 4)))), NmdTupType(NmdTupTypeField(NONE, "critical", BaseType(BOOL)), NIL)), EXIT, 316),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "zero", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 6, SourceInfo(324, 4)), Seq(Print("FlightControllerMachine: landing...\\n", SourceInfo(325, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("zero"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", Name("zero"), NIL)))), NONE, SourceInfo(326, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_land_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("homeAlt"), NIL)))))))))), NONE, SourceInfo(331, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_18", BaseType(ANY)), NIL)), ENTRY, 322),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "zero", NameType("float32")), NIL), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 6, SourceInfo(324, 4)), Seq(Print("FlightControllerMachine: landing...\\n", SourceInfo(325, 4)), Seq(Send(Name("altitudeMonitor"), Name("SetTargetAltitude"), NamedTuple(NamedExprs("target", Name("zero"), NamedExprs("home", Field(Name("home"), "_z"), NamedExprs("delta", Name("zero"), NIL)))), NONE, SourceInfo(326, 4)), Send(Name("commander"), Name("Command"), NamedTuple(NamedExprs("caller", NulApp(THIS), NamedExprs("command", FunApp("mav_cmd_nav_land_enum", NIL), NamedExprs("a1", NulApp(0), NamedExprs("a2", NulApp(0), NamedExprs("a3", NulApp(0), NamedExprs("a4", Field(Name("gps"), "_hdg"), NamedExprs("a5", Field(Name("gps"), "_lat"), NamedExprs("a6", Field(Name("gps"), "_lon"), NamedExprs("a7", Name("homeAlt"), NIL)))))))))), NONE, SourceInfo(331, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_18", BaseType(ANY)), NIL)), EXIT, 332),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command received\\n", SourceInfo(336, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(335, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), ENTRY, 334),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command received\\n", SourceInfo(336, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(335, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), EXIT, 338),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command failed\\n", SourceInfo(342, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(341, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), ENTRY, 340),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(EQ, Name("cmd"), FunApp("mav_cmd_nav_land_enum", NIL)), Print("FlightControllerMachine: landing command failed\\n", SourceInfo(342, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(341, 4)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NIL)), EXIT, 344),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: landed safely\\n", SourceInfo(347, 4)), NulStmt(POP, SourceInfo(348, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_19", BaseType(ANY)), NIL)), ENTRY, 346),
  LineInfo(AnonFunDecl(MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("FlightControllerMachine: landed safely\\n", SourceInfo(347, 4)), NulStmt(POP, SourceInfo(348, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_19", BaseType(ANY)), NIL)), EXIT, 349),
  LineInfo(FunDecl("CheckState", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NIL, NIL, NIL, Ite(BinApp(AND, BinApp(AND, Name("alive"), Name("locked")), UnApp(NOT, Name("battery_low"))), Raise(Name("fmom_ready"), NIL, SourceInfo(356, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(354, 3))), ENTRY, 353),
  LineInfo(FunDecl("CheckState", MachineDecl("FlightControllerMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NIL, NIL, NIL, Ite(BinApp(AND, BinApp(AND, Name("alive"), Name("locked")), UnApp(NOT, Name("battery_low"))), Raise(Name("fmom_ready"), NIL, SourceInfo(356, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(354, 3))), EXIT, 358).
}

model Timer_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  EventDecl("timer_start", NIL, BaseType(INT)),
  EventDecl("timer_cancel", NIL, NIL),
  EventDecl("timer_timeout", NIL, BaseType(REAL)),
  EventDecl("timer_cancel_success", NIL, BaseType(REAL)),
  EventDecl("timer_cancel_failure", NIL, BaseType(REAL)),
  EventDecl("timer_init", NIL, NIL),
  MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("clientV"), Name("payload"), SourceInfo(16, 7)), Raise(Name("timer_init"), NIL, SourceInfo(18, 7))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("WaitForReq", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("WaitForCancel", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("clientV", MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("clientV"), Name("payload"), SourceInfo(16, 7)), Raise(Name("timer_init"), NIL, SourceInfo(18, 7))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_init", QualifiedName("WaitForReq", NIL), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("WaitForReq", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_cancel", QualifiedName("WaitForReq", NIL), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(25, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_0", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("WaitForReq", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_start", QualifiedName("WaitForCancel", NIL), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("WaitForCancel", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), NULL, QualifiedName("WaitForReq", NIL), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(33, 3)), NmdTupType(NmdTupTypeField(REF, "_payload_1", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("WaitForCancel", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_cancel", QualifiedName("WaitForReq", NIL), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(NulApp(NONDET), Send(Name("clientV"), Name("timer_cancel_success"), NulApp(THIS), NONE, SourceInfo(37, 9)), Seq(Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(39, 9)), Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(40, 9))), SourceInfo(36, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_2", BaseType(ANY)), NIL))),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("clientV"), Name("payload"), SourceInfo(16, 7)), Raise(Name("timer_init"), NIL, SourceInfo(18, 7))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(25, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_0", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(33, 3)), NmdTupType(NmdTupTypeField(REF, "_payload_1", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(NulApp(NONDET), Send(Name("clientV"), Name("timer_cancel_success"), NulApp(THIS), NONE, SourceInfo(37, 9)), Seq(Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(39, 9)), Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(40, 9))), SourceInfo(36, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_2", BaseType(ANY)), NIL)),
  DoDecl(StateDecl(QualifiedName("WaitForCancel", NIL), MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_start", IGNORE),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("clientV"), Name("payload"), SourceInfo(16, 7)), Raise(Name("timer_init"), NIL, SourceInfo(18, 7))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/timer.p"),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(25, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_0", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/timer.p"),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(33, 3)), NmdTupType(NmdTupTypeField(REF, "_payload_1", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/timer.p"),
  FileInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(NulApp(NONDET), Send(Name("clientV"), Name("timer_cancel_success"), NulApp(THIS), NONE, SourceInfo(37, 9)), Seq(Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(39, 9)), Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(40, 9))), SourceInfo(36, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_2", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/timer.p"),
  LineInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("clientV"), Name("payload"), SourceInfo(16, 7)), Raise(Name("timer_init"), NIL, SourceInfo(18, 7))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), ENTRY, 15),
  LineInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("clientV"), Name("payload"), SourceInfo(16, 7)), Raise(Name("timer_init"), NIL, SourceInfo(18, 7))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), EXIT, 19),
  LineInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(25, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_0", BaseType(ANY)), NIL)), ENTRY, 24),
  LineInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(25, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_0", BaseType(ANY)), NIL)), EXIT, 26),
  LineInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(33, 3)), NmdTupType(NmdTupTypeField(REF, "_payload_1", BaseType(ANY)), NIL)), ENTRY, 32),
  LineInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(33, 3)), NmdTupType(NmdTupTypeField(REF, "_payload_1", BaseType(ANY)), NIL)), EXIT, 34),
  LineInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(NulApp(NONDET), Send(Name("clientV"), Name("timer_cancel_success"), NulApp(THIS), NONE, SourceInfo(37, 9)), Seq(Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(39, 9)), Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(40, 9))), SourceInfo(36, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_2", BaseType(ANY)), NIL)), ENTRY, 35),
  LineInfo(AnonFunDecl(MachineDecl("TimerMachine", MODEL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(NulApp(NONDET), Send(Name("clientV"), Name("timer_cancel_success"), NulApp(THIS), NONE, SourceInfo(37, 9)), Seq(Send(Name("clientV"), Name("timer_cancel_failure"), NulApp(THIS), NONE, SourceInfo(39, 9)), Send(Name("clientV"), Name("timer_timeout"), NulApp(THIS), NONE, SourceInfo(40, 9))), SourceInfo(36, 7)), NmdTupType(NmdTupTypeField(REF, "_payload_2", BaseType(ANY)), NIL)), EXIT, 42).
}

model POrbTopics_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  TypeDef("HeartbeatStatusType", NmdTupType(NmdTupTypeField(NONE, "isAlive", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "lastBeat", BaseType(INT)), NIL))),
  TypeDef("GPSHealthType", NmdTupType(NmdTupTypeField(NONE, "locked", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "satellites", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "fix_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "precision", BaseType(INT)), NIL))))),
  EventDecl("global_position", NIL, NameType("mavlink_global_position_int_t")),
  EventDecl("local_position", NIL, NameType("mavlink_local_position_ned_t")),
  EventDecl("battery_status", NIL, NameType("mavlink_battery_status_t")),
  EventDecl("attitude", NIL, NameType("mavlink_attitude_t")),
  EventDecl("gps_status", NIL, NameType("mavlink_gps_status_t")),
  EventDecl("heartbeat", NIL, NameType("mavlink_heartbeat_t")),
  EventDecl("command_ack", NIL, NameType("mavlink_command_ack_t")),
  EventDecl("gps_raw_int", NIL, NameType("mavlink_gps_raw_int_t")),
  EventDecl("mission_ready", NIL, BaseType(BOOL)),
  EventDecl("mission_armed", NIL, BaseType(BOOL)),
  EventDecl("battery_critical", NIL, BaseType(BOOL)),
  EventDecl("extended_sys_state", NIL, NameType("mavlink_extended_sys_state_t")),
  EventDecl("altitude_reached", NIL, BaseType(BOOL)),
  EventDecl("geofence_reached", NIL, BaseType(BOOL)),
  EventDecl("home_location", NIL, NameType("mavlink_local_position_ned_t")),
  EventDecl("heartbeatmonitoring", NIL, NameType("HeartbeatStatusType")),
  EventDecl("gps_healthmonitoring", NIL, NameType("GPSHealthType")),
  FunDecl("global_position_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(24, 36))),
  FunDecl("local_position_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(25, 36))),
  FunDecl("battery_status_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(26, 36))),
  FunDecl("attitude_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(27, 30))),
  FunDecl("gps_status_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(28, 32))),
  FunDecl("heartbeat_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(29, 31))),
  FunDecl("command_ack_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(30, 33))),
  FunDecl("gps_raw_int_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(31, 33))),
  FunDecl("heartbeathealth_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(32, 37))),
  FunDecl("gps_healthmonitoring_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(33, 42))),
  FunDecl("mission_ready_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(34, 35))),
  FunDecl("mission_armed_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(35, 35))),
  FunDecl("battery_critical_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(36, 37))),
  FunDecl("extended_sys_state_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(37, 39))),
  FunDecl("altitude_reached_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(38, 37))),
  FunDecl("geofence_reached_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(39, 37))),
  FunDecl("home_location_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(40, 34))),
  FunDecl("GetSystemTime", NIL, MODEL, NIL, BaseType(INT), NIL, NulStmt(SKIP, SourceInfo(0, 0))),
  FileInfo(FunDecl("global_position_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(24, 36))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("local_position_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(25, 36))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("battery_status_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(26, 36))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("attitude_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(27, 30))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("gps_status_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(28, 32))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("heartbeat_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(29, 31))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("command_ack_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(30, 33))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("gps_raw_int_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(31, 33))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("heartbeathealth_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(32, 37))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("gps_healthmonitoring_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(33, 42))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("mission_ready_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(34, 35))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("mission_armed_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(35, 35))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("battery_critical_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(36, 37))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("extended_sys_state_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(37, 39))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("altitude_reached_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(38, 37))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("geofence_reached_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(39, 37))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("home_location_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(40, 34))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  FileInfo(FunDecl("GetSystemTime", NIL, MODEL, NIL, BaseType(INT), NIL, NulStmt(SKIP, SourceInfo(0, 0))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porbtopics.p"),
  LineInfo(FunDecl("global_position_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(24, 36))), ENTRY, 24),
  LineInfo(FunDecl("global_position_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(24, 36))), EXIT, 24),
  LineInfo(FunDecl("local_position_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(25, 36))), ENTRY, 25),
  LineInfo(FunDecl("local_position_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(25, 36))), EXIT, 25),
  LineInfo(FunDecl("battery_status_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(26, 36))), ENTRY, 26),
  LineInfo(FunDecl("battery_status_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(26, 36))), EXIT, 26),
  LineInfo(FunDecl("attitude_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(27, 30))), ENTRY, 27),
  LineInfo(FunDecl("attitude_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(27, 30))), EXIT, 27),
  LineInfo(FunDecl("gps_status_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(28, 32))), ENTRY, 28),
  LineInfo(FunDecl("gps_status_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(28, 32))), EXIT, 28),
  LineInfo(FunDecl("heartbeat_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(29, 31))), ENTRY, 29),
  LineInfo(FunDecl("heartbeat_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(29, 31))), EXIT, 29),
  LineInfo(FunDecl("command_ack_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(30, 33))), ENTRY, 30),
  LineInfo(FunDecl("command_ack_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(30, 33))), EXIT, 30),
  LineInfo(FunDecl("gps_raw_int_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(31, 33))), ENTRY, 31),
  LineInfo(FunDecl("gps_raw_int_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(31, 33))), EXIT, 31),
  LineInfo(FunDecl("heartbeathealth_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(32, 37))), ENTRY, 32),
  LineInfo(FunDecl("heartbeathealth_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(32, 37))), EXIT, 32),
  LineInfo(FunDecl("gps_healthmonitoring_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(33, 42))), ENTRY, 33),
  LineInfo(FunDecl("gps_healthmonitoring_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(33, 42))), EXIT, 33),
  LineInfo(FunDecl("mission_ready_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(34, 35))), ENTRY, 34),
  LineInfo(FunDecl("mission_ready_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(34, 35))), EXIT, 34),
  LineInfo(FunDecl("mission_armed_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(35, 35))), ENTRY, 35),
  LineInfo(FunDecl("mission_armed_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(35, 35))), EXIT, 35),
  LineInfo(FunDecl("battery_critical_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(36, 37))), ENTRY, 36),
  LineInfo(FunDecl("battery_critical_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(36, 37))), EXIT, 36),
  LineInfo(FunDecl("extended_sys_state_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(37, 39))), ENTRY, 37),
  LineInfo(FunDecl("extended_sys_state_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(37, 39))), EXIT, 37),
  LineInfo(FunDecl("altitude_reached_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(38, 37))), ENTRY, 38),
  LineInfo(FunDecl("altitude_reached_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(38, 37))), EXIT, 38),
  LineInfo(FunDecl("geofence_reached_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(39, 37))), ENTRY, 39),
  LineInfo(FunDecl("geofence_reached_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(39, 37))), EXIT, 39),
  LineInfo(FunDecl("home_location_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(40, 34))), ENTRY, 40),
  LineInfo(FunDecl("home_location_topic", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(40, 34))), EXIT, 40),
  LineInfo(FunDecl("GetSystemTime", NIL, MODEL, NIL, BaseType(INT), NIL, NulStmt(SKIP, SourceInfo(0, 0))), ENTRY, 69),
  LineInfo(FunDecl("GetSystemTime", NIL, MODEL, NIL, BaseType(INT), NIL, NulStmt(SKIP, SourceInfo(0, 0))), EXIT, 71).
}

model AllEnums_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  FunDecl("PX4_STATUS_NO_HEARTBEAT", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(4, 39))),
  FileInfo(FunDecl("PX4_STATUS_NO_HEARTBEAT", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(4, 39))), "file:///d:/git/safecps/systems/px4/lib/pfiles/allenums.p"),
  LineInfo(FunDecl("PX4_STATUS_NO_HEARTBEAT", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(4, 39))), ENTRY, 4),
  LineInfo(FunDecl("PX4_STATUS_NO_HEARTBEAT", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(4, 39))), EXIT, 4).
}

model POrb_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  TypeDef("POrbSubMsgType", NmdTupType(NmdTupTypeField(NONE, "topic", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "sub", BaseType(REAL)), NIL))),
  TypeDef("POrbPubMsgType", NmdTupType(NmdTupTypeField(NONE, "topic", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "ev", BaseType(EVENT)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(ANY)), NIL)))),
  EventDecl("POrbSubscribe", NIL, NameType("POrbSubMsgType")),
  EventDecl("POrbPublish", NIL, NameType("POrbPubMsgType")),
  EventDecl("porb_local", NIL, NIL),
  MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(FunStmt("InitializeListener", Exprs(NONE, NulApp(THIS), NIL), NIL, 0, SourceInfo(23, 4)), Raise(Name("porb_local"), NIL, SourceInfo(24, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("ReadMessagesAndPublish", NIL), MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("topicSubscribers", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), MapType(BaseType(INT), SeqType(BaseType(REAL)))),
  VarDecl("index", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(INT)),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(FunStmt("InitializeListener", Exprs(NONE, NulApp(THIS), NIL), NIL, 0, SourceInfo(23, 4)), Raise(Name("porb_local"), NIL, SourceInfo(24, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "porb_local", QualifiedName("ReadMessagesAndPublish", NIL), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  FunDecl("InitializeListener", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), MODEL, NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0))),
  FunDecl("Publish", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NmdTupType(NmdTupTypeField(NONE, "machines", SeqType(BaseType(REAL))), NmdTupType(NmdTupTypeField(NONE, "ev", BaseType(EVENT)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(ANY)), NIL))), NIL, NIL, Seq(BinStmt(ASSIGN, Name("index"), NulApp(0), SourceInfo(32, 3)), While(BinApp(LT, Name("index"), UnApp(SIZEOF, Name("machines"))), Seq(Send(BinApp(IDX, Name("machines"), Name("index")), Name("ev"), Name("payload"), NONE, SourceInfo(35, 4)), BinStmt(ASSIGN, Name("index"), BinApp(ADD, Name("index"), NulApp(1)), SourceInfo(36, 7))), SourceInfo(33, 3)))),
  AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(FunStmt("InitializeListener", Exprs(NONE, NulApp(THIS), NIL), NIL, 0, SourceInfo(23, 4)), Raise(Name("porb_local"), NIL, SourceInfo(24, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), FunStmt("Publish", Exprs(NONE, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Exprs(NONE, Field(Name("payload"), "ev"), Exprs(NONE, Field(Name("payload"), "payload"), NIL))), NIL, 1, SourceInfo(43, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(42, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbPubMsgType")), NIL)),
  AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(49, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Default(SeqType(BaseType(REAL))), SourceInfo(53, 5)), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(54, 5))), SourceInfo(47, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbSubMsgType")), NIL)),
  DoDecl(StateDecl(QualifiedName("ReadMessagesAndPublish", NIL), MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "POrbPublish", AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), FunStmt("Publish", Exprs(NONE, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Exprs(NONE, Field(Name("payload"), "ev"), Exprs(NONE, Field(Name("payload"), "payload"), NIL))), NIL, 1, SourceInfo(43, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(42, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbPubMsgType")), NIL))),
  DoDecl(StateDecl(QualifiedName("ReadMessagesAndPublish", NIL), MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "POrbSubscribe", AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(49, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Default(SeqType(BaseType(REAL))), SourceInfo(53, 5)), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(54, 5))), SourceInfo(47, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbSubMsgType")), NIL))),
  FileInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(FunStmt("InitializeListener", Exprs(NONE, NulApp(THIS), NIL), NIL, 0, SourceInfo(23, 4)), Raise(Name("porb_local"), NIL, SourceInfo(24, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/porb.p"),
  FileInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(FunDecl("InitializeListener", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), MODEL, NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porb.p"),
  FileInfo(FunDecl("Publish", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NmdTupType(NmdTupTypeField(NONE, "machines", SeqType(BaseType(REAL))), NmdTupType(NmdTupTypeField(NONE, "ev", BaseType(EVENT)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(ANY)), NIL))), NIL, NIL, Seq(BinStmt(ASSIGN, Name("index"), NulApp(0), SourceInfo(32, 3)), While(BinApp(LT, Name("index"), UnApp(SIZEOF, Name("machines"))), Seq(Send(BinApp(IDX, Name("machines"), Name("index")), Name("ev"), Name("payload"), NONE, SourceInfo(35, 4)), BinStmt(ASSIGN, Name("index"), BinApp(ADD, Name("index"), NulApp(1)), SourceInfo(36, 7))), SourceInfo(33, 3)))), "file:///d:/git/safecps/systems/px4/lib/pfiles/porb.p"),
  FileInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), FunStmt("Publish", Exprs(NONE, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Exprs(NONE, Field(Name("payload"), "ev"), Exprs(NONE, Field(Name("payload"), "payload"), NIL))), NIL, 1, SourceInfo(43, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(42, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbPubMsgType")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/porb.p"),
  FileInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(49, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Default(SeqType(BaseType(REAL))), SourceInfo(53, 5)), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(54, 5))), SourceInfo(47, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbSubMsgType")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/porb.p"),
  LineInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(FunStmt("InitializeListener", Exprs(NONE, NulApp(THIS), NIL), NIL, 0, SourceInfo(23, 4)), Raise(Name("porb_local"), NIL, SourceInfo(24, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), ENTRY, 22),
  LineInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(FunStmt("InitializeListener", Exprs(NONE, NulApp(THIS), NIL), NIL, 0, SourceInfo(23, 4)), Raise(Name("porb_local"), NIL, SourceInfo(24, 4))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), EXIT, 25),
  LineInfo(FunDecl("InitializeListener", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), MODEL, NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0))), ENTRY, 28),
  LineInfo(FunDecl("InitializeListener", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), MODEL, NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0))), EXIT, 30),
  LineInfo(FunDecl("Publish", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NmdTupType(NmdTupTypeField(NONE, "machines", SeqType(BaseType(REAL))), NmdTupType(NmdTupTypeField(NONE, "ev", BaseType(EVENT)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(ANY)), NIL))), NIL, NIL, Seq(BinStmt(ASSIGN, Name("index"), NulApp(0), SourceInfo(32, 3)), While(BinApp(LT, Name("index"), UnApp(SIZEOF, Name("machines"))), Seq(Send(BinApp(IDX, Name("machines"), Name("index")), Name("ev"), Name("payload"), NONE, SourceInfo(35, 4)), BinStmt(ASSIGN, Name("index"), BinApp(ADD, Name("index"), NulApp(1)), SourceInfo(36, 7))), SourceInfo(33, 3)))), ENTRY, 31),
  LineInfo(FunDecl("Publish", MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NmdTupType(NmdTupTypeField(NONE, "machines", SeqType(BaseType(REAL))), NmdTupType(NmdTupTypeField(NONE, "ev", BaseType(EVENT)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(ANY)), NIL))), NIL, NIL, Seq(BinStmt(ASSIGN, Name("index"), NulApp(0), SourceInfo(32, 3)), While(BinApp(LT, Name("index"), UnApp(SIZEOF, Name("machines"))), Seq(Send(BinApp(IDX, Name("machines"), Name("index")), Name("ev"), Name("payload"), NONE, SourceInfo(35, 4)), BinStmt(ASSIGN, Name("index"), BinApp(ADD, Name("index"), NulApp(1)), SourceInfo(36, 7))), SourceInfo(33, 3)))), EXIT, 38),
  LineInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), FunStmt("Publish", Exprs(NONE, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Exprs(NONE, Field(Name("payload"), "ev"), Exprs(NONE, Field(Name("payload"), "payload"), NIL))), NIL, 1, SourceInfo(43, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(42, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbPubMsgType")), NIL)), ENTRY, 41),
  LineInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), FunStmt("Publish", Exprs(NONE, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Exprs(NONE, Field(Name("payload"), "ev"), Exprs(NONE, Field(Name("payload"), "payload"), NIL))), NIL, 1, SourceInfo(43, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(42, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbPubMsgType")), NIL)), EXIT, 44),
  LineInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(49, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Default(SeqType(BaseType(REAL))), SourceInfo(53, 5)), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(54, 5))), SourceInfo(47, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbSubMsgType")), NIL)), ENTRY, 46),
  LineInfo(AnonFunDecl(MachineDecl("POrbMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "topic"), Name("topicSubscribers")), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(49, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Default(SeqType(BaseType(REAL))), SourceInfo(53, 5)), BinStmt(INSERT, BinApp(IDX, Name("topicSubscribers"), Field(Name("payload"), "topic")), Tuple(Exprs(NONE, NulApp(0), Exprs(NONE, Field(Name("payload"), "sub"), NIL))), SourceInfo(54, 5))), SourceInfo(47, 4)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("POrbSubMsgType")), NIL)), EXIT, 56).
}

model HeartbeatMonitor_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  EventDecl("heartbeat_monitor_local", NIL, NIL),
  EventDecl("heartbeat_monitor_failed", NIL, NIL),
  MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(14, 4)), Seq(BinStmt(ASSIGN, Name("heartbeatTimerV"), New("TimerMachine", NulApp(THIS)), SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeat_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(18, 4)), Seq(Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(20, 4)), Raise(Name("heartbeat_monitor_local"), NIL, SourceInfo(22, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("MonitorHeartbeat", NIL), MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("HeartbeatFailed", NIL), MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("POrbV", MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("heartbeatStatus", MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("HeartbeatStatusType")),
  VarDecl("heartbeatTimerV", MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(14, 4)), Seq(BinStmt(ASSIGN, Name("heartbeatTimerV"), New("TimerMachine", NulApp(THIS)), SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeat_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(18, 4)), Seq(Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(20, 4)), Raise(Name("heartbeat_monitor_local"), NIL, SourceInfo(22, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "heartbeat_monitor_local", QualifiedName("MonitorHeartbeat", NIL), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("MonitorHeartbeat", NIL), MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "heartbeat_monitor_failed", QualifiedName("HeartbeatFailed", NIL), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  FunDecl("CancelTimer", MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL), BaseType(BOOL), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(62, 3)), Seq(Receive(Cases("timer_cancel_failure", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(75, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(FALSE), SourceInfo(76, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), Cases("timer_cancel_success", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(68, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(TRUE), SourceInfo(69, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), NIL)), 1, SourceInfo(63, 3)), Return(Name("timerCanceled"), SourceInfo(79, 3))))),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(14, 4)), Seq(BinStmt(ASSIGN, Name("heartbeatTimerV"), New("TimerMachine", NulApp(THIS)), SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeat_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(18, 4)), Seq(Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(20, 4)), Raise(Name("heartbeat_monitor_local"), NIL, SourceInfo(22, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Print(".", SourceInfo(32, 7)), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "lastBeat"), FunApp("GetSystemTime", NIL), SourceInfo(34, 4)), Seq(FunStmt("CancelTimer", Exprs(NONE, Name("heartbeatTimerV"), NIL), Name("timerCanceled"), 0, SourceInfo(36, 4)), Seq(Ite(Name("timerCanceled"), Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(38, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(37, 4)), Ite(UnApp(NOT, Field(Name("heartbeatStatus"), "isAlive")), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(TRUE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("mavlink_heartbeat_t")), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(FALSE), SourceInfo(48, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(49, 4)), Raise(Name("heartbeat_monitor_failed"), NIL, SourceInfo(50, 4)))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(68, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(TRUE), SourceInfo(69, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))),
  AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(75, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(FALSE), SourceInfo(76, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))),
  DoDecl(StateDecl(QualifiedName("MonitorHeartbeat", NIL), MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "heartbeat", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Print(".", SourceInfo(32, 7)), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "lastBeat"), FunApp("GetSystemTime", NIL), SourceInfo(34, 4)), Seq(FunStmt("CancelTimer", Exprs(NONE, Name("heartbeatTimerV"), NIL), Name("timerCanceled"), 0, SourceInfo(36, 4)), Seq(Ite(Name("timerCanceled"), Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(38, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(37, 4)), Ite(UnApp(NOT, Field(Name("heartbeatStatus"), "isAlive")), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(TRUE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("mavlink_heartbeat_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("MonitorHeartbeat", NIL), MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "timer_timeout", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(FALSE), SourceInfo(48, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(49, 4)), Raise(Name("heartbeat_monitor_failed"), NIL, SourceInfo(50, 4)))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL))),
  DoDecl(StateDecl(QualifiedName("HeartbeatFailed", NIL), MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "heartbeat", IGNORE),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(14, 4)), Seq(BinStmt(ASSIGN, Name("heartbeatTimerV"), New("TimerMachine", NulApp(THIS)), SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeat_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(18, 4)), Seq(Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(20, 4)), Raise(Name("heartbeat_monitor_local"), NIL, SourceInfo(22, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/heartbeatmonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Print(".", SourceInfo(32, 7)), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "lastBeat"), FunApp("GetSystemTime", NIL), SourceInfo(34, 4)), Seq(FunStmt("CancelTimer", Exprs(NONE, Name("heartbeatTimerV"), NIL), Name("timerCanceled"), 0, SourceInfo(36, 4)), Seq(Ite(Name("timerCanceled"), Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(38, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(37, 4)), Ite(UnApp(NOT, Field(Name("heartbeatStatus"), "isAlive")), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(TRUE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("mavlink_heartbeat_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/heartbeatmonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(FALSE), SourceInfo(48, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(49, 4)), Raise(Name("heartbeat_monitor_failed"), NIL, SourceInfo(50, 4)))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/heartbeatmonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(68, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(TRUE), SourceInfo(69, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), "file:///d:/git/safecps/systems/px4/lib/pfiles/heartbeatmonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(75, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(FALSE), SourceInfo(76, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), "file:///d:/git/safecps/systems/px4/lib/pfiles/heartbeatmonitor.p"),
  FileInfo(FunDecl("CancelTimer", MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL), BaseType(BOOL), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(62, 3)), Seq(Receive(Cases("timer_cancel_failure", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(75, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(FALSE), SourceInfo(76, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), Cases("timer_cancel_success", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(68, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(TRUE), SourceInfo(69, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), NIL)), 1, SourceInfo(63, 3)), Return(Name("timerCanceled"), SourceInfo(79, 3))))), "file:///d:/git/safecps/systems/px4/lib/pfiles/heartbeatmonitor.p"),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(14, 4)), Seq(BinStmt(ASSIGN, Name("heartbeatTimerV"), New("TimerMachine", NulApp(THIS)), SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeat_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(18, 4)), Seq(Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(20, 4)), Raise(Name("heartbeat_monitor_local"), NIL, SourceInfo(22, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), ENTRY, 13),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(14, 4)), Seq(BinStmt(ASSIGN, Name("heartbeatTimerV"), New("TimerMachine", NulApp(THIS)), SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("heartbeat_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(18, 4)), Seq(Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(20, 4)), Raise(Name("heartbeat_monitor_local"), NIL, SourceInfo(22, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), EXIT, 23),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Print(".", SourceInfo(32, 7)), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "lastBeat"), FunApp("GetSystemTime", NIL), SourceInfo(34, 4)), Seq(FunStmt("CancelTimer", Exprs(NONE, Name("heartbeatTimerV"), NIL), Name("timerCanceled"), 0, SourceInfo(36, 4)), Seq(Ite(Name("timerCanceled"), Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(38, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(37, 4)), Ite(UnApp(NOT, Field(Name("heartbeatStatus"), "isAlive")), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(TRUE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("mavlink_heartbeat_t")), NIL)), ENTRY, 29),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Print(".", SourceInfo(32, 7)), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "lastBeat"), FunApp("GetSystemTime", NIL), SourceInfo(34, 4)), Seq(FunStmt("CancelTimer", Exprs(NONE, Name("heartbeatTimerV"), NIL), Name("timerCanceled"), 0, SourceInfo(36, 4)), Seq(Ite(Name("timerCanceled"), Send(Name("heartbeatTimerV"), Name("timer_start"), NulApp(10000), NONE, SourceInfo(38, 5)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(37, 4)), Ite(UnApp(NOT, Field(Name("heartbeatStatus"), "isAlive")), Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(TRUE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("mavlink_heartbeat_t")), NIL)), EXIT, 45),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(FALSE), SourceInfo(48, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(49, 4)), Raise(Name("heartbeat_monitor_failed"), NIL, SourceInfo(50, 4)))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL)), ENTRY, 46),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("heartbeatStatus"), "isAlive"), NulApp(FALSE), SourceInfo(48, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("heartbeathealth_topic", NIL), NamedExprs("ev", Name("heartbeatmonitoring"), NamedExprs("payload", Name("heartbeatStatus"), NIL)))), NONE, SourceInfo(49, 4)), Raise(Name("heartbeat_monitor_failed"), NIL, SourceInfo(50, 4)))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL)), EXIT, 51),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(68, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(TRUE), SourceInfo(69, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), ENTRY, 65),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(68, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(TRUE), SourceInfo(69, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), EXIT, 70),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(75, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(FALSE), SourceInfo(76, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), ENTRY, 72),
  LineInfo(AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(75, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(FALSE), SourceInfo(76, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), EXIT, 77),
  LineInfo(FunDecl("CancelTimer", MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL), BaseType(BOOL), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(62, 3)), Seq(Receive(Cases("timer_cancel_failure", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(75, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(FALSE), SourceInfo(76, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), Cases("timer_cancel_success", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(68, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(TRUE), SourceInfo(69, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), NIL)), 1, SourceInfo(63, 3)), Return(Name("timerCanceled"), SourceInfo(79, 3))))), ENTRY, 60),
  LineInfo(FunDecl("CancelTimer", MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), REAL, NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NIL), BaseType(BOOL), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NIL), Seq(Send(Name("timer"), Name("timer_cancel"), NIL, NONE, SourceInfo(62, 3)), Seq(Receive(Cases("timer_cancel_failure", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(75, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(FALSE), SourceInfo(76, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), Cases("timer_cancel_success", AnonFunDecl(MachineDecl("HeartbeatMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), "CancelTimer", NIL, Seq(Assert(BinApp(EQ, Name("timer"), Name("payload")), NIL, SourceInfo(68, 5)), BinStmt(ASSIGN, Name("timerCanceled"), NulApp(TRUE), SourceInfo(69, 5))), NmdTupType(NmdTupTypeField(NONE, "timer", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "timerCanceled", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)))), NIL)), 1, SourceInfo(63, 3)), Return(Name("timerCanceled"), SourceInfo(79, 3))))), EXIT, 80).
}

model GPSHealthMonitor_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  EventDecl("gpshmm_init", NIL, NIL),
  MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(11, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(13, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_raw_int_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(16, 4)), Raise(Name("gpshmm_init"), NIL, SourceInfo(17, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("MonitorGPSLock", NIL), MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("POrbV", MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("status", MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("GPSHealthType")),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(11, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(13, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_raw_int_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(16, 4)), Raise(Name("gpshmm_init"), NIL, SourceInfo(17, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "gpshmm_init", QualifiedName("MonitorGPSLock", NIL), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(11, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(13, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_raw_int_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(16, 4)), Raise(Name("gpshmm_init"), NIL, SourceInfo(17, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(24, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_status_t")), NIL)),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("status"), "fix_type"), Field(Name("s"), "_fix_type"), SourceInfo(27, 4)), Seq(BinStmt(ASSIGN, Field(Name("status"), "precision"), Field(Name("s"), "_eph"), SourceInfo(28, 4)), BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(29, 4)))), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_raw_int_t")), NIL)),
  AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(AND, BinApp(GT, Field(Name("status"), "fix_type"), NulApp(1)), BinApp(GT, Field(Name("status"), "satellites"), NulApp(5))), BinApp(LT, Field(Name("status"), "precision"), NulApp(50))), Ite(UnApp(NOT, Field(Name("status"), "locked")), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(TRUE), SourceInfo(36, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(37, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(34, 5)), Ite(Field(Name("status"), "locked"), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(FALSE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 9)), SourceInfo(32, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)),
  DoDecl(StateDecl(QualifiedName("MonitorGPSLock", NIL), MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "gps_status", AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(24, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_status_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("MonitorGPSLock", NIL), MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "gps_raw_int", AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("status"), "fix_type"), Field(Name("s"), "_fix_type"), SourceInfo(27, 4)), Seq(BinStmt(ASSIGN, Field(Name("status"), "precision"), Field(Name("s"), "_eph"), SourceInfo(28, 4)), BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(29, 4)))), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_raw_int_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("MonitorGPSLock", NIL), MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "local_position", AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(AND, BinApp(GT, Field(Name("status"), "fix_type"), NulApp(1)), BinApp(GT, Field(Name("status"), "satellites"), NulApp(5))), BinApp(LT, Field(Name("status"), "precision"), NulApp(50))), Ite(UnApp(NOT, Field(Name("status"), "locked")), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(TRUE), SourceInfo(36, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(37, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(34, 5)), Ite(Field(Name("status"), "locked"), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(FALSE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 9)), SourceInfo(32, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL))),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(11, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(13, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_raw_int_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(16, 4)), Raise(Name("gpshmm_init"), NIL, SourceInfo(17, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/gpshealthmonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(24, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_status_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/gpshealthmonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("status"), "fix_type"), Field(Name("s"), "_fix_type"), SourceInfo(27, 4)), Seq(BinStmt(ASSIGN, Field(Name("status"), "precision"), Field(Name("s"), "_eph"), SourceInfo(28, 4)), BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(29, 4)))), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_raw_int_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/gpshealthmonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(AND, BinApp(GT, Field(Name("status"), "fix_type"), NulApp(1)), BinApp(GT, Field(Name("status"), "satellites"), NulApp(5))), BinApp(LT, Field(Name("status"), "precision"), NulApp(50))), Ite(UnApp(NOT, Field(Name("status"), "locked")), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(TRUE), SourceInfo(36, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(37, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(34, 5)), Ite(Field(Name("status"), "locked"), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(FALSE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 9)), SourceInfo(32, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/gpshealthmonitor.p"),
  LineInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(11, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(13, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_raw_int_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(16, 4)), Raise(Name("gpshmm_init"), NIL, SourceInfo(17, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), ENTRY, 10),
  LineInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(11, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(13, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(15, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("gps_raw_int_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(16, 4)), Raise(Name("gpshmm_init"), NIL, SourceInfo(17, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), EXIT, 18),
  LineInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(24, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_status_t")), NIL)), ENTRY, 23),
  LineInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(24, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_status_t")), NIL)), EXIT, 25),
  LineInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("status"), "fix_type"), Field(Name("s"), "_fix_type"), SourceInfo(27, 4)), Seq(BinStmt(ASSIGN, Field(Name("status"), "precision"), Field(Name("s"), "_eph"), SourceInfo(28, 4)), BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(29, 4)))), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_raw_int_t")), NIL)), ENTRY, 26),
  LineInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Field(Name("status"), "fix_type"), Field(Name("s"), "_fix_type"), SourceInfo(27, 4)), Seq(BinStmt(ASSIGN, Field(Name("status"), "precision"), Field(Name("s"), "_eph"), SourceInfo(28, 4)), BinStmt(ASSIGN, Field(Name("status"), "satellites"), Field(Name("s"), "_satellites_visible"), SourceInfo(29, 4)))), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_gps_raw_int_t")), NIL)), EXIT, 30),
  LineInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(AND, BinApp(GT, Field(Name("status"), "fix_type"), NulApp(1)), BinApp(GT, Field(Name("status"), "satellites"), NulApp(5))), BinApp(LT, Field(Name("status"), "precision"), NulApp(50))), Ite(UnApp(NOT, Field(Name("status"), "locked")), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(TRUE), SourceInfo(36, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(37, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(34, 5)), Ite(Field(Name("status"), "locked"), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(FALSE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 9)), SourceInfo(32, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), ENTRY, 31),
  LineInfo(AnonFunDecl(MachineDecl("GPSHealthMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(AND, BinApp(GT, Field(Name("status"), "fix_type"), NulApp(1)), BinApp(GT, Field(Name("status"), "satellites"), NulApp(5))), BinApp(LT, Field(Name("status"), "precision"), NulApp(50))), Ite(UnApp(NOT, Field(Name("status"), "locked")), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(TRUE), SourceInfo(36, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(37, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(34, 5)), Ite(Field(Name("status"), "locked"), Seq(BinStmt(ASSIGN, Field(Name("status"), "locked"), NulApp(FALSE), SourceInfo(42, 5)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("gps_healthmonitoring_topic", NIL), NamedExprs("ev", Name("gps_healthmonitoring"), NamedExprs("payload", Name("status"), NIL)))), NONE, SourceInfo(43, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(40, 9)), SourceInfo(32, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), EXIT, 45).
}

model BatteryMonitor_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  EventDecl("batt_mon_init", NIL, NIL),
  MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(12, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(14, 4)), Raise(Name("batt_mon_init"), NIL, SourceInfo(15, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("MonitorBatteryLevel", NIL), MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("POrbV", MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("gps", MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("mavlink_battery_status_t")),
  VarDecl("status", MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("GPSHealthType")),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(12, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(14, 4)), Raise(Name("batt_mon_init"), NIL, SourceInfo(15, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "batt_mon_init", QualifiedName("MonitorBatteryLevel", NIL), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(12, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(14, 4)), Raise(Name("batt_mon_init"), NIL, SourceInfo(15, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(NEQ, Field(Name("s"), "_battery_remaining"), UnApp(NEG, NulApp(1))), BinApp(LT, Field(Name("s"), "_battery_remaining"), NulApp(20))), Seq(Print("### Battery is less than 20% !!!\\n", SourceInfo(25, 8)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("ev", Name("battery_critical"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(26, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(23, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_battery_status_t")), NIL)),
  DoDecl(StateDecl(QualifiedName("MonitorBatteryLevel", NIL), MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "battery_status", AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(NEQ, Field(Name("s"), "_battery_remaining"), UnApp(NEG, NulApp(1))), BinApp(LT, Field(Name("s"), "_battery_remaining"), NulApp(20))), Seq(Print("### Battery is less than 20% !!!\\n", SourceInfo(25, 8)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("ev", Name("battery_critical"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(26, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(23, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_battery_status_t")), NIL))),
  FileInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(12, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(14, 4)), Raise(Name("batt_mon_init"), NIL, SourceInfo(15, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/batterymonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(NEQ, Field(Name("s"), "_battery_remaining"), UnApp(NEG, NulApp(1))), BinApp(LT, Field(Name("s"), "_battery_remaining"), NulApp(20))), Seq(Print("### Battery is less than 20% !!!\\n", SourceInfo(25, 8)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("ev", Name("battery_critical"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(26, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(23, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_battery_status_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/batterymonitor.p"),
  LineInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(12, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(14, 4)), Raise(Name("batt_mon_init"), NIL, SourceInfo(15, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), ENTRY, 11),
  LineInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(12, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("battery_status_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(14, 4)), Raise(Name("batt_mon_init"), NIL, SourceInfo(15, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), EXIT, 16),
  LineInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(NEQ, Field(Name("s"), "_battery_remaining"), UnApp(NEG, NulApp(1))), BinApp(LT, Field(Name("s"), "_battery_remaining"), NulApp(20))), Seq(Print("### Battery is less than 20% !!!\\n", SourceInfo(25, 8)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("ev", Name("battery_critical"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(26, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(23, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_battery_status_t")), NIL)), ENTRY, 21),
  LineInfo(AnonFunDecl(MachineDecl("BatteryMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(AND, BinApp(NEQ, Field(Name("s"), "_battery_remaining"), UnApp(NEG, NulApp(1))), BinApp(LT, Field(Name("s"), "_battery_remaining"), NulApp(20))), Seq(Print("### Battery is less than 20% !!!\\n", SourceInfo(25, 8)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("battery_critical_topic", NIL), NamedExprs("ev", Name("battery_critical"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(26, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(23, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_battery_status_t")), NIL)), EXIT, 28).
}

model AltitudeMonitor_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  TypeDef("TargetAltitudeInfoType", NmdTupType(NmdTupTypeField(NONE, "target", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "home", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "delta", NameType("float32")), NIL)))),
  EventDecl("SetTargetAltitude", NIL, NameType("TargetAltitudeInfoType")),
  EventDecl("amm_reached", NIL, NIL),
  EventDecl("amm_idle", NIL, NIL),
  MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(27, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 0, SourceInfo(28, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("unitConversion"), 1, SourceInfo(29, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("extended_sys_state_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(32, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(34, 4)), Raise(Name("amm_idle"), NIL, SourceInfo(36, 4))))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("WaitForTarget", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("MonitorAltitude", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("POrbV", MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("target", MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("float32")),
  VarDecl("home", MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("float32")),
  VarDecl("delta", MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("float32")),
  VarDecl("active", MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  VarDecl("zero", MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("float32")),
  VarDecl("unitConversion", MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("float32")),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(27, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 0, SourceInfo(28, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("unitConversion"), 1, SourceInfo(29, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("extended_sys_state_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(32, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(34, 4)), Raise(Name("amm_idle"), NIL, SourceInfo(36, 4))))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "amm_idle", QualifiedName("WaitForTarget", NIL), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("WaitForTarget", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "SetTargetAltitude", QualifiedName("MonitorAltitude", NIL), PUSH),
  TransDecl(StateDecl(QualifiedName("MonitorAltitude", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "SetTargetAltitude", QualifiedName("MonitorAltitude", NIL), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(27, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 0, SourceInfo(28, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("unitConversion"), 1, SourceInfo(29, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("extended_sys_state_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(32, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(34, 4)), Raise(Name("amm_idle"), NIL, SourceInfo(36, 4))))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "new_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "near", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "landing", BaseType(BOOL)), NIL))), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("landing"), 2, SourceInfo(64, 4)), Ite(BinApp(AND, UnApp(NOT, Name("landing")), Name("active")), Seq(FunStmt("IsNearFloat32", Exprs(NONE, Field(Name("pos"), "_z"), Exprs(NONE, Name("target"), Exprs(NONE, Name("delta"), NIL))), Name("near"), 3, SourceInfo(67, 5)), Ite(Name("near"), Raise(Name("amm_reached"), NIL, SourceInfo(70, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(68, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(65, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "isZero", BaseType(BOOL)), NIL), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(0)), NulStmt(SKIP, SourceInfo(79, 4)), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(1)), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("isZero"), 4, SourceInfo(83, 5)), Ite(BinApp(AND, Name("active"), Name("isZero")), Raise(Name("amm_reached"), NIL, SourceInfo(86, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(84, 5))), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(2)), NulStmt(SKIP, SourceInfo(90, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 9)), SourceInfo(81, 9)), SourceInfo(78, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_extended_sys_state_t")), NIL)),
  AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("AltitudeMonitorMachine: reached target altitude...\\n", SourceInfo(96, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("ev", Name("altitude_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(97, 4)), Seq(NulStmt(POP, SourceInfo(98, 4)), BinStmt(ASSIGN, Name("active"), NulApp(FALSE), SourceInfo(99, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)),
  DoDecl(StateDecl(QualifiedName("WaitForTarget", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "local_position", IGNORE),
  DoDecl(StateDecl(QualifiedName("WaitForTarget", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "extended_sys_state", IGNORE),
  DoDecl(StateDecl(QualifiedName("MonitorAltitude", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "local_position", AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "new_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "near", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "landing", BaseType(BOOL)), NIL))), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("landing"), 2, SourceInfo(64, 4)), Ite(BinApp(AND, UnApp(NOT, Name("landing")), Name("active")), Seq(FunStmt("IsNearFloat32", Exprs(NONE, Field(Name("pos"), "_z"), Exprs(NONE, Name("target"), Exprs(NONE, Name("delta"), NIL))), Name("near"), 3, SourceInfo(67, 5)), Ite(Name("near"), Raise(Name("amm_reached"), NIL, SourceInfo(70, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(68, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(65, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("MonitorAltitude", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "extended_sys_state", AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "isZero", BaseType(BOOL)), NIL), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(0)), NulStmt(SKIP, SourceInfo(79, 4)), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(1)), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("isZero"), 4, SourceInfo(83, 5)), Ite(BinApp(AND, Name("active"), Name("isZero")), Raise(Name("amm_reached"), NIL, SourceInfo(86, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(84, 5))), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(2)), NulStmt(SKIP, SourceInfo(90, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 9)), SourceInfo(81, 9)), SourceInfo(78, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_extended_sys_state_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("MonitorAltitude", NIL), MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)), AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "amm_reached", AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("AltitudeMonitorMachine: reached target altitude...\\n", SourceInfo(96, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("ev", Name("altitude_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(97, 4)), Seq(NulStmt(POP, SourceInfo(98, 4)), BinStmt(ASSIGN, Name("active"), NulApp(FALSE), SourceInfo(99, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL))),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(27, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 0, SourceInfo(28, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("unitConversion"), 1, SourceInfo(29, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("extended_sys_state_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(32, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(34, 4)), Raise(Name("amm_idle"), NIL, SourceInfo(36, 4))))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/altitudemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/altitudemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "new_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "near", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "landing", BaseType(BOOL)), NIL))), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("landing"), 2, SourceInfo(64, 4)), Ite(BinApp(AND, UnApp(NOT, Name("landing")), Name("active")), Seq(FunStmt("IsNearFloat32", Exprs(NONE, Field(Name("pos"), "_z"), Exprs(NONE, Name("target"), Exprs(NONE, Name("delta"), NIL))), Name("near"), 3, SourceInfo(67, 5)), Ite(Name("near"), Raise(Name("amm_reached"), NIL, SourceInfo(70, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(68, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(65, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/altitudemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "isZero", BaseType(BOOL)), NIL), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(0)), NulStmt(SKIP, SourceInfo(79, 4)), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(1)), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("isZero"), 4, SourceInfo(83, 5)), Ite(BinApp(AND, Name("active"), Name("isZero")), Raise(Name("amm_reached"), NIL, SourceInfo(86, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(84, 5))), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(2)), NulStmt(SKIP, SourceInfo(90, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 9)), SourceInfo(81, 9)), SourceInfo(78, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_extended_sys_state_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/altitudemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("AltitudeMonitorMachine: reached target altitude...\\n", SourceInfo(96, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("ev", Name("altitude_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(97, 4)), Seq(NulStmt(POP, SourceInfo(98, 4)), BinStmt(ASSIGN, Name("active"), NulApp(FALSE), SourceInfo(99, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/altitudemonitor.p"),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(27, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 0, SourceInfo(28, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("unitConversion"), 1, SourceInfo(29, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("extended_sys_state_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(32, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(34, 4)), Raise(Name("amm_idle"), NIL, SourceInfo(36, 4))))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), ENTRY, 26),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(27, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(0), NIL), Name("zero"), 0, SourceInfo(28, 4)), Seq(FunStmt("IntToFloat32", Exprs(NONE, NulApp(1000), NIL), Name("unitConversion"), 1, SourceInfo(29, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("extended_sys_state_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(32, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(34, 4)), Raise(Name("amm_idle"), NIL, SourceInfo(36, 4))))))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), EXIT, 37),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)), ENTRY, 49),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("target"), Field(Name("payload"), "target"), SourceInfo(50, 4)), Seq(BinStmt(ASSIGN, Name("delta"), Field(Name("payload"), "delta"), SourceInfo(51, 4)), Seq(BinStmt(ASSIGN, Name("home"), Field(Name("payload"), "home"), SourceInfo(52, 4)), Seq(BinStmt(ASSIGN, Name("active"), NulApp(TRUE), SourceInfo(53, 4)), Print("monitoring target altitude\\n", SourceInfo(54, 4)))))), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("TargetAltitudeInfoType")), NIL)), EXIT, 55),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "new_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "near", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "landing", BaseType(BOOL)), NIL))), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("landing"), 2, SourceInfo(64, 4)), Ite(BinApp(AND, UnApp(NOT, Name("landing")), Name("active")), Seq(FunStmt("IsNearFloat32", Exprs(NONE, Field(Name("pos"), "_z"), Exprs(NONE, Name("target"), Exprs(NONE, Name("delta"), NIL))), Name("near"), 3, SourceInfo(67, 5)), Ite(Name("near"), Raise(Name("amm_reached"), NIL, SourceInfo(70, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(68, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(65, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), ENTRY, 59),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "new_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "near", BaseType(BOOL)), NmdTupType(NmdTupTypeField(NONE, "landing", BaseType(BOOL)), NIL))), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("landing"), 2, SourceInfo(64, 4)), Ite(BinApp(AND, UnApp(NOT, Name("landing")), Name("active")), Seq(FunStmt("IsNearFloat32", Exprs(NONE, Field(Name("pos"), "_z"), Exprs(NONE, Name("target"), Exprs(NONE, Name("delta"), NIL))), Name("near"), 3, SourceInfo(67, 5)), Ite(Name("near"), Raise(Name("amm_reached"), NIL, SourceInfo(70, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(68, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(65, 4))), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), EXIT, 73),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "isZero", BaseType(BOOL)), NIL), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(0)), NulStmt(SKIP, SourceInfo(79, 4)), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(1)), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("isZero"), 4, SourceInfo(83, 5)), Ite(BinApp(AND, Name("active"), Name("isZero")), Raise(Name("amm_reached"), NIL, SourceInfo(86, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(84, 5))), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(2)), NulStmt(SKIP, SourceInfo(90, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 9)), SourceInfo(81, 9)), SourceInfo(78, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_extended_sys_state_t")), NIL)), ENTRY, 76),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "isZero", BaseType(BOOL)), NIL), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(0)), NulStmt(SKIP, SourceInfo(79, 4)), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(1)), Seq(FunStmt("IsEqFloat32", Exprs(NONE, Name("target"), Exprs(NONE, Name("zero"), NIL)), Name("isZero"), 4, SourceInfo(83, 5)), Ite(BinApp(AND, Name("active"), Name("isZero")), Raise(Name("amm_reached"), NIL, SourceInfo(86, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(84, 5))), Ite(BinApp(EQ, Field(Name("s"), "_landed_state"), NulApp(2)), NulStmt(SKIP, SourceInfo(90, 4)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(89, 9)), SourceInfo(81, 9)), SourceInfo(78, 4)), NmdTupType(NmdTupTypeField(NONE, "s", NameType("mavlink_extended_sys_state_t")), NIL)), EXIT, 92),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("AltitudeMonitorMachine: reached target altitude...\\n", SourceInfo(96, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("ev", Name("altitude_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(97, 4)), Seq(NulStmt(POP, SourceInfo(98, 4)), BinStmt(ASSIGN, Name("active"), NulApp(FALSE), SourceInfo(99, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), ENTRY, 94),
  LineInfo(AnonFunDecl(MachineDecl("AltitudeMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(Print("AltitudeMonitorMachine: reached target altitude...\\n", SourceInfo(96, 4)), Seq(Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("altitude_reached_topic", NIL), NamedExprs("ev", Name("altitude_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(97, 4)), Seq(NulStmt(POP, SourceInfo(98, 4)), BinStmt(ASSIGN, Name("active"), NulApp(FALSE), SourceInfo(99, 4))))), NmdTupType(NmdTupTypeField(NONE, "_payload_0", BaseType(ANY)), NIL)), EXIT, 100).
}

model GeofenceMonitor_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  EventDecl("SetGeofenceRadius", NIL, NameType("float32")),
  MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(16, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(19, 4)), Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  StateDecl(QualifiedName("MonitorGeofence", NIL), MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("radius"), Name("f"), SourceInfo(38, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(39, 4))), NmdTupType(NmdTupTypeField(NONE, "f", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("POrbV", MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("radius", MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("float32")),
  VarDecl("reached", MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  VarDecl("home", MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NameType("mavlink_local_position_ned_t")),
  VarDecl("homeSet", MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(BOOL)),
  TransDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(16, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(19, 4)), Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "SetGeofenceRadius", QualifiedName("MonitorGeofence", NIL), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  TransDecl(StateDecl(QualifiedName("MonitorGeofence", NIL), MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("radius"), Name("f"), SourceInfo(38, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(39, 4))), NmdTupType(NmdTupTypeField(NONE, "f", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "SetGeofenceRadius", QualifiedName("MonitorGeofence", NIL), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL))),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(16, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(19, 4)), Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(26, 4)), BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(27, 4))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("radius"), Name("f"), SourceInfo(38, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(39, 4))), NmdTupType(NmdTupTypeField(NONE, "f", NameType("float32")), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(43, 4)), Seq(BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(44, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(45, 4)))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "outside", BaseType(BOOL)), NIL), Ite(Name("homeSet"), Seq(BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_x"), Exprs(NONE, Field(Name("pos"), "_x"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(53, 5)), Seq(Ite(UnApp(NOT, Name("outside")), BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_y"), Exprs(NONE, Field(Name("pos"), "_y"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(56, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(54, 5)), Ite(BinApp(AND, Name("outside"), UnApp(NOT, Name("reached"))), Seq(BinStmt(ASSIGN, Name("reached"), NulApp(TRUE), SourceInfo(60, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("geofence_reached_topic", NIL), NamedExprs("ev", Name("geofence_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(61, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(58, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(51, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)),
  AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(16, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(19, 4)), Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "home_location", AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(26, 4)), BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(27, 4))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(16, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(19, 4)), Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "local_position", IGNORE),
  DoDecl(StateDecl(QualifiedName("MonitorGeofence", NIL), MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("radius"), Name("f"), SourceInfo(38, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(39, 4))), NmdTupType(NmdTupTypeField(NONE, "f", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "home_location", AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(43, 4)), Seq(BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(44, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(45, 4)))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL))),
  DoDecl(StateDecl(QualifiedName("MonitorGeofence", NIL), MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("radius"), Name("f"), SourceInfo(38, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(39, 4))), NmdTupType(NmdTupTypeField(NONE, "f", NameType("float32")), NIL)), AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "local_position", AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "outside", BaseType(BOOL)), NIL), Ite(Name("homeSet"), Seq(BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_x"), Exprs(NONE, Field(Name("pos"), "_x"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(53, 5)), Seq(Ite(UnApp(NOT, Name("outside")), BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_y"), Exprs(NONE, Field(Name("pos"), "_y"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(56, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(54, 5)), Ite(BinApp(AND, Name("outside"), UnApp(NOT, Name("reached"))), Seq(BinStmt(ASSIGN, Name("reached"), NulApp(TRUE), SourceInfo(60, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("geofence_reached_topic", NIL), NamedExprs("ev", Name("geofence_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(61, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(58, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(51, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL))),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(16, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(19, 4)), Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/geofencemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(26, 4)), BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(27, 4))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/geofencemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("radius"), Name("f"), SourceInfo(38, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(39, 4))), NmdTupType(NmdTupTypeField(NONE, "f", NameType("float32")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/geofencemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(43, 4)), Seq(BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(44, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(45, 4)))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/geofencemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "outside", BaseType(BOOL)), NIL), Ite(Name("homeSet"), Seq(BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_x"), Exprs(NONE, Field(Name("pos"), "_x"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(53, 5)), Seq(Ite(UnApp(NOT, Name("outside")), BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_y"), Exprs(NONE, Field(Name("pos"), "_y"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(56, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(54, 5)), Ite(BinApp(AND, Name("outside"), UnApp(NOT, Name("reached"))), Seq(BinStmt(ASSIGN, Name("reached"), NulApp(TRUE), SourceInfo(60, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("geofence_reached_topic", NIL), NamedExprs("ev", Name("geofence_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(61, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(58, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(51, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/geofencemonitor.p"),
  FileInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(16, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(19, 4)), Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), ENTRY, 15),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("POrbV"), Name("payload"), SourceInfo(16, 4)), Seq(Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("local_position_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(19, 4)), Send(Name("POrbV"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("home_location_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(22, 4)))), NmdTupType(NmdTupTypeField(NONE, "payload", BaseType(REAL)), NIL)), EXIT, 23),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(26, 4)), BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(27, 4))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL)), ENTRY, 25),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(26, 4)), BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(27, 4))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL)), EXIT, 28),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("radius"), Name("f"), SourceInfo(38, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(39, 4))), NmdTupType(NmdTupTypeField(NONE, "f", NameType("float32")), NIL)), ENTRY, 37),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("radius"), Name("f"), SourceInfo(38, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(39, 4))), NmdTupType(NmdTupTypeField(NONE, "f", NameType("float32")), NIL)), EXIT, 40),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(43, 4)), Seq(BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(44, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(45, 4)))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL)), ENTRY, 42),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("homeSet"), NulApp(TRUE), SourceInfo(43, 4)), Seq(BinStmt(ASSIGN, Name("home"), Name("gps"), SourceInfo(44, 4)), BinStmt(ASSIGN, Name("reached"), NulApp(FALSE), SourceInfo(45, 4)))), NmdTupType(NmdTupTypeField(NONE, "gps", NameType("mavlink_local_position_ned_t")), NIL)), EXIT, 46),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "outside", BaseType(BOOL)), NIL), Ite(Name("homeSet"), Seq(BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_x"), Exprs(NONE, Field(Name("pos"), "_x"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(53, 5)), Seq(Ite(UnApp(NOT, Name("outside")), BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_y"), Exprs(NONE, Field(Name("pos"), "_y"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(56, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(54, 5)), Ite(BinApp(AND, Name("outside"), UnApp(NOT, Name("reached"))), Seq(BinStmt(ASSIGN, Name("reached"), NulApp(TRUE), SourceInfo(60, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("geofence_reached_topic", NIL), NamedExprs("ev", Name("geofence_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(61, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(58, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(51, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), ENTRY, 48),
  LineInfo(AnonFunDecl(MachineDecl("GeofenceMonitorMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "outside", BaseType(BOOL)), NIL), Ite(Name("homeSet"), Seq(BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_x"), Exprs(NONE, Field(Name("pos"), "_x"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(53, 5)), Seq(Ite(UnApp(NOT, Name("outside")), BinStmt(ASSIGN, Name("outside"), UnApp(NOT, FunApp("IsNearFloat32", Exprs(NONE, Field(Name("home"), "_y"), Exprs(NONE, Field(Name("pos"), "_y"), Exprs(NONE, Name("radius"), NIL))))), SourceInfo(56, 6)), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(54, 5)), Ite(BinApp(AND, Name("outside"), UnApp(NOT, Name("reached"))), Seq(BinStmt(ASSIGN, Name("reached"), NulApp(TRUE), SourceInfo(60, 6)), Send(Name("POrbV"), Name("POrbPublish"), NamedTuple(NamedExprs("topic", FunApp("geofence_reached_topic", NIL), NamedExprs("ev", Name("geofence_reached"), NamedExprs("payload", NulApp(TRUE), NIL)))), NONE, SourceInfo(61, 6))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(58, 5)))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(51, 4)), NmdTupType(NmdTupTypeField(NONE, "pos", NameType("mavlink_local_position_ned_t")), NIL)), EXIT, 64).
}

model Commands_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  TypeDef("CommandType", NmdTupType(NmdTupTypeField(NONE, "caller", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "command", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "a1", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a2", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a3", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a4", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a5", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a6", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a7", BaseType(ANY)), NIL)))))))))),
  EventDecl("CommandSucceeded", NIL, BaseType(INT)),
  EventDecl("CommandFailed", NIL, BaseType(INT)),
  EventDecl("Command", NIL, NameType("CommandType")),
  MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE),
  StateDecl(QualifiedName("Init", NIL), MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("_orb"), Name("orb"), SourceInfo(27, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("command_ack_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(28, 4))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM),
  VarDecl("_orb", MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), BaseType(REAL)),
  VarDecl("_pending", MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), MapType(BaseType(INT), NameType("CommandType"))),
  FunDecl("SendCommand", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "caller", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "a1", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a2", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a3", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a4", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a5", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a6", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a7", BaseType(ANY)), NIL))))))))), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0))),
  AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)),
  AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("_orb"), Name("orb"), SourceInfo(27, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("command_ack_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(28, 4))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)),
  AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "command"), Name("_pending")), Print("### Command is already pending\\n", SourceInfo(34, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("_pending"), Field(Name("payload"), "command")), Name("payload"), SourceInfo(38, 8)), FunStmt("SendCommand", Exprs(NONE, Field(Name("payload"), "caller"), Exprs(NONE, Field(Name("payload"), "command"), Exprs(NONE, Field(Name("payload"), "a1"), Exprs(NONE, Field(Name("payload"), "a2"), Exprs(NONE, Field(Name("payload"), "a3"), Exprs(NONE, Field(Name("payload"), "a4"), Exprs(NONE, Field(Name("payload"), "a5"), Exprs(NONE, Field(Name("payload"), "a6"), Exprs(NONE, Field(Name("payload"), "a7"), NIL))))))))), NIL, 0, SourceInfo(39, 5))), SourceInfo(32, 7)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("CommandType")), NIL)),
  AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "cmd", NameType("CommandType")), NmdTupType(NmdTupTypeField(NONE, "id", BaseType(INT)), NIL)), Seq(BinStmt(ASSIGN, Name("id"), Field(Name("ack"), "_command"), SourceInfo(46, 4)), Ite(BinApp(IN, Name("id"), Name("_pending")), Seq(BinStmt(ASSIGN, Name("cmd"), BinApp(IDX, Name("_pending"), Name("id")), SourceInfo(49, 5)), Ite(BinApp(EQ, Field(Name("ack"), "_result"), FunApp("mav_result_accepted_enum", NIL)), Send(Field(Name("cmd"), "caller"), Name("CommandSucceeded"), Name("id"), NONE, SourceInfo(52, 6)), Send(Field(Name("cmd"), "caller"), Name("CommandFailed"), Name("id"), NONE, SourceInfo(56, 6)), SourceInfo(50, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(47, 4))), NmdTupType(NmdTupTypeField(NONE, "ack", NameType("mavlink_command_ack_t")), NIL)),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("_orb"), Name("orb"), SourceInfo(27, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("command_ack_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(28, 4))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "Command", AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "command"), Name("_pending")), Print("### Command is already pending\\n", SourceInfo(34, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("_pending"), Field(Name("payload"), "command")), Name("payload"), SourceInfo(38, 8)), FunStmt("SendCommand", Exprs(NONE, Field(Name("payload"), "caller"), Exprs(NONE, Field(Name("payload"), "command"), Exprs(NONE, Field(Name("payload"), "a1"), Exprs(NONE, Field(Name("payload"), "a2"), Exprs(NONE, Field(Name("payload"), "a3"), Exprs(NONE, Field(Name("payload"), "a4"), Exprs(NONE, Field(Name("payload"), "a5"), Exprs(NONE, Field(Name("payload"), "a6"), Exprs(NONE, Field(Name("payload"), "a7"), NIL))))))))), NIL, 0, SourceInfo(39, 5))), SourceInfo(32, 7)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("CommandType")), NIL))),
  DoDecl(StateDecl(QualifiedName("Init", NIL), MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("_orb"), Name("orb"), SourceInfo(27, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("command_ack_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(28, 4))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), WARM), "command_ack", AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "cmd", NameType("CommandType")), NmdTupType(NmdTupTypeField(NONE, "id", BaseType(INT)), NIL)), Seq(BinStmt(ASSIGN, Name("id"), Field(Name("ack"), "_command"), SourceInfo(46, 4)), Ite(BinApp(IN, Name("id"), Name("_pending")), Seq(BinStmt(ASSIGN, Name("cmd"), BinApp(IDX, Name("_pending"), Name("id")), SourceInfo(49, 5)), Ite(BinApp(EQ, Field(Name("ack"), "_result"), FunApp("mav_result_accepted_enum", NIL)), Send(Field(Name("cmd"), "caller"), Name("CommandSucceeded"), Name("id"), NONE, SourceInfo(52, 6)), Send(Field(Name("cmd"), "caller"), Name("CommandFailed"), Name("id"), NONE, SourceInfo(56, 6)), SourceInfo(50, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(47, 4))), NmdTupType(NmdTupTypeField(NONE, "ack", NameType("mavlink_command_ack_t")), NIL))),
  FileInfo(FunDecl("SendCommand", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "caller", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "a1", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a2", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a3", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a4", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a5", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a6", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a7", BaseType(ANY)), NIL))))))))), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0))), "file:///d:/git/safecps/systems/px4/lib/pfiles/commands.p"),
  FileInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0)), NmdTupType(NmdTupTypeField(NONE, "_payload_skip", BaseType(ANY)), NIL)), NIL),
  FileInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("_orb"), Name("orb"), SourceInfo(27, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("command_ack_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(28, 4))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/commands.p"),
  FileInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "command"), Name("_pending")), Print("### Command is already pending\\n", SourceInfo(34, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("_pending"), Field(Name("payload"), "command")), Name("payload"), SourceInfo(38, 8)), FunStmt("SendCommand", Exprs(NONE, Field(Name("payload"), "caller"), Exprs(NONE, Field(Name("payload"), "command"), Exprs(NONE, Field(Name("payload"), "a1"), Exprs(NONE, Field(Name("payload"), "a2"), Exprs(NONE, Field(Name("payload"), "a3"), Exprs(NONE, Field(Name("payload"), "a4"), Exprs(NONE, Field(Name("payload"), "a5"), Exprs(NONE, Field(Name("payload"), "a6"), Exprs(NONE, Field(Name("payload"), "a7"), NIL))))))))), NIL, 0, SourceInfo(39, 5))), SourceInfo(32, 7)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("CommandType")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/commands.p"),
  FileInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "cmd", NameType("CommandType")), NmdTupType(NmdTupTypeField(NONE, "id", BaseType(INT)), NIL)), Seq(BinStmt(ASSIGN, Name("id"), Field(Name("ack"), "_command"), SourceInfo(46, 4)), Ite(BinApp(IN, Name("id"), Name("_pending")), Seq(BinStmt(ASSIGN, Name("cmd"), BinApp(IDX, Name("_pending"), Name("id")), SourceInfo(49, 5)), Ite(BinApp(EQ, Field(Name("ack"), "_result"), FunApp("mav_result_accepted_enum", NIL)), Send(Field(Name("cmd"), "caller"), Name("CommandSucceeded"), Name("id"), NONE, SourceInfo(52, 6)), Send(Field(Name("cmd"), "caller"), Name("CommandFailed"), Name("id"), NONE, SourceInfo(56, 6)), SourceInfo(50, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(47, 4))), NmdTupType(NmdTupTypeField(NONE, "ack", NameType("mavlink_command_ack_t")), NIL)), "file:///d:/git/safecps/systems/px4/lib/pfiles/commands.p"),
  LineInfo(FunDecl("SendCommand", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "caller", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "a1", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a2", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a3", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a4", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a5", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a6", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a7", BaseType(ANY)), NIL))))))))), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0))), ENTRY, 17),
  LineInfo(FunDecl("SendCommand", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "caller", BaseType(REAL)), NmdTupType(NmdTupTypeField(NONE, "cmd", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "a1", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a2", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a3", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a4", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a5", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a6", BaseType(ANY)), NmdTupType(NmdTupTypeField(NONE, "a7", BaseType(ANY)), NIL))))))))), NIL, NIL, NulStmt(SKIP, SourceInfo(0, 0))), EXIT, 18),
  LineInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("_orb"), Name("orb"), SourceInfo(27, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("command_ack_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(28, 4))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), ENTRY, 26),
  LineInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Seq(BinStmt(ASSIGN, Name("_orb"), Name("orb"), SourceInfo(27, 4)), Send(Name("orb"), Name("POrbSubscribe"), NamedTuple(NamedExprs("topic", FunApp("command_ack_topic", NIL), NamedExprs("sub", NulApp(THIS), NIL))), NONE, SourceInfo(28, 4))), NmdTupType(NmdTupTypeField(NONE, "orb", BaseType(REAL)), NIL)), EXIT, 29),
  LineInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "command"), Name("_pending")), Print("### Command is already pending\\n", SourceInfo(34, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("_pending"), Field(Name("payload"), "command")), Name("payload"), SourceInfo(38, 8)), FunStmt("SendCommand", Exprs(NONE, Field(Name("payload"), "caller"), Exprs(NONE, Field(Name("payload"), "command"), Exprs(NONE, Field(Name("payload"), "a1"), Exprs(NONE, Field(Name("payload"), "a2"), Exprs(NONE, Field(Name("payload"), "a3"), Exprs(NONE, Field(Name("payload"), "a4"), Exprs(NONE, Field(Name("payload"), "a5"), Exprs(NONE, Field(Name("payload"), "a6"), Exprs(NONE, Field(Name("payload"), "a7"), NIL))))))))), NIL, 0, SourceInfo(39, 5))), SourceInfo(32, 7)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("CommandType")), NIL)), ENTRY, 31),
  LineInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NIL, Ite(BinApp(IN, Field(Name("payload"), "command"), Name("_pending")), Print("### Command is already pending\\n", SourceInfo(34, 5)), Seq(BinStmt(ASSIGN, BinApp(IDX, Name("_pending"), Field(Name("payload"), "command")), Name("payload"), SourceInfo(38, 8)), FunStmt("SendCommand", Exprs(NONE, Field(Name("payload"), "caller"), Exprs(NONE, Field(Name("payload"), "command"), Exprs(NONE, Field(Name("payload"), "a1"), Exprs(NONE, Field(Name("payload"), "a2"), Exprs(NONE, Field(Name("payload"), "a3"), Exprs(NONE, Field(Name("payload"), "a4"), Exprs(NONE, Field(Name("payload"), "a5"), Exprs(NONE, Field(Name("payload"), "a6"), Exprs(NONE, Field(Name("payload"), "a7"), NIL))))))))), NIL, 0, SourceInfo(39, 5))), SourceInfo(32, 7)), NmdTupType(NmdTupTypeField(NONE, "payload", NameType("CommandType")), NIL)), EXIT, 41),
  LineInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "cmd", NameType("CommandType")), NmdTupType(NmdTupTypeField(NONE, "id", BaseType(INT)), NIL)), Seq(BinStmt(ASSIGN, Name("id"), Field(Name("ack"), "_command"), SourceInfo(46, 4)), Ite(BinApp(IN, Name("id"), Name("_pending")), Seq(BinStmt(ASSIGN, Name("cmd"), BinApp(IDX, Name("_pending"), Name("id")), SourceInfo(49, 5)), Ite(BinApp(EQ, Field(Name("ack"), "_result"), FunApp("mav_result_accepted_enum", NIL)), Send(Field(Name("cmd"), "caller"), Name("CommandSucceeded"), Name("id"), NONE, SourceInfo(52, 6)), Send(Field(Name("cmd"), "caller"), Name("CommandFailed"), Name("id"), NONE, SourceInfo(56, 6)), SourceInfo(50, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(47, 4))), NmdTupType(NmdTupTypeField(NONE, "ack", NameType("mavlink_command_ack_t")), NIL)), ENTRY, 43),
  LineInfo(AnonFunDecl(MachineDecl("CommanderMachine", REAL, NIL, QualifiedName("Init", NIL), FALSE), NIL, NmdTupType(NmdTupTypeField(NONE, "cmd", NameType("CommandType")), NmdTupType(NmdTupTypeField(NONE, "id", BaseType(INT)), NIL)), Seq(BinStmt(ASSIGN, Name("id"), Field(Name("ack"), "_command"), SourceInfo(46, 4)), Ite(BinApp(IN, Name("id"), Name("_pending")), Seq(BinStmt(ASSIGN, Name("cmd"), BinApp(IDX, Name("_pending"), Name("id")), SourceInfo(49, 5)), Ite(BinApp(EQ, Field(Name("ack"), "_result"), FunApp("mav_result_accepted_enum", NIL)), Send(Field(Name("cmd"), "caller"), Name("CommandSucceeded"), Name("id"), NONE, SourceInfo(52, 6)), Send(Field(Name("cmd"), "caller"), Name("CommandFailed"), Name("id"), NONE, SourceInfo(56, 6)), SourceInfo(50, 5))), NulStmt(SKIP, SourceInfo(0, 0)), SourceInfo(47, 4))), NmdTupType(NmdTupTypeField(NONE, "ack", NameType("mavlink_command_ack_t")), NIL)), EXIT, 59).
}

model Float32_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  TypeDef("float32", BaseType(INT)),
  ModelType("float32"),
  FunDecl("AssignFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "lhs", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "rhs", NameType("float32")), NIL)), NIL, NIL, BinStmt(ASSIGN, Name("lhs"), Name("rhs"), SourceInfo(7, 4))),
  FunDecl("IntToFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "val", BaseType(INT)), NIL), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(13, 4))),
  FunDecl("ScientificToFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "mantissa", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "exp", BaseType(INT)), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(20, 4))),
  FunDecl("NegFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(26, 4))),
  FunDecl("AddFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(31, 4))),
  FunDecl("SubFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(36, 4))),
  FunDecl("MulFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(41, 4))),
  FunDecl("DivFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(46, 4))),
  FunDecl("AbsFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(51, 4))),
  FunDecl("IsNaNFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(57, 4))),
  FunDecl("IsInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(62, 4))),
  FunDecl("IsPosInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(67, 4))),
  FunDecl("IsNegInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(72, 4))),
  FunDecl("IsFiniteFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(77, 4))),
  FunDecl("IsEqFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(82, 4))),
  FunDecl("IsNearFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "epsilon", NameType("float32")), NIL))), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(87, 4))),
  FunDecl("IsNEqFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(92, 4))),
  FunDecl("IsLtFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(97, 4))),
  FunDecl("IsGtFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(102, 4))),
  FunDecl("IsLeFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(107, 4))),
  FunDecl("IsGeFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(112, 4))),
  FileInfo(FunDecl("AssignFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "lhs", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "rhs", NameType("float32")), NIL)), NIL, NIL, BinStmt(ASSIGN, Name("lhs"), Name("rhs"), SourceInfo(7, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IntToFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "val", BaseType(INT)), NIL), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(13, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("ScientificToFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "mantissa", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "exp", BaseType(INT)), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(20, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("NegFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(26, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("AddFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(31, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("SubFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(36, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("MulFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(41, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("DivFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(46, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("AbsFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(51, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsNaNFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(57, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(62, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsPosInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(67, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsNegInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(72, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsFiniteFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(77, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsEqFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(82, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsNearFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "epsilon", NameType("float32")), NIL))), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(87, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsNEqFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(92, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsLtFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(97, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsGtFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(102, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsLeFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(107, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  FileInfo(FunDecl("IsGeFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(112, 4))), "file:///d:/git/safecps/systems/px4/lib/pfloat32/float32.p"),
  LineInfo(FunDecl("AssignFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "lhs", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "rhs", NameType("float32")), NIL)), NIL, NIL, BinStmt(ASSIGN, Name("lhs"), Name("rhs"), SourceInfo(7, 4))), ENTRY, 6),
  LineInfo(FunDecl("AssignFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "lhs", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "rhs", NameType("float32")), NIL)), NIL, NIL, BinStmt(ASSIGN, Name("lhs"), Name("rhs"), SourceInfo(7, 4))), EXIT, 8),
  LineInfo(FunDecl("IntToFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "val", BaseType(INT)), NIL), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(13, 4))), ENTRY, 12),
  LineInfo(FunDecl("IntToFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "val", BaseType(INT)), NIL), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(13, 4))), EXIT, 14),
  LineInfo(FunDecl("ScientificToFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "mantissa", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "exp", BaseType(INT)), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(20, 4))), ENTRY, 19),
  LineInfo(FunDecl("ScientificToFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "mantissa", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "exp", BaseType(INT)), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(20, 4))), EXIT, 21),
  LineInfo(FunDecl("NegFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(26, 4))), ENTRY, 25),
  LineInfo(FunDecl("NegFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(26, 4))), EXIT, 27),
  LineInfo(FunDecl("AddFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(31, 4))), ENTRY, 30),
  LineInfo(FunDecl("AddFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(31, 4))), EXIT, 32),
  LineInfo(FunDecl("SubFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(36, 4))), ENTRY, 35),
  LineInfo(FunDecl("SubFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(36, 4))), EXIT, 37),
  LineInfo(FunDecl("MulFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(41, 4))), ENTRY, 40),
  LineInfo(FunDecl("MulFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(41, 4))), EXIT, 42),
  LineInfo(FunDecl("DivFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(46, 4))), ENTRY, 45),
  LineInfo(FunDecl("DivFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(46, 4))), EXIT, 47),
  LineInfo(FunDecl("AbsFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(51, 4))), ENTRY, 50),
  LineInfo(FunDecl("AbsFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), NameType("float32"), NIL, Return(Default(NameType("float32")), SourceInfo(51, 4))), EXIT, 52),
  LineInfo(FunDecl("IsNaNFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(57, 4))), ENTRY, 56),
  LineInfo(FunDecl("IsNaNFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(57, 4))), EXIT, 58),
  LineInfo(FunDecl("IsInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(62, 4))), ENTRY, 61),
  LineInfo(FunDecl("IsInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(62, 4))), EXIT, 63),
  LineInfo(FunDecl("IsPosInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(67, 4))), ENTRY, 66),
  LineInfo(FunDecl("IsPosInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(67, 4))), EXIT, 68),
  LineInfo(FunDecl("IsNegInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(72, 4))), ENTRY, 71),
  LineInfo(FunDecl("IsNegInftyFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(72, 4))), EXIT, 73),
  LineInfo(FunDecl("IsFiniteFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(77, 4))), ENTRY, 76),
  LineInfo(FunDecl("IsFiniteFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NIL), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(77, 4))), EXIT, 78),
  LineInfo(FunDecl("IsEqFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(82, 4))), ENTRY, 81),
  LineInfo(FunDecl("IsEqFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(82, 4))), EXIT, 83),
  LineInfo(FunDecl("IsNearFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "epsilon", NameType("float32")), NIL))), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(87, 4))), ENTRY, 86),
  LineInfo(FunDecl("IsNearFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "epsilon", NameType("float32")), NIL))), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(87, 4))), EXIT, 88),
  LineInfo(FunDecl("IsNEqFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(92, 4))), ENTRY, 91),
  LineInfo(FunDecl("IsNEqFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(92, 4))), EXIT, 93),
  LineInfo(FunDecl("IsLtFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(97, 4))), ENTRY, 96),
  LineInfo(FunDecl("IsLtFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(97, 4))), EXIT, 98),
  LineInfo(FunDecl("IsGtFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(102, 4))), ENTRY, 101),
  LineInfo(FunDecl("IsGtFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(102, 4))), EXIT, 103),
  LineInfo(FunDecl("IsLeFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(107, 4))), ENTRY, 106),
  LineInfo(FunDecl("IsLeFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(107, 4))), EXIT, 108),
  LineInfo(FunDecl("IsGeFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(112, 4))), ENTRY, 111),
  LineInfo(FunDecl("IsGeFloat32", NIL, MODEL, NmdTupType(NmdTupTypeField(NONE, "op1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "op2", NameType("float32")), NIL)), BaseType(BOOL), NIL, Return(NulApp(NONDET), SourceInfo(112, 4))), EXIT, 113).
}

model P_common_MessageTypes_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  TypeDef("mavlink_heartbeat_t", NmdTupType(NmdTupTypeField(NONE, "_custom_mode", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_autopilot", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_base_mode", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_system_status", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_mavlink_version", BaseType(INT)), NIL))))))),
  TypeDef("mavlink_sys_status_t", NmdTupType(NmdTupTypeField(NONE, "_onboard_control_sensors_present", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_onboard_control_sensors_enabled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_onboard_control_sensors_health", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_load", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_voltage_battery", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_current_battery", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_drop_rate_comm", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_errors_comm", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_errors_count1", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_errors_count2", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_errors_count3", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_errors_count4", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_battery_remaining", BaseType(INT)), NIL)))))))))))))),
  TypeDef("mavlink_system_time_t", NmdTupType(NmdTupTypeField(NONE, "_time_unix_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NIL))),
  TypeDef("mavlink_ping_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))))),
  TypeDef("mavlink_change_operator_control_t", NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_control_request", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_version", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_passkey", SeqType(BaseType(INT))), NIL))))),
  TypeDef("mavlink_change_operator_control_ack_t", NmdTupType(NmdTupTypeField(NONE, "_gcs_system_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_control_request", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ack", BaseType(INT)), NIL)))),
  TypeDef("mavlink_auth_key_t", NmdTupType(NmdTupTypeField(NONE, "_key", SeqType(BaseType(INT))), NIL)),
  TypeDef("mavlink_set_mode_t", NmdTupType(NmdTupTypeField(NONE, "_custom_mode", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_base_mode", BaseType(INT)), NIL)))),
  TypeDef("mavlink_param_request_read_t", NmdTupType(NmdTupTypeField(NONE, "_param_index", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_param_id", SeqType(BaseType(INT))), NIL))))),
  TypeDef("mavlink_param_request_list_t", NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))),
  TypeDef("mavlink_param_value_t", NmdTupType(NmdTupTypeField(NONE, "_param_value", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param_count", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_param_index", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_param_id", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_param_type", BaseType(INT)), NIL)))))),
  TypeDef("mavlink_param_set_t", NmdTupType(NmdTupTypeField(NONE, "_param_value", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_param_id", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_param_type", BaseType(INT)), NIL)))))),
  TypeDef("mavlink_gps_raw_int_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_eph", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_epv", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vel", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_cog", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_fix_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_satellites_visible", BaseType(INT)), NIL))))))))))),
  TypeDef("mavlink_gps_status_t", NmdTupType(NmdTupTypeField(NONE, "_satellites_visible", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_satellite_prn", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_satellite_used", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_satellite_elevation", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_satellite_azimuth", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_satellite_snr", SeqType(BaseType(INT))), NIL))))))),
  TypeDef("mavlink_scaled_imu_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_yacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xgyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ygyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zgyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xmag", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ymag", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zmag", BaseType(INT)), NIL))))))))))),
  TypeDef("mavlink_raw_imu_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_yacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xgyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ygyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zgyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xmag", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ymag", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zmag", BaseType(INT)), NIL))))))))))),
  TypeDef("mavlink_raw_pressure_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_press_abs", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_press_diff1", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_press_diff2", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_temperature", BaseType(INT)), NIL)))))),
  TypeDef("mavlink_scaled_pressure_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_press_abs", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_press_diff", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_temperature", BaseType(INT)), NIL))))),
  TypeDef("mavlink_attitude_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_rollspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitchspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yawspeed", NameType("float32")), NIL)))))))),
  TypeDef("mavlink_attitude_quaternion_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_q1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_q2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_q3", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_q4", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_rollspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitchspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yawspeed", NameType("float32")), NIL))))))))),
  TypeDef("mavlink_local_position_ned_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vz", NameType("float32")), NIL)))))))),
  TypeDef("mavlink_global_position_int_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_relative_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vx", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vy", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vz", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_hdg", BaseType(INT)), NIL)))))))))),
  TypeDef("mavlink_rc_channels_scaled_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan1_scaled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan2_scaled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan3_scaled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan4_scaled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan5_scaled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan6_scaled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan7_scaled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan8_scaled", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_port", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rssi", BaseType(INT)), NIL)))))))))))),
  TypeDef("mavlink_rc_channels_raw_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan1_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan2_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan3_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan4_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan5_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan6_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan7_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan8_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_port", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rssi", BaseType(INT)), NIL)))))))))))),
  TypeDef("mavlink_servo_output_raw_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_servo1_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_servo2_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_servo3_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_servo4_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_servo5_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_servo6_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_servo7_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_servo8_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_port", BaseType(INT)), NIL))))))))))),
  TypeDef("mavlink_mission_request_partial_list_t", NmdTupType(NmdTupTypeField(NONE, "_start_index", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_end_index", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))))),
  TypeDef("mavlink_mission_write_partial_list_t", NmdTupType(NmdTupTypeField(NONE, "_start_index", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_end_index", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))))),
  TypeDef("mavlink_mission_item_t", NmdTupType(NmdTupTypeField(NONE, "_param1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param3", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param4", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_command", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_frame", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_current", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_autocontinue", BaseType(INT)), NIL))))))))))))))),
  TypeDef("mavlink_mission_request_t", NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL)))),
  TypeDef("mavlink_mission_set_current_t", NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL)))),
  TypeDef("mavlink_mission_current_t", NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NIL)),
  TypeDef("mavlink_mission_request_list_t", NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))),
  TypeDef("mavlink_mission_count_t", NmdTupType(NmdTupTypeField(NONE, "_count", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL)))),
  TypeDef("mavlink_mission_clear_all_t", NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))),
  TypeDef("mavlink_mission_item_reached_t", NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NIL)),
  TypeDef("mavlink_mission_ack_t", NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_type", BaseType(INT)), NIL)))),
  TypeDef("mavlink_set_gps_global_origin_t", NmdTupType(NmdTupTypeField(NONE, "_latitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_longitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_altitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NIL))))),
  TypeDef("mavlink_gps_global_origin_t", NmdTupType(NmdTupTypeField(NONE, "_latitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_longitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_altitude", BaseType(INT)), NIL)))),
  TypeDef("mavlink_param_map_rc_t", NmdTupType(NmdTupTypeField(NONE, "_param_value0", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_scale", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param_value_min", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param_value_max", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param_index", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_param_id", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_parameter_rc_channel_index", BaseType(INT)), NIL)))))))))),
  TypeDef("mavlink_mission_request_int_t", NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL)))),
  TypeDef("mavlink_safety_set_allowed_area_t", NmdTupType(NmdTupTypeField(NONE, "_p1x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p1y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p1z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p2x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p2y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p2z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_frame", BaseType(INT)), NIL)))))))))),
  TypeDef("mavlink_safety_allowed_area_t", NmdTupType(NmdTupTypeField(NONE, "_p1x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p1y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p1z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p2x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p2y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_p2z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_frame", BaseType(INT)), NIL)))))))),
  TypeDef("mavlink_attitude_quaternion_cov_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_q", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_rollspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitchspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yawspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_covariance", SeqType(NameType("float32"))), NIL))))))),
  TypeDef("mavlink_nav_controller_output_t", NmdTupType(NmdTupTypeField(NONE, "_nav_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_nav_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_alt_error", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_aspd_error", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_xtrack_error", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_nav_bearing", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_bearing", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_wp_dist", BaseType(INT)), NIL))))))))),
  TypeDef("mavlink_global_position_int_cov_t", NmdTupType(NmdTupTypeField(NONE, "_time_utc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_relative_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_covariance", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_estimator_type", BaseType(INT)), NIL)))))))))))),
  TypeDef("mavlink_local_position_ned_cov_t", NmdTupType(NmdTupTypeField(NONE, "_time_utc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ax", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ay", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_az", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_covariance", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_estimator_type", BaseType(INT)), NIL)))))))))))))),
  TypeDef("mavlink_rc_channels_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan1_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan2_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan3_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan4_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan5_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan6_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan7_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan8_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan9_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan10_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan11_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan12_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan13_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan14_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan15_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan16_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan17_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan18_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chancount", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rssi", BaseType(INT)), NIL)))))))))))))))))))))),
  TypeDef("mavlink_request_data_stream_t", NmdTupType(NmdTupTypeField(NONE, "_req_message_rate", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_req_stream_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_start_stop", BaseType(INT)), NIL)))))),
  TypeDef("mavlink_data_stream_t", NmdTupType(NmdTupTypeField(NONE, "_message_rate", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_stream_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_on_off", BaseType(INT)), NIL)))),
  TypeDef("mavlink_manual_control_t", NmdTupType(NmdTupTypeField(NONE, "_x", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_y", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_z", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_r", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_buttons", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target", BaseType(INT)), NIL))))))),
  TypeDef("mavlink_rc_channels_override_t", NmdTupType(NmdTupTypeField(NONE, "_chan1_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan2_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan3_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan4_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan5_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan6_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan7_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan8_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))))))))))),
  TypeDef("mavlink_mission_item_int_t", NmdTupType(NmdTupTypeField(NONE, "_param1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param3", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param4", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_x", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_y", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_command", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_frame", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_current", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_autocontinue", BaseType(INT)), NIL))))))))))))))),
  TypeDef("mavlink_vfr_hud_t", NmdTupType(NmdTupTypeField(NONE, "_airspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_groundspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_climb", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_heading", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_throttle", BaseType(INT)), NIL))))))),
  TypeDef("mavlink_command_int_t", NmdTupType(NmdTupTypeField(NONE, "_param1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param3", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param4", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_x", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_y", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_command", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_frame", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_current", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_autocontinue", BaseType(INT)), NIL)))))))))))))),
  TypeDef("mavlink_command_long_t", NmdTupType(NmdTupTypeField(NONE, "_param1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param3", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param4", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param5", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param6", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_param7", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_command", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_confirmation", BaseType(INT)), NIL)))))))))))),
  TypeDef("mavlink_command_ack_t", NmdTupType(NmdTupTypeField(NONE, "_command", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_result", BaseType(INT)), NIL))),
  TypeDef("mavlink_manual_setpoint_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_thrust", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_mode_switch", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_manual_override_switch", BaseType(INT)), NIL)))))))),
  TypeDef("mavlink_set_attitude_target_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_q", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_body_roll_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_body_pitch_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_body_yaw_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_thrust", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_type_mask", BaseType(INT)), NIL)))))))))),
  TypeDef("mavlink_attitude_target_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_q", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_body_roll_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_body_pitch_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_body_yaw_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_thrust", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_type_mask", BaseType(INT)), NIL)))))))),
  TypeDef("mavlink_set_position_target_local_ned_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_type_mask", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_coordinate_frame", BaseType(INT)), NIL))))))))))))))))),
  TypeDef("mavlink_position_target_local_ned_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_type_mask", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_coordinate_frame", BaseType(INT)), NIL))))))))))))))),
  TypeDef("mavlink_set_position_target_global_int_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat_int", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon_int", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_type_mask", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_coordinate_frame", BaseType(INT)), NIL))))))))))))))))),
  TypeDef("mavlink_position_target_global_int_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat_int", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon_int", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afx", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_afz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_type_mask", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_coordinate_frame", BaseType(INT)), NIL))))))))))))))),
  TypeDef("mavlink_local_position_ned_system_global_offset_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NIL)))))))),
  TypeDef("mavlink_hil_state_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_rollspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitchspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yawspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vx", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vy", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vz", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_yacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zacc", BaseType(INT)), NIL))))))))))))))))),
  TypeDef("mavlink_hil_controls_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_roll_ailerons", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch_elevator", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw_rudder", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_throttle", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_aux1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_aux2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_aux3", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_aux4", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_mode", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_nav_mode", BaseType(INT)), NIL)))))))))))),
  TypeDef("mavlink_hil_rc_inputs_raw_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan1_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan2_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan3_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan4_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan5_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan6_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan7_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan8_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan9_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan10_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan11_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_chan12_raw", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rssi", BaseType(INT)), NIL))))))))))))))),
  TypeDef("mavlink_optical_flow_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_flow_comp_m_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_flow_comp_m_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ground_distance", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_flow_x", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_flow_y", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_sensor_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_quality", BaseType(INT)), NIL))))))))),
  TypeDef("mavlink_global_vision_position_estimate_t", NmdTupType(NmdTupTypeField(NONE, "_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NIL)))))))),
  TypeDef("mavlink_vision_position_estimate_t", NmdTupType(NmdTupTypeField(NONE, "_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NIL)))))))),
  TypeDef("mavlink_vision_speed_estimate_t", NmdTupType(NmdTupTypeField(NONE, "_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NIL))))),
  TypeDef("mavlink_vicon_position_estimate_t", NmdTupType(NmdTupTypeField(NONE, "_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NIL)))))))),
  TypeDef("mavlink_highres_imu_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_zacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_xgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ygyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_zgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_xmag", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ymag", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_zmag", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_abs_pressure", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_diff_pressure", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pressure_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_temperature", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_fields_updated", BaseType(INT)), NIL)))))))))))))))),
  TypeDef("mavlink_optical_flow_rad_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_integration_time_us", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_integrated_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_integrated_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_integrated_xgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_integrated_ygyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_integrated_zgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_time_delta_distance_us", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_distance", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_temperature", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_sensor_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_quality", BaseType(INT)), NIL))))))))))))),
  TypeDef("mavlink_hil_sensor_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_zacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_xgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ygyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_zgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_xmag", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ymag", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_zmag", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_abs_pressure", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_diff_pressure", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pressure_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_temperature", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_fields_updated", BaseType(INT)), NIL)))))))))))))))),
  TypeDef("mavlink_sim_state_t", NmdTupType(NmdTupTypeField(NONE, "_q1", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_q2", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_q3", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_q4", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_roll", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_xacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_zacc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_xgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ygyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_zgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_lat", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_lon", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_std_dev_horz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_std_dev_vert", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vn", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ve", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vd", NameType("float32")), NIL)))))))))))))))))))))),
  TypeDef("mavlink_radio_status_t", NmdTupType(NmdTupTypeField(NONE, "_rxerrors", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_fixed", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rssi", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_remrssi", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_txbuf", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_noise", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_remnoise", BaseType(INT)), NIL)))))))),
  TypeDef("mavlink_file_transfer_protocol_t", NmdTupType(NmdTupTypeField(NONE, "_target_network", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_payload", SeqType(BaseType(INT))), NIL))))),
  TypeDef("mavlink_timesync_t", NmdTupType(NmdTupTypeField(NONE, "_tc1", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ts1", BaseType(INT)), NIL))),
  TypeDef("mavlink_camera_trigger_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_seq", BaseType(INT)), NIL))),
  TypeDef("mavlink_hil_gps_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_eph", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_epv", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vel", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vn", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ve", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vd", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_cog", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_fix_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_satellites_visible", BaseType(INT)), NIL)))))))))))))),
  TypeDef("mavlink_hil_optical_flow_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_integration_time_us", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_integrated_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_integrated_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_integrated_xgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_integrated_ygyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_integrated_zgyro", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_time_delta_distance_us", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_distance", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_temperature", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_sensor_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_quality", BaseType(INT)), NIL))))))))))))),
  TypeDef("mavlink_hil_state_quaternion_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_attitude_quaternion", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_rollspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitchspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yawspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vx", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vy", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vz", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ind_airspeed", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_true_airspeed", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_yacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zacc", BaseType(INT)), NIL))))))))))))))))),
  TypeDef("mavlink_scaled_imu2_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_yacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xgyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ygyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zgyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xmag", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ymag", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zmag", BaseType(INT)), NIL))))))))))),
  TypeDef("mavlink_log_request_list_t", NmdTupType(NmdTupTypeField(NONE, "_start", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_end", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))))),
  TypeDef("mavlink_log_entry_t", NmdTupType(NmdTupTypeField(NONE, "_time_utc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_size", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_num_logs", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_last_log_num", BaseType(INT)), NIL)))))),
  TypeDef("mavlink_log_request_data_t", NmdTupType(NmdTupTypeField(NONE, "_ofs", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_count", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL)))))),
  TypeDef("mavlink_log_data_t", NmdTupType(NmdTupTypeField(NONE, "_ofs", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_count", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_data", SeqType(BaseType(INT))), NIL))))),
  TypeDef("mavlink_log_erase_t", NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))),
  TypeDef("mavlink_log_request_end_t", NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL))),
  TypeDef("mavlink_gps_inject_data_t", NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_len", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_data", SeqType(BaseType(INT))), NIL))))),
  TypeDef("mavlink_gps2_raw_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_dgps_age", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_eph", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_epv", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vel", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_cog", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_fix_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_satellites_visible", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_dgps_numch", BaseType(INT)), NIL))))))))))))),
  TypeDef("mavlink_power_status_t", NmdTupType(NmdTupTypeField(NONE, "_vcc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vservo", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_flags", BaseType(INT)), NIL)))),
  TypeDef("mavlink_serial_control_t", NmdTupType(NmdTupTypeField(NONE, "_baudrate", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_timeout", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_device", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_flags", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_count", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_data", SeqType(BaseType(INT))), NIL))))))),
  TypeDef("mavlink_gps_rtk_t", NmdTupType(NmdTupTypeField(NONE, "_time_last_baseline_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_tow", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_baseline_a_mm", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_baseline_b_mm", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_baseline_c_mm", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_accuracy", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_iar_num_hypotheses", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_wn", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rtk_receiver_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rtk_health", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rtk_rate", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_nsats", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_baseline_coords_type", BaseType(INT)), NIL)))))))))))))),
  TypeDef("mavlink_gps2_rtk_t", NmdTupType(NmdTupTypeField(NONE, "_time_last_baseline_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_tow", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_baseline_a_mm", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_baseline_b_mm", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_baseline_c_mm", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_accuracy", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_iar_num_hypotheses", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_wn", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rtk_receiver_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rtk_health", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_rtk_rate", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_nsats", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_baseline_coords_type", BaseType(INT)), NIL)))))))))))))),
  TypeDef("mavlink_scaled_imu3_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_yacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zacc", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xgyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ygyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zgyro", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_xmag", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ymag", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_zmag", BaseType(INT)), NIL))))))))))),
  TypeDef("mavlink_data_transmission_handshake_t", NmdTupType(NmdTupTypeField(NONE, "_size", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_width", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_height", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_packets", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_payload", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_jpg_quality", BaseType(INT)), NIL)))))))),
  TypeDef("mavlink_encapsulated_data_t", NmdTupType(NmdTupTypeField(NONE, "_seqnr", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_data", SeqType(BaseType(INT))), NIL))),
  TypeDef("mavlink_distance_sensor_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_min_distance", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_max_distance", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_current_distance", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_orientation", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_covariance", BaseType(INT)), NIL))))))))),
  TypeDef("mavlink_terrain_request_t", NmdTupType(NmdTupTypeField(NONE, "_mask", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_grid_spacing", BaseType(INT)), NIL))))),
  TypeDef("mavlink_terrain_data_t", NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_grid_spacing", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_data", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_gridbit", BaseType(INT)), NIL)))))),
  TypeDef("mavlink_terrain_check_t", NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NIL))),
  TypeDef("mavlink_terrain_report_t", NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_terrain_height", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_current_height", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_spacing", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_pending", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_loaded", BaseType(INT)), NIL)))))))),
  TypeDef("mavlink_scaled_pressure2_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_press_abs", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_press_diff", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_temperature", BaseType(INT)), NIL))))),
  TypeDef("mavlink_att_pos_mocap_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_q", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NIL)))))),
  TypeDef("mavlink_set_actuator_control_target_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_controls", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_group_mlx", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NIL)))))),
  TypeDef("mavlink_actuator_control_target_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_controls", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_group_mlx", BaseType(INT)), NIL)))),
  TypeDef("mavlink_altitude_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_altitude_monotonic", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_altitude_amsl", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_altitude_local", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_altitude_relative", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_altitude_terrain", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_bottom_clearance", NameType("float32")), NIL)))))))),
  TypeDef("mavlink_resource_request_t", NmdTupType(NmdTupTypeField(NONE, "_request_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_uri_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_uri", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_transfer_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_storage", SeqType(BaseType(INT))), NIL)))))),
  TypeDef("mavlink_scaled_pressure3_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_press_abs", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_press_diff", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_temperature", BaseType(INT)), NIL))))),
  TypeDef("mavlink_follow_target_t", NmdTupType(NmdTupTypeField(NONE, "_timestamp", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_custom_state", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vel", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_acc", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_attitude_q", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_rates", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_position_cov", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_est_capabilities", BaseType(INT)), NIL)))))))))))),
  TypeDef("mavlink_control_system_state_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x_acc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y_acc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z_acc", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_x_vel", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y_vel", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z_vel", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_x_pos", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y_pos", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z_pos", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_airspeed", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vel_variance", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_pos_variance", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_q", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_roll_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pitch_rate", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_yaw_rate", NameType("float32")), NIL)))))))))))))))))),
  TypeDef("mavlink_battery_status_t", NmdTupType(NmdTupTypeField(NONE, "_current_consumed", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_energy_consumed", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_temperature", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_voltages", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_current_battery", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_battery_function", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_battery_remaining", BaseType(INT)), NIL)))))))))),
  TypeDef("mavlink_autopilot_version_t", NmdTupType(NmdTupTypeField(NONE, "_capabilities", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_uid", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_flight_sw_version", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_middleware_sw_version", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_os_sw_version", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_board_version", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vendor_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_product_id", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_flight_custom_version", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_middleware_custom_version", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_os_custom_version", SeqType(BaseType(INT))), NIL)))))))))))),
  TypeDef("mavlink_landing_target_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_angle_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_angle_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_distance", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_size_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_size_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_target_num", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_frame", BaseType(INT)), NIL))))))))),
  TypeDef("mavlink_estimator_status_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vel_ratio", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pos_horiz_ratio", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pos_vert_ratio", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_mag_ratio", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_hagl_ratio", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_tas_ratio", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pos_horiz_accuracy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_pos_vert_accuracy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_flags", BaseType(INT)), NIL))))))))))),
  TypeDef("mavlink_wind_cov_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_wind_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_wind_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_wind_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_var_horiz", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_var_vert", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_wind_alt", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_horiz_accuracy", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vert_accuracy", NameType("float32")), NIL)))))))))),
  TypeDef("mavlink_gps_rtcm_data_t", NmdTupType(NmdTupTypeField(NONE, "_flags", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_len", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_data", SeqType(BaseType(INT))), NIL)))),
  TypeDef("mavlink_vibration_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_vibration_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vibration_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_vibration_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_clipping_0", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_clipping_1", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_clipping_2", BaseType(INT)), NIL)))))))),
  TypeDef("mavlink_home_position_t", NmdTupType(NmdTupTypeField(NONE, "_latitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_longitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_altitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_q", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_approach_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_approach_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_approach_z", NameType("float32")), NIL))))))))))),
  TypeDef("mavlink_set_home_position_t", NmdTupType(NmdTupTypeField(NONE, "_latitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_longitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_altitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_q", SeqType(NameType("float32"))), NmdTupType(NmdTupTypeField(NONE, "_approach_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_approach_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_approach_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NIL)))))))))))),
  TypeDef("mavlink_message_interval_t", NmdTupType(NmdTupTypeField(NONE, "_interval_us", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_message_id", BaseType(INT)), NIL))),
  TypeDef("mavlink_extended_sys_state_t", NmdTupType(NmdTupTypeField(NONE, "_vtol_state", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_landed_state", BaseType(INT)), NIL))),
  TypeDef("mavlink_adsb_vehicle_t", NmdTupType(NmdTupTypeField(NONE, "_icao_address", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lat", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_lon", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_altitude", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_heading", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_hor_velocity", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ver_velocity", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_flags", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_squawk", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_altitude_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_callsign", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField(NONE, "_emitter_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_tslc", BaseType(INT)), NIL)))))))))))))),
  TypeDef("mavlink_v2_extension_t", NmdTupType(NmdTupTypeField(NONE, "_message_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_network", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_system", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_target_component", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_payload", SeqType(BaseType(INT))), NIL)))))),
  TypeDef("mavlink_memory_vect_t", NmdTupType(NmdTupTypeField(NONE, "_address", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_ver", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_type", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_value", SeqType(BaseType(INT))), NIL))))),
  TypeDef("mavlink_debug_vect_t", NmdTupType(NmdTupTypeField(NONE, "_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_x", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_y", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_z", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_name", SeqType(BaseType(INT))), NIL)))))),
  TypeDef("mavlink_named_value_float_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_value", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_name", SeqType(BaseType(INT))), NIL)))),
  TypeDef("mavlink_named_value_int_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_value", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_name", SeqType(BaseType(INT))), NIL)))),
  TypeDef("mavlink_statustext_t", NmdTupType(NmdTupTypeField(NONE, "_severity", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_text", SeqType(BaseType(INT))), NIL))),
  TypeDef("mavlink_debug_t", NmdTupType(NmdTupTypeField(NONE, "_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField(NONE, "_value", NameType("float32")), NmdTupType(NmdTupTypeField(NONE, "_ind", BaseType(INT)), NIL)))).
}

model P_common_EnumFunctions_p of P at "D:\\git\\p-org\\P\\Src\\Pc\\Compiler\\Domains\\P.4ml" 
{
  FunDecl("message_heartbeat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(2, 38))),
  FunDecl("message_sys_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(3, 39))),
  FunDecl("message_system_time_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(4, 40))),
  FunDecl("message_ping_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(5, 33))),
  FunDecl("message_change_operator_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(6, 52))),
  FunDecl("message_change_operator_control_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(7, 56))),
  FunDecl("message_auth_key_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(8, 37))),
  FunDecl("message_set_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(9, 37))),
  FunDecl("message_param_request_read_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(10, 47))),
  FunDecl("message_param_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(11, 47))),
  FunDecl("message_param_value_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(12, 40))),
  FunDecl("message_param_set_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(13, 38))),
  FunDecl("message_gps_raw_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(14, 40))),
  FunDecl("message_gps_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(15, 39))),
  FunDecl("message_scaled_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(16, 39))),
  FunDecl("message_raw_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(17, 36))),
  FunDecl("message_raw_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(28), SourceInfo(18, 41))),
  FunDecl("message_scaled_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(29), SourceInfo(19, 44))),
  FunDecl("message_attitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(20, 37))),
  FunDecl("message_attitude_quaternion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(21, 48))),
  FunDecl("message_local_position_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(22, 47))),
  FunDecl("message_global_position_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(23, 48))),
  FunDecl("message_rc_channels_scaled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(34), SourceInfo(24, 47))),
  FunDecl("message_rc_channels_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(35), SourceInfo(25, 44))),
  FunDecl("message_servo_output_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(36), SourceInfo(26, 45))),
  FunDecl("message_mission_request_partial_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(37), SourceInfo(27, 57))),
  FunDecl("message_mission_write_partial_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(38), SourceInfo(28, 55))),
  FunDecl("message_mission_item_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(39), SourceInfo(29, 41))),
  FunDecl("message_mission_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(40), SourceInfo(30, 44))),
  FunDecl("message_mission_set_current_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(41), SourceInfo(31, 48))),
  FunDecl("message_mission_current_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(42), SourceInfo(32, 44))),
  FunDecl("message_mission_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(43), SourceInfo(33, 49))),
  FunDecl("message_mission_count_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(44), SourceInfo(34, 42))),
  FunDecl("message_mission_clear_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(45), SourceInfo(35, 46))),
  FunDecl("message_mission_item_reached_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(46), SourceInfo(36, 49))),
  FunDecl("message_mission_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(47), SourceInfo(37, 40))),
  FunDecl("message_set_gps_global_origin_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(48), SourceInfo(38, 50))),
  FunDecl("message_gps_global_origin_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(49), SourceInfo(39, 46))),
  FunDecl("message_param_map_rc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(50), SourceInfo(40, 41))),
  FunDecl("message_mission_request_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(51), SourceInfo(41, 48))),
  FunDecl("message_safety_set_allowed_area_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(54), SourceInfo(42, 52))),
  FunDecl("message_safety_allowed_area_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(55), SourceInfo(43, 48))),
  FunDecl("message_attitude_quaternion_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(61), SourceInfo(44, 52))),
  FunDecl("message_nav_controller_output_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(62), SourceInfo(45, 50))),
  FunDecl("message_global_position_int_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(63), SourceInfo(46, 52))),
  FunDecl("message_local_position_ned_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(47, 51))),
  FunDecl("message_rc_channels_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(65), SourceInfo(48, 40))),
  FunDecl("message_request_data_stream_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(66), SourceInfo(49, 48))),
  FunDecl("message_data_stream_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(67), SourceInfo(50, 40))),
  FunDecl("message_manual_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(69), SourceInfo(51, 43))),
  FunDecl("message_rc_channels_override_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(70), SourceInfo(52, 49))),
  FunDecl("message_mission_item_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(73), SourceInfo(53, 45))),
  FunDecl("message_vfr_hud_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(74), SourceInfo(54, 36))),
  FunDecl("message_command_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(75), SourceInfo(55, 40))),
  FunDecl("message_command_long_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(76), SourceInfo(56, 41))),
  FunDecl("message_command_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(77), SourceInfo(57, 40))),
  FunDecl("message_manual_setpoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(81), SourceInfo(58, 44))),
  FunDecl("message_set_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(82), SourceInfo(59, 48))),
  FunDecl("message_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(83), SourceInfo(60, 44))),
  FunDecl("message_set_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(84), SourceInfo(61, 58))),
  FunDecl("message_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(85), SourceInfo(62, 54))),
  FunDecl("message_set_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(86), SourceInfo(63, 59))),
  FunDecl("message_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(87), SourceInfo(64, 55))),
  FunDecl("message_local_position_ned_system_global_offset_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(89), SourceInfo(65, 68))),
  FunDecl("message_hil_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(90), SourceInfo(66, 38))),
  FunDecl("message_hil_controls_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(91), SourceInfo(67, 41))),
  FunDecl("message_hil_rc_inputs_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(68, 46))),
  FunDecl("message_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(100), SourceInfo(69, 41))),
  FunDecl("message_global_vision_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(101), SourceInfo(70, 60))),
  FunDecl("message_vision_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(102), SourceInfo(71, 53))),
  FunDecl("message_vision_speed_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(103), SourceInfo(72, 50))),
  FunDecl("message_vicon_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(104), SourceInfo(73, 52))),
  FunDecl("message_highres_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(105), SourceInfo(74, 40))),
  FunDecl("message_optical_flow_rad_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(106), SourceInfo(75, 45))),
  FunDecl("message_hil_sensor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(107), SourceInfo(76, 39))),
  FunDecl("message_sim_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(108), SourceInfo(77, 38))),
  FunDecl("message_radio_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(109), SourceInfo(78, 41))),
  FunDecl("message_file_transfer_protocol_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(110), SourceInfo(79, 51))),
  FunDecl("message_timesync_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(111), SourceInfo(80, 37))),
  FunDecl("message_camera_trigger_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(112), SourceInfo(81, 43))),
  FunDecl("message_hil_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(113), SourceInfo(82, 36))),
  FunDecl("message_hil_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(114), SourceInfo(83, 45))),
  FunDecl("message_hil_state_quaternion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(115), SourceInfo(84, 49))),
  FunDecl("message_scaled_imu2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(116), SourceInfo(85, 40))),
  FunDecl("message_log_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(117), SourceInfo(86, 45))),
  FunDecl("message_log_entry_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(118), SourceInfo(87, 38))),
  FunDecl("message_log_request_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(119), SourceInfo(88, 45))),
  FunDecl("message_log_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(120), SourceInfo(89, 37))),
  FunDecl("message_log_erase_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(121), SourceInfo(90, 38))),
  FunDecl("message_log_request_end_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(122), SourceInfo(91, 44))),
  FunDecl("message_gps_inject_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(123), SourceInfo(92, 44))),
  FunDecl("message_gps2_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(124), SourceInfo(93, 37))),
  FunDecl("message_power_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(125), SourceInfo(94, 41))),
  FunDecl("message_serial_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(126), SourceInfo(95, 43))),
  FunDecl("message_gps_rtk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(127), SourceInfo(96, 36))),
  FunDecl("message_gps2_rtk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(97, 37))),
  FunDecl("message_scaled_imu3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(129), SourceInfo(98, 40))),
  FunDecl("message_data_transmission_handshake_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(130), SourceInfo(99, 56))),
  FunDecl("message_encapsulated_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(131), SourceInfo(100, 46))),
  FunDecl("message_distance_sensor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(132), SourceInfo(101, 44))),
  FunDecl("message_terrain_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(133), SourceInfo(102, 44))),
  FunDecl("message_terrain_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(134), SourceInfo(103, 41))),
  FunDecl("message_terrain_check_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(135), SourceInfo(104, 42))),
  FunDecl("message_terrain_report_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(136), SourceInfo(105, 43))),
  FunDecl("message_scaled_pressure2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(137), SourceInfo(106, 45))),
  FunDecl("message_att_pos_mocap_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(138), SourceInfo(107, 42))),
  FunDecl("message_set_actuator_control_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(139), SourceInfo(108, 56))),
  FunDecl("message_actuator_control_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(140), SourceInfo(109, 52))),
  FunDecl("message_altitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(141), SourceInfo(110, 37))),
  FunDecl("message_resource_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(142), SourceInfo(111, 45))),
  FunDecl("message_scaled_pressure3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(143), SourceInfo(112, 45))),
  FunDecl("message_follow_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(144), SourceInfo(113, 42))),
  FunDecl("message_control_system_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(146), SourceInfo(114, 49))),
  FunDecl("message_battery_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(147), SourceInfo(115, 43))),
  FunDecl("message_autopilot_version_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(148), SourceInfo(116, 46))),
  FunDecl("message_landing_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(149), SourceInfo(117, 43))),
  FunDecl("message_estimator_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(230), SourceInfo(118, 45))),
  FunDecl("message_wind_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(231), SourceInfo(119, 37))),
  FunDecl("message_gps_rtcm_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(233), SourceInfo(120, 42))),
  FunDecl("message_vibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(121, 38))),
  FunDecl("message_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(242), SourceInfo(122, 42))),
  FunDecl("message_set_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(243), SourceInfo(123, 46))),
  FunDecl("message_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(244), SourceInfo(124, 45))),
  FunDecl("message_extended_sys_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(245), SourceInfo(125, 47))),
  FunDecl("message_adsb_vehicle_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(246), SourceInfo(126, 41))),
  FunDecl("message_v2_extension_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(248), SourceInfo(127, 41))),
  FunDecl("message_memory_vect_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(249), SourceInfo(128, 40))),
  FunDecl("message_debug_vect_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(250), SourceInfo(129, 39))),
  FunDecl("message_named_value_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(251), SourceInfo(130, 46))),
  FunDecl("message_named_value_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(252), SourceInfo(131, 44))),
  FunDecl("message_statustext_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(253), SourceInfo(132, 39))),
  FunDecl("message_debug_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(254), SourceInfo(133, 34))),
  FunDecl("message_setup_signing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(134, 42))),
  FunDecl("mav_autopilot_generic_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(137, 42))),
  FunDecl("mav_autopilot_reserved_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(138, 43))),
  FunDecl("mav_autopilot_slugs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(139, 40))),
  FunDecl("mav_autopilot_ardupilotmega_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(140, 48))),
  FunDecl("mav_autopilot_openpilot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(141, 44))),
  FunDecl("mav_autopilot_generic_waypoints_only_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(142, 57))),
  FunDecl("mav_autopilot_generic_waypoints_and_simple_navigation_only_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(143, 79))),
  FunDecl("mav_autopilot_generic_mission_full_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(144, 55))),
  FunDecl("mav_autopilot_invalid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(145, 42))),
  FunDecl("mav_autopilot_ppz_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(146, 38))),
  FunDecl("mav_autopilot_udb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(147, 38))),
  FunDecl("mav_autopilot_fp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(148, 37))),
  FunDecl("mav_autopilot_px4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(149, 38))),
  FunDecl("mav_autopilot_smaccmpilot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(150, 46))),
  FunDecl("mav_autopilot_autoquad_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(151, 43))),
  FunDecl("mav_autopilot_armazila_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(152, 43))),
  FunDecl("mav_autopilot_aerob_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(153, 40))),
  FunDecl("mav_autopilot_asluav_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(154, 41))),
  FunDecl("mav_type_generic_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(157, 37))),
  FunDecl("mav_type_fixed_wing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(158, 40))),
  FunDecl("mav_type_quadrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(159, 39))),
  FunDecl("mav_type_coaxial_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(160, 37))),
  FunDecl("mav_type_helicopter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(161, 40))),
  FunDecl("mav_type_antenna_tracker_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(162, 45))),
  FunDecl("mav_type_gcs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(163, 33))),
  FunDecl("mav_type_airship_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(164, 37))),
  FunDecl("mav_type_free_balloon_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(165, 42))),
  FunDecl("mav_type_rocket_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(166, 36))),
  FunDecl("mav_type_ground_rover_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(167, 42))),
  FunDecl("mav_type_surface_boat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(168, 42))),
  FunDecl("mav_type_submarine_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(169, 39))),
  FunDecl("mav_type_hexarotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(170, 39))),
  FunDecl("mav_type_octorotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(171, 39))),
  FunDecl("mav_type_tricopter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(172, 39))),
  FunDecl("mav_type_flapping_wing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(173, 43))),
  FunDecl("mav_type_kite_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(174, 34))),
  FunDecl("mav_type_onboard_controller_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(175, 48))),
  FunDecl("mav_type_vtol_duorotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(176, 43))),
  FunDecl("mav_type_vtol_quadrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(177, 44))),
  FunDecl("mav_type_vtol_tiltrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(178, 44))),
  FunDecl("mav_type_vtol_reserved2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(179, 44))),
  FunDecl("mav_type_vtol_reserved3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(180, 44))),
  FunDecl("mav_type_vtol_reserved4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(181, 44))),
  FunDecl("mav_type_vtol_reserved5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(182, 44))),
  FunDecl("mav_type_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(183, 36))),
  FunDecl("mav_type_adsb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(184, 34))),
  FunDecl("firmware_version_type_dev_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(187, 46))),
  FunDecl("firmware_version_type_alpha_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(188, 48))),
  FunDecl("firmware_version_type_beta_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(189, 47))),
  FunDecl("firmware_version_type_rc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(190, 45))),
  FunDecl("firmware_version_type_official_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(255), SourceInfo(191, 51))),
  FunDecl("mav_mode_flag_safety_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(194, 47))),
  FunDecl("mav_mode_flag_manual_input_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(195, 55))),
  FunDecl("mav_mode_flag_hil_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(196, 46))),
  FunDecl("mav_mode_flag_stabilize_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(197, 52))),
  FunDecl("mav_mode_flag_guided_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(198, 49))),
  FunDecl("mav_mode_flag_auto_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(199, 47))),
  FunDecl("mav_mode_flag_test_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(200, 47))),
  FunDecl("mav_mode_flag_custom_mode_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(201, 54))),
  FunDecl("mav_mode_flag_decode_position_safety_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(204, 57))),
  FunDecl("mav_mode_flag_decode_position_manual_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(205, 57))),
  FunDecl("mav_mode_flag_decode_position_hil_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(206, 54))),
  FunDecl("mav_mode_flag_decode_position_stabilize_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(207, 60))),
  FunDecl("mav_mode_flag_decode_position_guided_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(208, 57))),
  FunDecl("mav_mode_flag_decode_position_auto_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(209, 55))),
  FunDecl("mav_mode_flag_decode_position_test_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(210, 55))),
  FunDecl("mav_mode_flag_decode_position_custom_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(211, 62))),
  FunDecl("mav_goto_do_hold_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(214, 37))),
  FunDecl("mav_goto_do_continue_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(215, 41))),
  FunDecl("mav_goto_hold_at_current_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(216, 54))),
  FunDecl("mav_goto_hold_at_specified_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(217, 56))),
  FunDecl("mav_mode_preflight_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(220, 39))),
  FunDecl("mav_mode_stabilize_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(80), SourceInfo(221, 48))),
  FunDecl("mav_mode_stabilize_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(208), SourceInfo(222, 45))),
  FunDecl("mav_mode_manual_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(223, 45))),
  FunDecl("mav_mode_manual_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(224, 42))),
  FunDecl("mav_mode_guided_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(88), SourceInfo(225, 45))),
  FunDecl("mav_mode_guided_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(216), SourceInfo(226, 42))),
  FunDecl("mav_mode_auto_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(227, 43))),
  FunDecl("mav_mode_auto_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(228, 40))),
  FunDecl("mav_mode_test_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(66), SourceInfo(229, 43))),
  FunDecl("mav_mode_test_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(194), SourceInfo(230, 40))),
  FunDecl("mav_state_uninit_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(233, 37))),
  FunDecl("mav_state_boot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(234, 35))),
  FunDecl("mav_state_calibrating_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(235, 42))),
  FunDecl("mav_state_standby_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(236, 38))),
  FunDecl("mav_state_active_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(237, 37))),
  FunDecl("mav_state_critical_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(238, 39))),
  FunDecl("mav_state_emergency_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(239, 40))),
  FunDecl("mav_state_poweroff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(240, 39))),
  FunDecl("mav_comp_id_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(243, 36))),
  FunDecl("mav_comp_id_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(244, 36))),
  FunDecl("mav_comp_id_missionplanner_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(190), SourceInfo(245, 47))),
  FunDecl("mav_comp_id_pathplanner_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(195), SourceInfo(246, 44))),
  FunDecl("mav_comp_id_mapper_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(180), SourceInfo(247, 39))),
  FunDecl("mav_comp_id_camera_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(100), SourceInfo(248, 39))),
  FunDecl("mav_comp_id_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(200), SourceInfo(249, 36))),
  FunDecl("mav_comp_id_imu_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(201), SourceInfo(250, 38))),
  FunDecl("mav_comp_id_imu_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(202), SourceInfo(251, 38))),
  FunDecl("mav_comp_id_udp_bridge_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(240), SourceInfo(252, 43))),
  FunDecl("mav_comp_id_uart_bridge_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(253, 44))),
  FunDecl("mav_comp_id_system_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(250), SourceInfo(254, 47))),
  FunDecl("mav_comp_id_servo1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(140), SourceInfo(255, 39))),
  FunDecl("mav_comp_id_servo2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(141), SourceInfo(256, 39))),
  FunDecl("mav_comp_id_servo3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(142), SourceInfo(257, 39))),
  FunDecl("mav_comp_id_servo4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(143), SourceInfo(258, 39))),
  FunDecl("mav_comp_id_servo5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(144), SourceInfo(259, 39))),
  FunDecl("mav_comp_id_servo6_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(145), SourceInfo(260, 39))),
  FunDecl("mav_comp_id_servo7_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(146), SourceInfo(261, 39))),
  FunDecl("mav_comp_id_servo8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(147), SourceInfo(262, 39))),
  FunDecl("mav_comp_id_servo9_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(148), SourceInfo(263, 39))),
  FunDecl("mav_comp_id_servo10_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(149), SourceInfo(264, 40))),
  FunDecl("mav_comp_id_servo11_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(150), SourceInfo(265, 40))),
  FunDecl("mav_comp_id_servo12_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(151), SourceInfo(266, 40))),
  FunDecl("mav_comp_id_servo13_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(152), SourceInfo(267, 40))),
  FunDecl("mav_comp_id_servo14_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(153), SourceInfo(268, 40))),
  FunDecl("mav_comp_id_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(154), SourceInfo(269, 39))),
  FunDecl("mav_comp_id_log_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(155), SourceInfo(270, 36))),
  FunDecl("mav_comp_id_adsb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(156), SourceInfo(271, 37))),
  FunDecl("mav_comp_id_osd_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(157), SourceInfo(272, 36))),
  FunDecl("mav_comp_id_peripheral_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(158), SourceInfo(273, 43))),
  FunDecl("mav_comp_id_qx1_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(159), SourceInfo(274, 43))),
  FunDecl("mav_sys_status_sensor_3d_gyro_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(277, 50))),
  FunDecl("mav_sys_status_sensor_3d_accel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(278, 51))),
  FunDecl("mav_sys_status_sensor_3d_mag_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(279, 49))),
  FunDecl("mav_sys_status_sensor_absolute_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(280, 60))),
  FunDecl("mav_sys_status_sensor_differential_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(281, 64))),
  FunDecl("mav_sys_status_sensor_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(282, 46))),
  FunDecl("mav_sys_status_sensor_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(283, 55))),
  FunDecl("mav_sys_status_sensor_vision_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(284, 58))),
  FunDecl("mav_sys_status_sensor_laser_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(285, 57))),
  FunDecl("mav_sys_status_sensor_external_ground_truth_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(286, 64))),
  FunDecl("mav_sys_status_sensor_angular_rate_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(287, 63))),
  FunDecl("mav_sys_status_sensor_attitude_stabilization_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2048), SourceInfo(288, 65))),
  FunDecl("mav_sys_status_sensor_yaw_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4096), SourceInfo(289, 55))),
  FunDecl("mav_sys_status_sensor_z_altitude_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8192), SourceInfo(290, 61))),
  FunDecl("mav_sys_status_sensor_xy_position_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16384), SourceInfo(291, 62))),
  FunDecl("mav_sys_status_sensor_motor_outputs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32768), SourceInfo(292, 56))),
  FunDecl("mav_sys_status_sensor_rc_receiver_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(65536), SourceInfo(293, 54))),
  FunDecl("mav_sys_status_sensor_3d_gyro2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(131072), SourceInfo(294, 51))),
  FunDecl("mav_sys_status_sensor_3d_accel2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(262144), SourceInfo(295, 52))),
  FunDecl("mav_sys_status_sensor_3d_mag2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(524288), SourceInfo(296, 50))),
  FunDecl("mav_sys_status_geofence_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1048576), SourceInfo(297, 44))),
  FunDecl("mav_sys_status_ahrs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2097152), SourceInfo(298, 40))),
  FunDecl("mav_sys_status_terrain_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4194304), SourceInfo(299, 43))),
  FunDecl("mav_sys_status_reverse_motor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8388608), SourceInfo(300, 49))),
  FunDecl("mav_frame_global_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(303, 37))),
  FunDecl("mav_frame_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(304, 40))),
  FunDecl("mav_frame_mission_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(305, 38))),
  FunDecl("mav_frame_global_relative_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(306, 50))),
  FunDecl("mav_frame_local_enu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(307, 40))),
  FunDecl("mav_frame_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(308, 41))),
  FunDecl("mav_frame_global_relative_alt_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(309, 54))),
  FunDecl("mav_frame_local_offset_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(310, 47))),
  FunDecl("mav_frame_body_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(311, 39))),
  FunDecl("mav_frame_body_offset_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(312, 46))),
  FunDecl("mav_frame_global_terrain_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(313, 49))),
  FunDecl("mav_frame_global_terrain_alt_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(314, 53))),
  FunDecl("mavlink_data_stream_img_jpeg_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(317, 49))),
  FunDecl("mavlink_data_stream_img_bmp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(318, 48))),
  FunDecl("mavlink_data_stream_img_raw8u_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(319, 50))),
  FunDecl("mavlink_data_stream_img_raw32u_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(320, 51))),
  FunDecl("mavlink_data_stream_img_pgm_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(321, 48))),
  FunDecl("mavlink_data_stream_img_png_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(322, 48))),
  FunDecl("fence_action_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(325, 38))),
  FunDecl("fence_action_guided_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(326, 40))),
  FunDecl("fence_action_report_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(327, 40))),
  FunDecl("fence_action_guided_thr_pass_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(328, 49))),
  FunDecl("fence_action_rtl_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(329, 37))),
  FunDecl("fence_breach_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(332, 38))),
  FunDecl("fence_breach_minalt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(333, 40))),
  FunDecl("fence_breach_maxalt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(334, 40))),
  FunDecl("fence_breach_boundary_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(335, 42))),
  FunDecl("mav_mount_mode_retract_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(338, 43))),
  FunDecl("mav_mount_mode_neutral_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(339, 43))),
  FunDecl("mav_mount_mode_mavlink_targeting_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(340, 53))),
  FunDecl("mav_mount_mode_rc_targeting_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(341, 48))),
  FunDecl("mav_mount_mode_gps_point_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(342, 45))),
  FunDecl("mav_cmd_nav_waypoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(345, 41))),
  FunDecl("mav_cmd_nav_loiter_unlim_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(346, 45))),
  FunDecl("mav_cmd_nav_loiter_turns_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(347, 45))),
  FunDecl("mav_cmd_nav_loiter_time_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(348, 44))),
  FunDecl("mav_cmd_nav_return_to_launch_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(349, 49))),
  FunDecl("mav_cmd_nav_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(350, 37))),
  FunDecl("mav_cmd_nav_takeoff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(351, 40))),
  FunDecl("mav_cmd_nav_land_local_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(352, 43))),
  FunDecl("mav_cmd_nav_takeoff_local_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(353, 46))),
  FunDecl("mav_cmd_nav_follow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(354, 39))),
  FunDecl("mav_cmd_nav_continue_and_change_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(355, 56))),
  FunDecl("mav_cmd_nav_loiter_to_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(356, 46))),
  FunDecl("mav_cmd_do_follow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(357, 38))),
  FunDecl("mav_cmd_do_follow_reposition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(358, 49))),
  FunDecl("mav_cmd_nav_roi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(80), SourceInfo(359, 36))),
  FunDecl("mav_cmd_nav_pathplanning_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(81), SourceInfo(360, 45))),
  FunDecl("mav_cmd_nav_spline_waypoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(82), SourceInfo(361, 48))),
  FunDecl("mav_cmd_nav_vtol_takeoff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(84), SourceInfo(362, 45))),
  FunDecl("mav_cmd_nav_vtol_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(85), SourceInfo(363, 42))),
  FunDecl("mav_cmd_nav_guided_enable_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(364, 46))),
  FunDecl("mav_cmd_nav_delay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(93), SourceInfo(365, 38))),
  FunDecl("mav_cmd_nav_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(95), SourceInfo(366, 37))),
  FunDecl("mav_cmd_condition_delay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(112), SourceInfo(367, 44))),
  FunDecl("mav_cmd_condition_change_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(113), SourceInfo(368, 49))),
  FunDecl("mav_cmd_condition_distance_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(114), SourceInfo(369, 47))),
  FunDecl("mav_cmd_condition_yaw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(115), SourceInfo(370, 42))),
  FunDecl("mav_cmd_condition_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(159), SourceInfo(371, 43))),
  FunDecl("mav_cmd_do_set_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(176), SourceInfo(372, 40))),
  FunDecl("mav_cmd_do_jump_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(177), SourceInfo(373, 36))),
  FunDecl("mav_cmd_do_change_speed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(178), SourceInfo(374, 44))),
  FunDecl("mav_cmd_do_set_home_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(179), SourceInfo(375, 40))),
  FunDecl("mav_cmd_do_set_parameter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(180), SourceInfo(376, 45))),
  FunDecl("mav_cmd_do_set_relay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(181), SourceInfo(377, 41))),
  FunDecl("mav_cmd_do_repeat_relay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(182), SourceInfo(378, 44))),
  FunDecl("mav_cmd_do_set_servo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(183), SourceInfo(379, 41))),
  FunDecl("mav_cmd_do_repeat_servo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(184), SourceInfo(380, 44))),
  FunDecl("mav_cmd_do_flighttermination_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(185), SourceInfo(381, 49))),
  FunDecl("mav_cmd_do_land_start_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(189), SourceInfo(382, 42))),
  FunDecl("mav_cmd_do_rally_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(190), SourceInfo(383, 42))),
  FunDecl("mav_cmd_do_go_around_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(191), SourceInfo(384, 41))),
  FunDecl("mav_cmd_do_reposition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(385, 42))),
  FunDecl("mav_cmd_do_pause_continue_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(193), SourceInfo(386, 46))),
  FunDecl("mav_cmd_do_control_video_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(200), SourceInfo(387, 45))),
  FunDecl("mav_cmd_do_set_roi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(201), SourceInfo(388, 39))),
  FunDecl("mav_cmd_do_digicam_configure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(202), SourceInfo(389, 49))),
  FunDecl("mav_cmd_do_digicam_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(203), SourceInfo(390, 47))),
  FunDecl("mav_cmd_do_mount_configure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(204), SourceInfo(391, 47))),
  FunDecl("mav_cmd_do_mount_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(205), SourceInfo(392, 45))),
  FunDecl("mav_cmd_do_set_cam_trigg_dist_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(206), SourceInfo(393, 50))),
  FunDecl("mav_cmd_do_fence_enable_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(207), SourceInfo(394, 44))),
  FunDecl("mav_cmd_do_parachute_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(208), SourceInfo(395, 41))),
  FunDecl("mav_cmd_do_inverted_flight_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(210), SourceInfo(396, 47))),
  FunDecl("mav_cmd_do_mount_control_quat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(397, 50))),
  FunDecl("mav_cmd_do_guided_master_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(221), SourceInfo(398, 45))),
  FunDecl("mav_cmd_do_guided_limits_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(222), SourceInfo(399, 45))),
  FunDecl("mav_cmd_do_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(240), SourceInfo(400, 36))),
  FunDecl("mav_cmd_preflight_calibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(401, 50))),
  FunDecl("mav_cmd_preflight_set_sensor_offsets_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(242), SourceInfo(402, 57))),
  FunDecl("mav_cmd_preflight_uavcan_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(243), SourceInfo(403, 45))),
  FunDecl("mav_cmd_preflight_storage_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(245), SourceInfo(404, 46))),
  FunDecl("mav_cmd_preflight_reboot_shutdown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(246), SourceInfo(405, 54))),
  FunDecl("mav_cmd_override_goto_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(252), SourceInfo(406, 42))),
  FunDecl("mav_cmd_mission_start_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(300), SourceInfo(407, 42))),
  FunDecl("mav_cmd_component_arm_disarm_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(400), SourceInfo(408, 49))),
  FunDecl("mav_cmd_get_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(410), SourceInfo(409, 46))),
  FunDecl("mav_cmd_start_rx_pair_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(500), SourceInfo(410, 42))),
  FunDecl("mav_cmd_get_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(510), SourceInfo(411, 49))),
  FunDecl("mav_cmd_set_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(511), SourceInfo(412, 49))),
  FunDecl("mav_cmd_request_autopilot_capabilities_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(520), SourceInfo(413, 59))),
  FunDecl("mav_cmd_image_start_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2000), SourceInfo(414, 48))),
  FunDecl("mav_cmd_image_stop_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2001), SourceInfo(415, 47))),
  FunDecl("mav_cmd_do_trigger_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2003), SourceInfo(416, 47))),
  FunDecl("mav_cmd_video_start_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2500), SourceInfo(417, 48))),
  FunDecl("mav_cmd_video_stop_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2501), SourceInfo(418, 47))),
  FunDecl("mav_cmd_panorama_create_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2800), SourceInfo(419, 44))),
  FunDecl("mav_cmd_do_vtol_transition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3000), SourceInfo(420, 47))),
  FunDecl("mav_cmd_payload_prepare_deploy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30001), SourceInfo(421, 51))),
  FunDecl("mav_cmd_payload_control_deploy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30002), SourceInfo(422, 51))),
  FunDecl("mav_cmd_waypoint_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31000), SourceInfo(423, 44))),
  FunDecl("mav_cmd_waypoint_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31001), SourceInfo(424, 44))),
  FunDecl("mav_cmd_waypoint_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31002), SourceInfo(425, 44))),
  FunDecl("mav_cmd_waypoint_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31003), SourceInfo(426, 44))),
  FunDecl("mav_cmd_waypoint_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31004), SourceInfo(427, 44))),
  FunDecl("mav_cmd_spatial_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31005), SourceInfo(428, 43))),
  FunDecl("mav_cmd_spatial_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31006), SourceInfo(429, 43))),
  FunDecl("mav_cmd_spatial_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31007), SourceInfo(430, 43))),
  FunDecl("mav_cmd_spatial_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31008), SourceInfo(431, 43))),
  FunDecl("mav_cmd_spatial_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31009), SourceInfo(432, 43))),
  FunDecl("mav_cmd_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31010), SourceInfo(433, 35))),
  FunDecl("mav_cmd_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31011), SourceInfo(434, 35))),
  FunDecl("mav_cmd_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31012), SourceInfo(435, 35))),
  FunDecl("mav_cmd_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31013), SourceInfo(436, 35))),
  FunDecl("mav_cmd_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31014), SourceInfo(437, 35))),
  FunDecl("mav_data_stream_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(440, 40))),
  FunDecl("mav_data_stream_raw_sensors_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(441, 48))),
  FunDecl("mav_data_stream_extended_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(442, 52))),
  FunDecl("mav_data_stream_rc_channels_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(443, 48))),
  FunDecl("mav_data_stream_raw_controller_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(444, 51))),
  FunDecl("mav_data_stream_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(445, 45))),
  FunDecl("mav_data_stream_extra1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(446, 43))),
  FunDecl("mav_data_stream_extra2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(447, 43))),
  FunDecl("mav_data_stream_extra3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(448, 43))),
  FunDecl("mav_roi_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(451, 33))),
  FunDecl("mav_roi_wpnext_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(452, 35))),
  FunDecl("mav_roi_wpindex_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(453, 36))),
  FunDecl("mav_roi_location_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(454, 37))),
  FunDecl("mav_roi_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(455, 35))),
  FunDecl("mav_cmd_ack_ok_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(458, 35))),
  FunDecl("mav_cmd_ack_err_fail_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(459, 41))),
  FunDecl("mav_cmd_ack_err_access_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(460, 50))),
  FunDecl("mav_cmd_ack_err_not_supported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(461, 50))),
  FunDecl("mav_cmd_ack_err_coordinate_frame_not_supported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(462, 67))),
  FunDecl("mav_cmd_ack_err_coordinates_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(463, 61))),
  FunDecl("mav_cmd_ack_err_x_lat_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(464, 55))),
  FunDecl("mav_cmd_ack_err_y_lon_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(465, 55))),
  FunDecl("mav_cmd_ack_err_z_alt_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(466, 55))),
  FunDecl("mav_param_type_uint8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(469, 41))),
  FunDecl("mav_param_type_int8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(470, 40))),
  FunDecl("mav_param_type_uint16_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(471, 42))),
  FunDecl("mav_param_type_int16_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(472, 41))),
  FunDecl("mav_param_type_uint32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(473, 42))),
  FunDecl("mav_param_type_int32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(474, 41))),
  FunDecl("mav_param_type_uint64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(475, 42))),
  FunDecl("mav_param_type_int64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(476, 41))),
  FunDecl("mav_param_type_real32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(477, 42))),
  FunDecl("mav_param_type_real64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(478, 42))),
  FunDecl("mav_result_accepted_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(481, 40))),
  FunDecl("mav_result_temporarily_rejected_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(482, 52))),
  FunDecl("mav_result_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(483, 38))),
  FunDecl("mav_result_unsupported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(484, 43))),
  FunDecl("mav_result_failed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(485, 38))),
  FunDecl("mav_mission_accepted_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(488, 41))),
  FunDecl("mav_mission_error_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(489, 38))),
  FunDecl("mav_mission_unsupported_frame_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(490, 50))),
  FunDecl("mav_mission_unsupported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(491, 44))),
  FunDecl("mav_mission_no_space_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(492, 41))),
  FunDecl("mav_mission_invalid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(493, 40))),
  FunDecl("mav_mission_invalid_param1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(494, 47))),
  FunDecl("mav_mission_invalid_param2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(495, 47))),
  FunDecl("mav_mission_invalid_param3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(496, 47))),
  FunDecl("mav_mission_invalid_param4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(497, 47))),
  FunDecl("mav_mission_invalid_param5_x_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(498, 49))),
  FunDecl("mav_mission_invalid_param6_y_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(499, 49))),
  FunDecl("mav_mission_invalid_param7_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(500, 47))),
  FunDecl("mav_mission_invalid_sequence_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(501, 49))),
  FunDecl("mav_mission_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(502, 39))),
  FunDecl("mav_severity_emergency_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(505, 43))),
  FunDecl("mav_severity_alert_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(506, 39))),
  FunDecl("mav_severity_critical_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(507, 42))),
  FunDecl("mav_severity_error_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(508, 39))),
  FunDecl("mav_severity_warning_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(509, 41))),
  FunDecl("mav_severity_notice_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(510, 40))),
  FunDecl("mav_severity_info_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(511, 38))),
  FunDecl("mav_severity_debug_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(512, 39))),
  FunDecl("mav_power_status_brick_valid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(515, 49))),
  FunDecl("mav_power_status_servo_valid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(516, 49))),
  FunDecl("mav_power_status_usb_connected_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(517, 51))),
  FunDecl("mav_power_status_periph_overcurrent_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(518, 56))),
  FunDecl("mav_power_status_periph_hipower_overcurrent_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(519, 64))),
  FunDecl("mav_power_status_changed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(520, 45))),
  FunDecl("serial_control_dev_telem1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(523, 46))),
  FunDecl("serial_control_dev_telem2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(524, 46))),
  FunDecl("serial_control_dev_gps1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(525, 44))),
  FunDecl("serial_control_dev_gps2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(526, 44))),
  FunDecl("serial_control_dev_shell_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(527, 45))),
  FunDecl("serial_control_flag_reply_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(530, 46))),
  FunDecl("serial_control_flag_respond_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(531, 48))),
  FunDecl("serial_control_flag_exclusive_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(532, 50))),
  FunDecl("serial_control_flag_blocking_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(533, 49))),
  FunDecl("serial_control_flag_multi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(534, 46))),
  FunDecl("mav_distance_sensor_laser_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(537, 46))),
  FunDecl("mav_distance_sensor_ultrasound_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(538, 51))),
  FunDecl("mav_distance_sensor_infrared_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(539, 49))),
  FunDecl("mav_sensor_rotation_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(542, 45))),
  FunDecl("mav_sensor_rotation_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(543, 47))),
  FunDecl("mav_sensor_rotation_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(544, 47))),
  FunDecl("mav_sensor_rotation_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(545, 48))),
  FunDecl("mav_sensor_rotation_yaw_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(546, 48))),
  FunDecl("mav_sensor_rotation_yaw_225_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(547, 48))),
  FunDecl("mav_sensor_rotation_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(548, 48))),
  FunDecl("mav_sensor_rotation_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(549, 48))),
  FunDecl("mav_sensor_rotation_roll_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(550, 49))),
  FunDecl("mav_sensor_rotation_roll_180_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(551, 56))),
  FunDecl("mav_sensor_rotation_roll_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(552, 56))),
  FunDecl("mav_sensor_rotation_roll_180_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(553, 57))),
  FunDecl("mav_sensor_rotation_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(554, 50))),
  FunDecl("mav_sensor_rotation_roll_180_yaw_225_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(555, 57))),
  FunDecl("mav_sensor_rotation_roll_180_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(556, 57))),
  FunDecl("mav_sensor_rotation_roll_180_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(557, 57))),
  FunDecl("mav_sensor_rotation_roll_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(558, 48))),
  FunDecl("mav_sensor_rotation_roll_90_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(559, 55))),
  FunDecl("mav_sensor_rotation_roll_90_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(560, 55))),
  FunDecl("mav_sensor_rotation_roll_90_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(561, 56))),
  FunDecl("mav_sensor_rotation_roll_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(562, 49))),
  FunDecl("mav_sensor_rotation_roll_270_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(563, 56))),
  FunDecl("mav_sensor_rotation_roll_270_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(564, 56))),
  FunDecl("mav_sensor_rotation_roll_270_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(565, 57))),
  FunDecl("mav_sensor_rotation_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(566, 49))),
  FunDecl("mav_sensor_rotation_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(567, 50))),
  FunDecl("mav_sensor_rotation_pitch_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(568, 57))),
  FunDecl("mav_sensor_rotation_pitch_180_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(569, 58))),
  FunDecl("mav_sensor_rotation_roll_90_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(28), SourceInfo(570, 57))),
  FunDecl("mav_sensor_rotation_roll_180_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(29), SourceInfo(571, 58))),
  FunDecl("mav_sensor_rotation_roll_270_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(572, 58))),
  FunDecl("mav_sensor_rotation_roll_90_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(573, 58))),
  FunDecl("mav_sensor_rotation_roll_270_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(574, 59))),
  FunDecl("mav_sensor_rotation_roll_90_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(575, 58))),
  FunDecl("mav_sensor_rotation_roll_180_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(34), SourceInfo(576, 59))),
  FunDecl("mav_sensor_rotation_roll_270_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(35), SourceInfo(577, 59))),
  FunDecl("mav_sensor_rotation_roll_90_pitch_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(36), SourceInfo(578, 65))),
  FunDecl("mav_sensor_rotation_roll_90_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(37), SourceInfo(579, 56))),
  FunDecl("mav_sensor_rotation_roll_315_pitch_315_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(38), SourceInfo(580, 67))),
  FunDecl("mav_protocol_capability_mission_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(583, 58))),
  FunDecl("mav_protocol_capability_param_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(584, 56))),
  FunDecl("mav_protocol_capability_mission_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(585, 56))),
  FunDecl("mav_protocol_capability_command_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(586, 56))),
  FunDecl("mav_protocol_capability_param_union_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(587, 56))),
  FunDecl("mav_protocol_capability_ftp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(588, 48))),
  FunDecl("mav_protocol_capability_set_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(589, 64))),
  FunDecl("mav_protocol_capability_set_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(590, 74))),
  FunDecl("mav_protocol_capability_set_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(591, 75))),
  FunDecl("mav_protocol_capability_terrain_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(592, 52))),
  FunDecl("mav_protocol_capability_set_actuator_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(593, 64))),
  FunDecl("mav_protocol_capability_flight_termination_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2048), SourceInfo(594, 63))),
  FunDecl("mav_protocol_capability_compass_calibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4096), SourceInfo(595, 64))),
  FunDecl("mav_estimator_type_naive_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(598, 45))),
  FunDecl("mav_estimator_type_vision_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(599, 46))),
  FunDecl("mav_estimator_type_vio_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(600, 43))),
  FunDecl("mav_estimator_type_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(601, 43))),
  FunDecl("mav_estimator_type_gps_ins_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(602, 47))),
  FunDecl("mav_battery_type_unknown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(605, 45))),
  FunDecl("mav_battery_type_lipo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(606, 42))),
  FunDecl("mav_battery_type_life_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(607, 42))),
  FunDecl("mav_battery_type_lion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(608, 42))),
  FunDecl("mav_battery_type_nimh_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(609, 42))),
  FunDecl("mav_battery_function_unknown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(612, 49))),
  FunDecl("mav_battery_function_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(613, 45))),
  FunDecl("mav_battery_function_propulsion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(614, 52))),
  FunDecl("mav_battery_function_avionics_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(615, 50))),
  FunDecl("mav_battery_type_payload_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(616, 45))),
  FunDecl("mav_vtol_state_undefined_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(619, 45))),
  FunDecl("mav_vtol_state_transition_to_fw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(620, 52))),
  FunDecl("mav_vtol_state_transition_to_mc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(621, 52))),
  FunDecl("mav_vtol_state_mc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(622, 38))),
  FunDecl("mav_vtol_state_fw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(623, 38))),
  FunDecl("mav_landed_state_undefined_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(626, 47))),
  FunDecl("mav_landed_state_on_ground_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(627, 47))),
  FunDecl("mav_landed_state_in_air_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(628, 44))),
  FunDecl("adsb_altitude_type_pressure_qnh_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(631, 52))),
  FunDecl("adsb_altitude_type_geometric_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(632, 49))),
  FunDecl("adsb_emitter_type_no_info_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(635, 46))),
  FunDecl("adsb_emitter_type_light_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(636, 44))),
  FunDecl("adsb_emitter_type_small_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(637, 44))),
  FunDecl("adsb_emitter_type_large_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(638, 44))),
  FunDecl("adsb_emitter_type_high_vortex_large_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(639, 56))),
  FunDecl("adsb_emitter_type_heavy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(640, 44))),
  FunDecl("adsb_emitter_type_highly_manuv_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(641, 51))),
  FunDecl("adsb_emitter_type_rotocraft_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(642, 48))),
  FunDecl("adsb_emitter_type_unassigned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(643, 49))),
  FunDecl("adsb_emitter_type_glider_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(644, 45))),
  FunDecl("adsb_emitter_type_lighter_air_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(645, 50))),
  FunDecl("adsb_emitter_type_parachute_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(646, 48))),
  FunDecl("adsb_emitter_type_ultra_light_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(647, 50))),
  FunDecl("adsb_emitter_type_unassigned2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(648, 50))),
  FunDecl("adsb_emitter_type_uav_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(649, 42))),
  FunDecl("adsb_emitter_type_space_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(650, 44))),
  FunDecl("adsb_emitter_type_unassgined3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(651, 50))),
  FunDecl("adsb_emitter_type_emergency_surface_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(652, 56))),
  FunDecl("adsb_emitter_type_service_surface_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(653, 54))),
  FunDecl("adsb_emitter_type_point_obstacle_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(654, 53))),
  FunDecl("adsb_flags_valid_coords_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(657, 44))),
  FunDecl("adsb_flags_valid_altitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(658, 46))),
  FunDecl("adsb_flags_valid_heading_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(659, 45))),
  FunDecl("adsb_flags_valid_velocity_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(660, 46))),
  FunDecl("adsb_flags_valid_callsign_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(661, 46))),
  FunDecl("adsb_flags_valid_squawk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(662, 44))),
  FunDecl("adsb_flags_simulated_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(663, 41))),
  FunDecl("mav_do_reposition_flags_change_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(666, 56))),
  FunDecl("estimator_attitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(669, 39))),
  FunDecl("estimator_velocity_horiz_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(670, 45))),
  FunDecl("estimator_velocity_vert_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(671, 44))),
  FunDecl("estimator_pos_horiz_rel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(672, 44))),
  FunDecl("estimator_pos_horiz_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(673, 44))),
  FunDecl("estimator_pos_vert_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(674, 43))),
  FunDecl("estimator_pos_vert_agl_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(675, 43))),
  FunDecl("estimator_const_pos_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(676, 45))),
  FunDecl("estimator_pred_pos_horiz_rel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(677, 49))),
  FunDecl("estimator_pred_pos_horiz_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(678, 49))),
  FunDecl("estimator_gps_glitch_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(679, 41))),
  FileInfo(FunDecl("message_heartbeat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(2, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_sys_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(3, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_system_time_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(4, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_ping_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(5, 33))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_change_operator_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(6, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_change_operator_control_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(7, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_auth_key_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(8, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_set_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(9, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_param_request_read_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(10, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_param_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(11, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_param_value_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(12, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_param_set_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(13, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_gps_raw_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(14, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_gps_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(15, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_scaled_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(16, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_raw_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(17, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_raw_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(28), SourceInfo(18, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_scaled_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(29), SourceInfo(19, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_attitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(20, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_attitude_quaternion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(21, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_local_position_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(22, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_global_position_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(23, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_rc_channels_scaled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(34), SourceInfo(24, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_rc_channels_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(35), SourceInfo(25, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_servo_output_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(36), SourceInfo(26, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_request_partial_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(37), SourceInfo(27, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_write_partial_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(38), SourceInfo(28, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_item_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(39), SourceInfo(29, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(40), SourceInfo(30, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_set_current_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(41), SourceInfo(31, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_current_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(42), SourceInfo(32, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(43), SourceInfo(33, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_count_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(44), SourceInfo(34, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_clear_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(45), SourceInfo(35, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_item_reached_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(46), SourceInfo(36, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(47), SourceInfo(37, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_set_gps_global_origin_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(48), SourceInfo(38, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_gps_global_origin_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(49), SourceInfo(39, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_param_map_rc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(50), SourceInfo(40, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_request_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(51), SourceInfo(41, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_safety_set_allowed_area_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(54), SourceInfo(42, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_safety_allowed_area_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(55), SourceInfo(43, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_attitude_quaternion_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(61), SourceInfo(44, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_nav_controller_output_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(62), SourceInfo(45, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_global_position_int_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(63), SourceInfo(46, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_local_position_ned_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(47, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_rc_channels_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(65), SourceInfo(48, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_request_data_stream_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(66), SourceInfo(49, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_data_stream_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(67), SourceInfo(50, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_manual_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(69), SourceInfo(51, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_rc_channels_override_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(70), SourceInfo(52, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_mission_item_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(73), SourceInfo(53, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_vfr_hud_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(74), SourceInfo(54, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_command_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(75), SourceInfo(55, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_command_long_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(76), SourceInfo(56, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_command_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(77), SourceInfo(57, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_manual_setpoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(81), SourceInfo(58, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_set_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(82), SourceInfo(59, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(83), SourceInfo(60, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_set_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(84), SourceInfo(61, 58))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(85), SourceInfo(62, 54))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_set_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(86), SourceInfo(63, 59))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(87), SourceInfo(64, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_local_position_ned_system_global_offset_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(89), SourceInfo(65, 68))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_hil_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(90), SourceInfo(66, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_hil_controls_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(91), SourceInfo(67, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_hil_rc_inputs_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(68, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(100), SourceInfo(69, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_global_vision_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(101), SourceInfo(70, 60))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_vision_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(102), SourceInfo(71, 53))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_vision_speed_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(103), SourceInfo(72, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_vicon_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(104), SourceInfo(73, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_highres_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(105), SourceInfo(74, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_optical_flow_rad_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(106), SourceInfo(75, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_hil_sensor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(107), SourceInfo(76, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_sim_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(108), SourceInfo(77, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_radio_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(109), SourceInfo(78, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_file_transfer_protocol_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(110), SourceInfo(79, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_timesync_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(111), SourceInfo(80, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_camera_trigger_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(112), SourceInfo(81, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_hil_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(113), SourceInfo(82, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_hil_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(114), SourceInfo(83, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_hil_state_quaternion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(115), SourceInfo(84, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_scaled_imu2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(116), SourceInfo(85, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_log_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(117), SourceInfo(86, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_log_entry_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(118), SourceInfo(87, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_log_request_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(119), SourceInfo(88, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_log_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(120), SourceInfo(89, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_log_erase_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(121), SourceInfo(90, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_log_request_end_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(122), SourceInfo(91, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_gps_inject_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(123), SourceInfo(92, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_gps2_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(124), SourceInfo(93, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_power_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(125), SourceInfo(94, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_serial_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(126), SourceInfo(95, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_gps_rtk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(127), SourceInfo(96, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_gps2_rtk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(97, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_scaled_imu3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(129), SourceInfo(98, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_data_transmission_handshake_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(130), SourceInfo(99, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_encapsulated_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(131), SourceInfo(100, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_distance_sensor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(132), SourceInfo(101, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_terrain_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(133), SourceInfo(102, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_terrain_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(134), SourceInfo(103, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_terrain_check_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(135), SourceInfo(104, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_terrain_report_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(136), SourceInfo(105, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_scaled_pressure2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(137), SourceInfo(106, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_att_pos_mocap_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(138), SourceInfo(107, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_set_actuator_control_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(139), SourceInfo(108, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_actuator_control_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(140), SourceInfo(109, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_altitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(141), SourceInfo(110, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_resource_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(142), SourceInfo(111, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_scaled_pressure3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(143), SourceInfo(112, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_follow_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(144), SourceInfo(113, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_control_system_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(146), SourceInfo(114, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_battery_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(147), SourceInfo(115, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_autopilot_version_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(148), SourceInfo(116, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_landing_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(149), SourceInfo(117, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_estimator_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(230), SourceInfo(118, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_wind_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(231), SourceInfo(119, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_gps_rtcm_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(233), SourceInfo(120, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_vibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(121, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(242), SourceInfo(122, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_set_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(243), SourceInfo(123, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(244), SourceInfo(124, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_extended_sys_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(245), SourceInfo(125, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_adsb_vehicle_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(246), SourceInfo(126, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_v2_extension_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(248), SourceInfo(127, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_memory_vect_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(249), SourceInfo(128, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_debug_vect_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(250), SourceInfo(129, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_named_value_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(251), SourceInfo(130, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_named_value_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(252), SourceInfo(131, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_statustext_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(253), SourceInfo(132, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_debug_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(254), SourceInfo(133, 34))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("message_setup_signing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(134, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_generic_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(137, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_reserved_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(138, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_slugs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(139, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_ardupilotmega_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(140, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_openpilot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(141, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_generic_waypoints_only_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(142, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_generic_waypoints_and_simple_navigation_only_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(143, 79))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_generic_mission_full_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(144, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_invalid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(145, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_ppz_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(146, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_udb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(147, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_fp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(148, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_px4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(149, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_smaccmpilot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(150, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_autoquad_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(151, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_armazila_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(152, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_aerob_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(153, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_autopilot_asluav_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(154, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_generic_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(157, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_fixed_wing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(158, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_quadrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(159, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_coaxial_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(160, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_helicopter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(161, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_antenna_tracker_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(162, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_gcs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(163, 33))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_airship_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(164, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_free_balloon_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(165, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_rocket_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(166, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_ground_rover_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(167, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_surface_boat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(168, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_submarine_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(169, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_hexarotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(170, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_octorotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(171, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_tricopter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(172, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_flapping_wing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(173, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_kite_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(174, 34))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_onboard_controller_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(175, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_vtol_duorotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(176, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_vtol_quadrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(177, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_vtol_tiltrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(178, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_vtol_reserved2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(179, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_vtol_reserved3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(180, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_vtol_reserved4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(181, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_vtol_reserved5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(182, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(183, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_type_adsb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(184, 34))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("firmware_version_type_dev_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(187, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("firmware_version_type_alpha_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(188, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("firmware_version_type_beta_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(189, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("firmware_version_type_rc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(190, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("firmware_version_type_official_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(255), SourceInfo(191, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_safety_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(194, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_manual_input_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(195, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_hil_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(196, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_stabilize_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(197, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_guided_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(198, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_auto_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(199, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_test_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(200, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_custom_mode_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(201, 54))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_decode_position_safety_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(204, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_decode_position_manual_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(205, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_decode_position_hil_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(206, 54))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_decode_position_stabilize_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(207, 60))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_decode_position_guided_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(208, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_decode_position_auto_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(209, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_decode_position_test_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(210, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_flag_decode_position_custom_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(211, 62))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_goto_do_hold_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(214, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_goto_do_continue_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(215, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_goto_hold_at_current_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(216, 54))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_goto_hold_at_specified_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(217, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_preflight_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(220, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_stabilize_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(80), SourceInfo(221, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_stabilize_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(208), SourceInfo(222, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_manual_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(223, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_manual_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(224, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_guided_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(88), SourceInfo(225, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_guided_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(216), SourceInfo(226, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_auto_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(227, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_auto_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(228, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_test_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(66), SourceInfo(229, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mode_test_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(194), SourceInfo(230, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_state_uninit_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(233, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_state_boot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(234, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_state_calibrating_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(235, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_state_standby_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(236, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_state_active_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(237, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_state_critical_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(238, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_state_emergency_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(239, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_state_poweroff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(240, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(243, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(244, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_missionplanner_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(190), SourceInfo(245, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_pathplanner_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(195), SourceInfo(246, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_mapper_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(180), SourceInfo(247, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_camera_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(100), SourceInfo(248, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(200), SourceInfo(249, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_imu_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(201), SourceInfo(250, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_imu_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(202), SourceInfo(251, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_udp_bridge_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(240), SourceInfo(252, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_uart_bridge_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(253, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_system_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(250), SourceInfo(254, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(140), SourceInfo(255, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(141), SourceInfo(256, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(142), SourceInfo(257, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(143), SourceInfo(258, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(144), SourceInfo(259, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo6_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(145), SourceInfo(260, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo7_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(146), SourceInfo(261, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(147), SourceInfo(262, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo9_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(148), SourceInfo(263, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo10_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(149), SourceInfo(264, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo11_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(150), SourceInfo(265, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo12_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(151), SourceInfo(266, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo13_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(152), SourceInfo(267, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_servo14_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(153), SourceInfo(268, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(154), SourceInfo(269, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_log_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(155), SourceInfo(270, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_adsb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(156), SourceInfo(271, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_osd_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(157), SourceInfo(272, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_peripheral_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(158), SourceInfo(273, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_comp_id_qx1_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(159), SourceInfo(274, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_3d_gyro_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(277, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_3d_accel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(278, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_3d_mag_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(279, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_absolute_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(280, 60))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_differential_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(281, 64))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(282, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(283, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_vision_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(284, 58))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_laser_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(285, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_external_ground_truth_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(286, 64))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_angular_rate_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(287, 63))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_attitude_stabilization_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2048), SourceInfo(288, 65))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_yaw_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4096), SourceInfo(289, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_z_altitude_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8192), SourceInfo(290, 61))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_xy_position_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16384), SourceInfo(291, 62))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_motor_outputs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32768), SourceInfo(292, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_rc_receiver_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(65536), SourceInfo(293, 54))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_3d_gyro2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(131072), SourceInfo(294, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_3d_accel2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(262144), SourceInfo(295, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_sensor_3d_mag2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(524288), SourceInfo(296, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_geofence_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1048576), SourceInfo(297, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_ahrs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2097152), SourceInfo(298, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_terrain_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4194304), SourceInfo(299, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sys_status_reverse_motor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8388608), SourceInfo(300, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_global_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(303, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(304, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_mission_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(305, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_global_relative_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(306, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_local_enu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(307, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(308, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_global_relative_alt_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(309, 54))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_local_offset_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(310, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_body_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(311, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_body_offset_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(312, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_global_terrain_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(313, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_frame_global_terrain_alt_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(314, 53))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mavlink_data_stream_img_jpeg_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(317, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mavlink_data_stream_img_bmp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(318, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mavlink_data_stream_img_raw8u_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(319, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mavlink_data_stream_img_raw32u_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(320, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mavlink_data_stream_img_pgm_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(321, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mavlink_data_stream_img_png_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(322, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_action_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(325, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_action_guided_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(326, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_action_report_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(327, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_action_guided_thr_pass_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(328, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_action_rtl_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(329, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_breach_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(332, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_breach_minalt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(333, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_breach_maxalt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(334, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("fence_breach_boundary_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(335, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mount_mode_retract_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(338, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mount_mode_neutral_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(339, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mount_mode_mavlink_targeting_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(340, 53))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mount_mode_rc_targeting_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(341, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mount_mode_gps_point_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(342, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_waypoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(345, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_loiter_unlim_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(346, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_loiter_turns_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(347, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_loiter_time_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(348, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_return_to_launch_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(349, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(350, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_takeoff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(351, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_land_local_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(352, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_takeoff_local_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(353, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_follow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(354, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_continue_and_change_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(355, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_loiter_to_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(356, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_follow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(357, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_follow_reposition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(358, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_roi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(80), SourceInfo(359, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_pathplanning_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(81), SourceInfo(360, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_spline_waypoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(82), SourceInfo(361, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_vtol_takeoff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(84), SourceInfo(362, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_vtol_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(85), SourceInfo(363, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_guided_enable_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(364, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_delay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(93), SourceInfo(365, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_nav_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(95), SourceInfo(366, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_condition_delay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(112), SourceInfo(367, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_condition_change_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(113), SourceInfo(368, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_condition_distance_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(114), SourceInfo(369, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_condition_yaw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(115), SourceInfo(370, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_condition_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(159), SourceInfo(371, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_set_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(176), SourceInfo(372, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_jump_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(177), SourceInfo(373, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_change_speed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(178), SourceInfo(374, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_set_home_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(179), SourceInfo(375, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_set_parameter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(180), SourceInfo(376, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_set_relay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(181), SourceInfo(377, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_repeat_relay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(182), SourceInfo(378, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_set_servo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(183), SourceInfo(379, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_repeat_servo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(184), SourceInfo(380, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_flighttermination_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(185), SourceInfo(381, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_land_start_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(189), SourceInfo(382, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_rally_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(190), SourceInfo(383, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_go_around_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(191), SourceInfo(384, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_reposition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(385, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_pause_continue_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(193), SourceInfo(386, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_control_video_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(200), SourceInfo(387, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_set_roi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(201), SourceInfo(388, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_digicam_configure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(202), SourceInfo(389, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_digicam_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(203), SourceInfo(390, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_mount_configure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(204), SourceInfo(391, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_mount_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(205), SourceInfo(392, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_set_cam_trigg_dist_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(206), SourceInfo(393, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_fence_enable_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(207), SourceInfo(394, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_parachute_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(208), SourceInfo(395, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_inverted_flight_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(210), SourceInfo(396, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_mount_control_quat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(397, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_guided_master_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(221), SourceInfo(398, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_guided_limits_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(222), SourceInfo(399, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(240), SourceInfo(400, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_preflight_calibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(401, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_preflight_set_sensor_offsets_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(242), SourceInfo(402, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_preflight_uavcan_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(243), SourceInfo(403, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_preflight_storage_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(245), SourceInfo(404, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_preflight_reboot_shutdown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(246), SourceInfo(405, 54))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_override_goto_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(252), SourceInfo(406, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_mission_start_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(300), SourceInfo(407, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_component_arm_disarm_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(400), SourceInfo(408, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_get_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(410), SourceInfo(409, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_start_rx_pair_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(500), SourceInfo(410, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_get_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(510), SourceInfo(411, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_set_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(511), SourceInfo(412, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_request_autopilot_capabilities_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(520), SourceInfo(413, 59))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_image_start_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2000), SourceInfo(414, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_image_stop_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2001), SourceInfo(415, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_trigger_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2003), SourceInfo(416, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_video_start_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2500), SourceInfo(417, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_video_stop_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2501), SourceInfo(418, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_panorama_create_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2800), SourceInfo(419, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_do_vtol_transition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3000), SourceInfo(420, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_payload_prepare_deploy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30001), SourceInfo(421, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_payload_control_deploy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30002), SourceInfo(422, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_waypoint_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31000), SourceInfo(423, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_waypoint_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31001), SourceInfo(424, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_waypoint_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31002), SourceInfo(425, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_waypoint_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31003), SourceInfo(426, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_waypoint_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31004), SourceInfo(427, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_spatial_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31005), SourceInfo(428, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_spatial_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31006), SourceInfo(429, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_spatial_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31007), SourceInfo(430, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_spatial_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31008), SourceInfo(431, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_spatial_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31009), SourceInfo(432, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31010), SourceInfo(433, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31011), SourceInfo(434, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31012), SourceInfo(435, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31013), SourceInfo(436, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31014), SourceInfo(437, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(440, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_raw_sensors_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(441, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_extended_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(442, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_rc_channels_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(443, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_raw_controller_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(444, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(445, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_extra1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(446, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_extra2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(447, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_data_stream_extra3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(448, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_roi_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(451, 33))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_roi_wpnext_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(452, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_roi_wpindex_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(453, 36))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_roi_location_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(454, 37))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_roi_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(455, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_ok_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(458, 35))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_err_fail_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(459, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_err_access_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(460, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_err_not_supported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(461, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_err_coordinate_frame_not_supported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(462, 67))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_err_coordinates_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(463, 61))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_err_x_lat_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(464, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_err_y_lon_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(465, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_cmd_ack_err_z_alt_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(466, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_uint8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(469, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_int8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(470, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_uint16_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(471, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_int16_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(472, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_uint32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(473, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_int32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(474, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_uint64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(475, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_int64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(476, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_real32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(477, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_param_type_real64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(478, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_result_accepted_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(481, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_result_temporarily_rejected_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(482, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_result_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(483, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_result_unsupported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(484, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_result_failed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(485, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_accepted_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(488, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_error_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(489, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_unsupported_frame_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(490, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_unsupported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(491, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_no_space_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(492, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(493, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_param1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(494, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_param2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(495, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_param3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(496, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_param4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(497, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_param5_x_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(498, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_param6_y_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(499, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_param7_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(500, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_invalid_sequence_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(501, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_mission_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(502, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_severity_emergency_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(505, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_severity_alert_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(506, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_severity_critical_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(507, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_severity_error_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(508, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_severity_warning_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(509, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_severity_notice_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(510, 40))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_severity_info_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(511, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_severity_debug_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(512, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_power_status_brick_valid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(515, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_power_status_servo_valid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(516, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_power_status_usb_connected_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(517, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_power_status_periph_overcurrent_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(518, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_power_status_periph_hipower_overcurrent_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(519, 64))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_power_status_changed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(520, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_dev_telem1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(523, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_dev_telem2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(524, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_dev_gps1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(525, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_dev_gps2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(526, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_dev_shell_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(527, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_flag_reply_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(530, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_flag_respond_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(531, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_flag_exclusive_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(532, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_flag_blocking_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(533, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("serial_control_flag_multi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(534, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_distance_sensor_laser_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(537, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_distance_sensor_ultrasound_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(538, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_distance_sensor_infrared_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(539, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(542, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(543, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(544, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(545, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_yaw_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(546, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_yaw_225_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(547, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(548, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(549, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(550, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(551, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(552, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(553, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(554, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_225_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(555, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(556, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(557, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(558, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(559, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(560, 55))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(561, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(562, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(563, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(564, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(565, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(566, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(567, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_pitch_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(568, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_pitch_180_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(569, 58))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(28), SourceInfo(570, 57))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(29), SourceInfo(571, 58))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(572, 58))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(573, 58))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(574, 59))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(575, 58))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_180_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(34), SourceInfo(576, 59))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(35), SourceInfo(577, 59))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(36), SourceInfo(578, 65))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(37), SourceInfo(579, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_sensor_rotation_roll_315_pitch_315_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(38), SourceInfo(580, 67))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_mission_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(583, 58))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_param_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(584, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_mission_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(585, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_command_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(586, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_param_union_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(587, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_ftp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(588, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_set_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(589, 64))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_set_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(590, 74))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_set_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(591, 75))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_terrain_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(592, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_set_actuator_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(593, 64))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_flight_termination_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2048), SourceInfo(594, 63))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_protocol_capability_compass_calibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4096), SourceInfo(595, 64))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_estimator_type_naive_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(598, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_estimator_type_vision_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(599, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_estimator_type_vio_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(600, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_estimator_type_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(601, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_estimator_type_gps_ins_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(602, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_type_unknown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(605, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_type_lipo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(606, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_type_life_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(607, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_type_lion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(608, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_type_nimh_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(609, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_function_unknown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(612, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_function_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(613, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_function_propulsion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(614, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_function_avionics_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(615, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_battery_type_payload_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(616, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_vtol_state_undefined_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(619, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_vtol_state_transition_to_fw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(620, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_vtol_state_transition_to_mc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(621, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_vtol_state_mc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(622, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_vtol_state_fw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(623, 38))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_landed_state_undefined_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(626, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_landed_state_on_ground_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(627, 47))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_landed_state_in_air_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(628, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_altitude_type_pressure_qnh_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(631, 52))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_altitude_type_geometric_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(632, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_no_info_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(635, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_light_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(636, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_small_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(637, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_large_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(638, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_high_vortex_large_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(639, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_heavy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(640, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_highly_manuv_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(641, 51))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_rotocraft_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(642, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_unassigned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(643, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_glider_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(644, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_lighter_air_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(645, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_parachute_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(646, 48))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_ultra_light_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(647, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_unassigned2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(648, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_uav_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(649, 42))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_space_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(650, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_unassgined3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(651, 50))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_emergency_surface_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(652, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_service_surface_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(653, 54))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_emitter_type_point_obstacle_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(654, 53))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_flags_valid_coords_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(657, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_flags_valid_altitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(658, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_flags_valid_heading_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(659, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_flags_valid_velocity_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(660, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_flags_valid_callsign_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(661, 46))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_flags_valid_squawk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(662, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("adsb_flags_simulated_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(663, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("mav_do_reposition_flags_change_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(666, 56))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_attitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(669, 39))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_velocity_horiz_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(670, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_velocity_vert_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(671, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_pos_horiz_rel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(672, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_pos_horiz_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(673, 44))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_pos_vert_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(674, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_pos_vert_agl_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(675, 43))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_const_pos_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(676, 45))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_pred_pos_horiz_rel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(677, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_pred_pos_horiz_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(678, 49))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  FileInfo(FunDecl("estimator_gps_glitch_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(679, 41))), "file:///d:/git/safecps/systems/px4/lib/pmavlinkmsgs/pfiles/p_common_enumfunctions.p"),
  LineInfo(FunDecl("message_heartbeat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(2, 38))), ENTRY, 2),
  LineInfo(FunDecl("message_heartbeat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(2, 38))), EXIT, 2),
  LineInfo(FunDecl("message_sys_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(3, 39))), ENTRY, 3),
  LineInfo(FunDecl("message_sys_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(3, 39))), EXIT, 3),
  LineInfo(FunDecl("message_system_time_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(4, 40))), ENTRY, 4),
  LineInfo(FunDecl("message_system_time_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(4, 40))), EXIT, 4),
  LineInfo(FunDecl("message_ping_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(5, 33))), ENTRY, 5),
  LineInfo(FunDecl("message_ping_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(5, 33))), EXIT, 5),
  LineInfo(FunDecl("message_change_operator_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(6, 52))), ENTRY, 6),
  LineInfo(FunDecl("message_change_operator_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(6, 52))), EXIT, 6),
  LineInfo(FunDecl("message_change_operator_control_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(7, 56))), ENTRY, 7),
  LineInfo(FunDecl("message_change_operator_control_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(7, 56))), EXIT, 7),
  LineInfo(FunDecl("message_auth_key_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(8, 37))), ENTRY, 8),
  LineInfo(FunDecl("message_auth_key_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(8, 37))), EXIT, 8),
  LineInfo(FunDecl("message_set_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(9, 37))), ENTRY, 9),
  LineInfo(FunDecl("message_set_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(9, 37))), EXIT, 9),
  LineInfo(FunDecl("message_param_request_read_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(10, 47))), ENTRY, 10),
  LineInfo(FunDecl("message_param_request_read_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(10, 47))), EXIT, 10),
  LineInfo(FunDecl("message_param_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(11, 47))), ENTRY, 11),
  LineInfo(FunDecl("message_param_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(11, 47))), EXIT, 11),
  LineInfo(FunDecl("message_param_value_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(12, 40))), ENTRY, 12),
  LineInfo(FunDecl("message_param_value_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(12, 40))), EXIT, 12),
  LineInfo(FunDecl("message_param_set_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(13, 38))), ENTRY, 13),
  LineInfo(FunDecl("message_param_set_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(13, 38))), EXIT, 13),
  LineInfo(FunDecl("message_gps_raw_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(14, 40))), ENTRY, 14),
  LineInfo(FunDecl("message_gps_raw_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(14, 40))), EXIT, 14),
  LineInfo(FunDecl("message_gps_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(15, 39))), ENTRY, 15),
  LineInfo(FunDecl("message_gps_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(15, 39))), EXIT, 15),
  LineInfo(FunDecl("message_scaled_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(16, 39))), ENTRY, 16),
  LineInfo(FunDecl("message_scaled_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(16, 39))), EXIT, 16),
  LineInfo(FunDecl("message_raw_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(17, 36))), ENTRY, 17),
  LineInfo(FunDecl("message_raw_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(17, 36))), EXIT, 17),
  LineInfo(FunDecl("message_raw_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(28), SourceInfo(18, 41))), ENTRY, 18),
  LineInfo(FunDecl("message_raw_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(28), SourceInfo(18, 41))), EXIT, 18),
  LineInfo(FunDecl("message_scaled_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(29), SourceInfo(19, 44))), ENTRY, 19),
  LineInfo(FunDecl("message_scaled_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(29), SourceInfo(19, 44))), EXIT, 19),
  LineInfo(FunDecl("message_attitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(20, 37))), ENTRY, 20),
  LineInfo(FunDecl("message_attitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(20, 37))), EXIT, 20),
  LineInfo(FunDecl("message_attitude_quaternion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(21, 48))), ENTRY, 21),
  LineInfo(FunDecl("message_attitude_quaternion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(21, 48))), EXIT, 21),
  LineInfo(FunDecl("message_local_position_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(22, 47))), ENTRY, 22),
  LineInfo(FunDecl("message_local_position_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(22, 47))), EXIT, 22),
  LineInfo(FunDecl("message_global_position_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(23, 48))), ENTRY, 23),
  LineInfo(FunDecl("message_global_position_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(23, 48))), EXIT, 23),
  LineInfo(FunDecl("message_rc_channels_scaled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(34), SourceInfo(24, 47))), ENTRY, 24),
  LineInfo(FunDecl("message_rc_channels_scaled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(34), SourceInfo(24, 47))), EXIT, 24),
  LineInfo(FunDecl("message_rc_channels_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(35), SourceInfo(25, 44))), ENTRY, 25),
  LineInfo(FunDecl("message_rc_channels_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(35), SourceInfo(25, 44))), EXIT, 25),
  LineInfo(FunDecl("message_servo_output_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(36), SourceInfo(26, 45))), ENTRY, 26),
  LineInfo(FunDecl("message_servo_output_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(36), SourceInfo(26, 45))), EXIT, 26),
  LineInfo(FunDecl("message_mission_request_partial_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(37), SourceInfo(27, 57))), ENTRY, 27),
  LineInfo(FunDecl("message_mission_request_partial_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(37), SourceInfo(27, 57))), EXIT, 27),
  LineInfo(FunDecl("message_mission_write_partial_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(38), SourceInfo(28, 55))), ENTRY, 28),
  LineInfo(FunDecl("message_mission_write_partial_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(38), SourceInfo(28, 55))), EXIT, 28),
  LineInfo(FunDecl("message_mission_item_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(39), SourceInfo(29, 41))), ENTRY, 29),
  LineInfo(FunDecl("message_mission_item_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(39), SourceInfo(29, 41))), EXIT, 29),
  LineInfo(FunDecl("message_mission_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(40), SourceInfo(30, 44))), ENTRY, 30),
  LineInfo(FunDecl("message_mission_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(40), SourceInfo(30, 44))), EXIT, 30),
  LineInfo(FunDecl("message_mission_set_current_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(41), SourceInfo(31, 48))), ENTRY, 31),
  LineInfo(FunDecl("message_mission_set_current_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(41), SourceInfo(31, 48))), EXIT, 31),
  LineInfo(FunDecl("message_mission_current_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(42), SourceInfo(32, 44))), ENTRY, 32),
  LineInfo(FunDecl("message_mission_current_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(42), SourceInfo(32, 44))), EXIT, 32),
  LineInfo(FunDecl("message_mission_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(43), SourceInfo(33, 49))), ENTRY, 33),
  LineInfo(FunDecl("message_mission_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(43), SourceInfo(33, 49))), EXIT, 33),
  LineInfo(FunDecl("message_mission_count_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(44), SourceInfo(34, 42))), ENTRY, 34),
  LineInfo(FunDecl("message_mission_count_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(44), SourceInfo(34, 42))), EXIT, 34),
  LineInfo(FunDecl("message_mission_clear_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(45), SourceInfo(35, 46))), ENTRY, 35),
  LineInfo(FunDecl("message_mission_clear_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(45), SourceInfo(35, 46))), EXIT, 35),
  LineInfo(FunDecl("message_mission_item_reached_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(46), SourceInfo(36, 49))), ENTRY, 36),
  LineInfo(FunDecl("message_mission_item_reached_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(46), SourceInfo(36, 49))), EXIT, 36),
  LineInfo(FunDecl("message_mission_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(47), SourceInfo(37, 40))), ENTRY, 37),
  LineInfo(FunDecl("message_mission_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(47), SourceInfo(37, 40))), EXIT, 37),
  LineInfo(FunDecl("message_set_gps_global_origin_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(48), SourceInfo(38, 50))), ENTRY, 38),
  LineInfo(FunDecl("message_set_gps_global_origin_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(48), SourceInfo(38, 50))), EXIT, 38),
  LineInfo(FunDecl("message_gps_global_origin_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(49), SourceInfo(39, 46))), ENTRY, 39),
  LineInfo(FunDecl("message_gps_global_origin_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(49), SourceInfo(39, 46))), EXIT, 39),
  LineInfo(FunDecl("message_param_map_rc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(50), SourceInfo(40, 41))), ENTRY, 40),
  LineInfo(FunDecl("message_param_map_rc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(50), SourceInfo(40, 41))), EXIT, 40),
  LineInfo(FunDecl("message_mission_request_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(51), SourceInfo(41, 48))), ENTRY, 41),
  LineInfo(FunDecl("message_mission_request_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(51), SourceInfo(41, 48))), EXIT, 41),
  LineInfo(FunDecl("message_safety_set_allowed_area_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(54), SourceInfo(42, 52))), ENTRY, 42),
  LineInfo(FunDecl("message_safety_set_allowed_area_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(54), SourceInfo(42, 52))), EXIT, 42),
  LineInfo(FunDecl("message_safety_allowed_area_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(55), SourceInfo(43, 48))), ENTRY, 43),
  LineInfo(FunDecl("message_safety_allowed_area_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(55), SourceInfo(43, 48))), EXIT, 43),
  LineInfo(FunDecl("message_attitude_quaternion_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(61), SourceInfo(44, 52))), ENTRY, 44),
  LineInfo(FunDecl("message_attitude_quaternion_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(61), SourceInfo(44, 52))), EXIT, 44),
  LineInfo(FunDecl("message_nav_controller_output_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(62), SourceInfo(45, 50))), ENTRY, 45),
  LineInfo(FunDecl("message_nav_controller_output_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(62), SourceInfo(45, 50))), EXIT, 45),
  LineInfo(FunDecl("message_global_position_int_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(63), SourceInfo(46, 52))), ENTRY, 46),
  LineInfo(FunDecl("message_global_position_int_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(63), SourceInfo(46, 52))), EXIT, 46),
  LineInfo(FunDecl("message_local_position_ned_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(47, 51))), ENTRY, 47),
  LineInfo(FunDecl("message_local_position_ned_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(47, 51))), EXIT, 47),
  LineInfo(FunDecl("message_rc_channels_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(65), SourceInfo(48, 40))), ENTRY, 48),
  LineInfo(FunDecl("message_rc_channels_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(65), SourceInfo(48, 40))), EXIT, 48),
  LineInfo(FunDecl("message_request_data_stream_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(66), SourceInfo(49, 48))), ENTRY, 49),
  LineInfo(FunDecl("message_request_data_stream_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(66), SourceInfo(49, 48))), EXIT, 49),
  LineInfo(FunDecl("message_data_stream_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(67), SourceInfo(50, 40))), ENTRY, 50),
  LineInfo(FunDecl("message_data_stream_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(67), SourceInfo(50, 40))), EXIT, 50),
  LineInfo(FunDecl("message_manual_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(69), SourceInfo(51, 43))), ENTRY, 51),
  LineInfo(FunDecl("message_manual_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(69), SourceInfo(51, 43))), EXIT, 51),
  LineInfo(FunDecl("message_rc_channels_override_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(70), SourceInfo(52, 49))), ENTRY, 52),
  LineInfo(FunDecl("message_rc_channels_override_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(70), SourceInfo(52, 49))), EXIT, 52),
  LineInfo(FunDecl("message_mission_item_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(73), SourceInfo(53, 45))), ENTRY, 53),
  LineInfo(FunDecl("message_mission_item_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(73), SourceInfo(53, 45))), EXIT, 53),
  LineInfo(FunDecl("message_vfr_hud_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(74), SourceInfo(54, 36))), ENTRY, 54),
  LineInfo(FunDecl("message_vfr_hud_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(74), SourceInfo(54, 36))), EXIT, 54),
  LineInfo(FunDecl("message_command_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(75), SourceInfo(55, 40))), ENTRY, 55),
  LineInfo(FunDecl("message_command_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(75), SourceInfo(55, 40))), EXIT, 55),
  LineInfo(FunDecl("message_command_long_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(76), SourceInfo(56, 41))), ENTRY, 56),
  LineInfo(FunDecl("message_command_long_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(76), SourceInfo(56, 41))), EXIT, 56),
  LineInfo(FunDecl("message_command_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(77), SourceInfo(57, 40))), ENTRY, 57),
  LineInfo(FunDecl("message_command_ack_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(77), SourceInfo(57, 40))), EXIT, 57),
  LineInfo(FunDecl("message_manual_setpoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(81), SourceInfo(58, 44))), ENTRY, 58),
  LineInfo(FunDecl("message_manual_setpoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(81), SourceInfo(58, 44))), EXIT, 58),
  LineInfo(FunDecl("message_set_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(82), SourceInfo(59, 48))), ENTRY, 59),
  LineInfo(FunDecl("message_set_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(82), SourceInfo(59, 48))), EXIT, 59),
  LineInfo(FunDecl("message_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(83), SourceInfo(60, 44))), ENTRY, 60),
  LineInfo(FunDecl("message_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(83), SourceInfo(60, 44))), EXIT, 60),
  LineInfo(FunDecl("message_set_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(84), SourceInfo(61, 58))), ENTRY, 61),
  LineInfo(FunDecl("message_set_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(84), SourceInfo(61, 58))), EXIT, 61),
  LineInfo(FunDecl("message_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(85), SourceInfo(62, 54))), ENTRY, 62),
  LineInfo(FunDecl("message_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(85), SourceInfo(62, 54))), EXIT, 62),
  LineInfo(FunDecl("message_set_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(86), SourceInfo(63, 59))), ENTRY, 63),
  LineInfo(FunDecl("message_set_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(86), SourceInfo(63, 59))), EXIT, 63),
  LineInfo(FunDecl("message_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(87), SourceInfo(64, 55))), ENTRY, 64),
  LineInfo(FunDecl("message_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(87), SourceInfo(64, 55))), EXIT, 64),
  LineInfo(FunDecl("message_local_position_ned_system_global_offset_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(89), SourceInfo(65, 68))), ENTRY, 65),
  LineInfo(FunDecl("message_local_position_ned_system_global_offset_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(89), SourceInfo(65, 68))), EXIT, 65),
  LineInfo(FunDecl("message_hil_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(90), SourceInfo(66, 38))), ENTRY, 66),
  LineInfo(FunDecl("message_hil_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(90), SourceInfo(66, 38))), EXIT, 66),
  LineInfo(FunDecl("message_hil_controls_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(91), SourceInfo(67, 41))), ENTRY, 67),
  LineInfo(FunDecl("message_hil_controls_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(91), SourceInfo(67, 41))), EXIT, 67),
  LineInfo(FunDecl("message_hil_rc_inputs_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(68, 46))), ENTRY, 68),
  LineInfo(FunDecl("message_hil_rc_inputs_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(68, 46))), EXIT, 68),
  LineInfo(FunDecl("message_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(100), SourceInfo(69, 41))), ENTRY, 69),
  LineInfo(FunDecl("message_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(100), SourceInfo(69, 41))), EXIT, 69),
  LineInfo(FunDecl("message_global_vision_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(101), SourceInfo(70, 60))), ENTRY, 70),
  LineInfo(FunDecl("message_global_vision_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(101), SourceInfo(70, 60))), EXIT, 70),
  LineInfo(FunDecl("message_vision_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(102), SourceInfo(71, 53))), ENTRY, 71),
  LineInfo(FunDecl("message_vision_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(102), SourceInfo(71, 53))), EXIT, 71),
  LineInfo(FunDecl("message_vision_speed_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(103), SourceInfo(72, 50))), ENTRY, 72),
  LineInfo(FunDecl("message_vision_speed_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(103), SourceInfo(72, 50))), EXIT, 72),
  LineInfo(FunDecl("message_vicon_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(104), SourceInfo(73, 52))), ENTRY, 73),
  LineInfo(FunDecl("message_vicon_position_estimate_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(104), SourceInfo(73, 52))), EXIT, 73),
  LineInfo(FunDecl("message_highres_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(105), SourceInfo(74, 40))), ENTRY, 74),
  LineInfo(FunDecl("message_highres_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(105), SourceInfo(74, 40))), EXIT, 74),
  LineInfo(FunDecl("message_optical_flow_rad_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(106), SourceInfo(75, 45))), ENTRY, 75),
  LineInfo(FunDecl("message_optical_flow_rad_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(106), SourceInfo(75, 45))), EXIT, 75),
  LineInfo(FunDecl("message_hil_sensor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(107), SourceInfo(76, 39))), ENTRY, 76),
  LineInfo(FunDecl("message_hil_sensor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(107), SourceInfo(76, 39))), EXIT, 76),
  LineInfo(FunDecl("message_sim_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(108), SourceInfo(77, 38))), ENTRY, 77),
  LineInfo(FunDecl("message_sim_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(108), SourceInfo(77, 38))), EXIT, 77),
  LineInfo(FunDecl("message_radio_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(109), SourceInfo(78, 41))), ENTRY, 78),
  LineInfo(FunDecl("message_radio_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(109), SourceInfo(78, 41))), EXIT, 78),
  LineInfo(FunDecl("message_file_transfer_protocol_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(110), SourceInfo(79, 51))), ENTRY, 79),
  LineInfo(FunDecl("message_file_transfer_protocol_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(110), SourceInfo(79, 51))), EXIT, 79),
  LineInfo(FunDecl("message_timesync_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(111), SourceInfo(80, 37))), ENTRY, 80),
  LineInfo(FunDecl("message_timesync_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(111), SourceInfo(80, 37))), EXIT, 80),
  LineInfo(FunDecl("message_camera_trigger_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(112), SourceInfo(81, 43))), ENTRY, 81),
  LineInfo(FunDecl("message_camera_trigger_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(112), SourceInfo(81, 43))), EXIT, 81),
  LineInfo(FunDecl("message_hil_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(113), SourceInfo(82, 36))), ENTRY, 82),
  LineInfo(FunDecl("message_hil_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(113), SourceInfo(82, 36))), EXIT, 82),
  LineInfo(FunDecl("message_hil_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(114), SourceInfo(83, 45))), ENTRY, 83),
  LineInfo(FunDecl("message_hil_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(114), SourceInfo(83, 45))), EXIT, 83),
  LineInfo(FunDecl("message_hil_state_quaternion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(115), SourceInfo(84, 49))), ENTRY, 84),
  LineInfo(FunDecl("message_hil_state_quaternion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(115), SourceInfo(84, 49))), EXIT, 84),
  LineInfo(FunDecl("message_scaled_imu2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(116), SourceInfo(85, 40))), ENTRY, 85),
  LineInfo(FunDecl("message_scaled_imu2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(116), SourceInfo(85, 40))), EXIT, 85),
  LineInfo(FunDecl("message_log_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(117), SourceInfo(86, 45))), ENTRY, 86),
  LineInfo(FunDecl("message_log_request_list_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(117), SourceInfo(86, 45))), EXIT, 86),
  LineInfo(FunDecl("message_log_entry_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(118), SourceInfo(87, 38))), ENTRY, 87),
  LineInfo(FunDecl("message_log_entry_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(118), SourceInfo(87, 38))), EXIT, 87),
  LineInfo(FunDecl("message_log_request_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(119), SourceInfo(88, 45))), ENTRY, 88),
  LineInfo(FunDecl("message_log_request_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(119), SourceInfo(88, 45))), EXIT, 88),
  LineInfo(FunDecl("message_log_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(120), SourceInfo(89, 37))), ENTRY, 89),
  LineInfo(FunDecl("message_log_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(120), SourceInfo(89, 37))), EXIT, 89),
  LineInfo(FunDecl("message_log_erase_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(121), SourceInfo(90, 38))), ENTRY, 90),
  LineInfo(FunDecl("message_log_erase_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(121), SourceInfo(90, 38))), EXIT, 90),
  LineInfo(FunDecl("message_log_request_end_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(122), SourceInfo(91, 44))), ENTRY, 91),
  LineInfo(FunDecl("message_log_request_end_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(122), SourceInfo(91, 44))), EXIT, 91),
  LineInfo(FunDecl("message_gps_inject_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(123), SourceInfo(92, 44))), ENTRY, 92),
  LineInfo(FunDecl("message_gps_inject_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(123), SourceInfo(92, 44))), EXIT, 92),
  LineInfo(FunDecl("message_gps2_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(124), SourceInfo(93, 37))), ENTRY, 93),
  LineInfo(FunDecl("message_gps2_raw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(124), SourceInfo(93, 37))), EXIT, 93),
  LineInfo(FunDecl("message_power_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(125), SourceInfo(94, 41))), ENTRY, 94),
  LineInfo(FunDecl("message_power_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(125), SourceInfo(94, 41))), EXIT, 94),
  LineInfo(FunDecl("message_serial_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(126), SourceInfo(95, 43))), ENTRY, 95),
  LineInfo(FunDecl("message_serial_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(126), SourceInfo(95, 43))), EXIT, 95),
  LineInfo(FunDecl("message_gps_rtk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(127), SourceInfo(96, 36))), ENTRY, 96),
  LineInfo(FunDecl("message_gps_rtk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(127), SourceInfo(96, 36))), EXIT, 96),
  LineInfo(FunDecl("message_gps2_rtk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(97, 37))), ENTRY, 97),
  LineInfo(FunDecl("message_gps2_rtk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(97, 37))), EXIT, 97),
  LineInfo(FunDecl("message_scaled_imu3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(129), SourceInfo(98, 40))), ENTRY, 98),
  LineInfo(FunDecl("message_scaled_imu3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(129), SourceInfo(98, 40))), EXIT, 98),
  LineInfo(FunDecl("message_data_transmission_handshake_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(130), SourceInfo(99, 56))), ENTRY, 99),
  LineInfo(FunDecl("message_data_transmission_handshake_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(130), SourceInfo(99, 56))), EXIT, 99),
  LineInfo(FunDecl("message_encapsulated_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(131), SourceInfo(100, 46))), ENTRY, 100),
  LineInfo(FunDecl("message_encapsulated_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(131), SourceInfo(100, 46))), EXIT, 100),
  LineInfo(FunDecl("message_distance_sensor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(132), SourceInfo(101, 44))), ENTRY, 101),
  LineInfo(FunDecl("message_distance_sensor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(132), SourceInfo(101, 44))), EXIT, 101),
  LineInfo(FunDecl("message_terrain_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(133), SourceInfo(102, 44))), ENTRY, 102),
  LineInfo(FunDecl("message_terrain_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(133), SourceInfo(102, 44))), EXIT, 102),
  LineInfo(FunDecl("message_terrain_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(134), SourceInfo(103, 41))), ENTRY, 103),
  LineInfo(FunDecl("message_terrain_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(134), SourceInfo(103, 41))), EXIT, 103),
  LineInfo(FunDecl("message_terrain_check_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(135), SourceInfo(104, 42))), ENTRY, 104),
  LineInfo(FunDecl("message_terrain_check_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(135), SourceInfo(104, 42))), EXIT, 104),
  LineInfo(FunDecl("message_terrain_report_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(136), SourceInfo(105, 43))), ENTRY, 105),
  LineInfo(FunDecl("message_terrain_report_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(136), SourceInfo(105, 43))), EXIT, 105),
  LineInfo(FunDecl("message_scaled_pressure2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(137), SourceInfo(106, 45))), ENTRY, 106),
  LineInfo(FunDecl("message_scaled_pressure2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(137), SourceInfo(106, 45))), EXIT, 106),
  LineInfo(FunDecl("message_att_pos_mocap_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(138), SourceInfo(107, 42))), ENTRY, 107),
  LineInfo(FunDecl("message_att_pos_mocap_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(138), SourceInfo(107, 42))), EXIT, 107),
  LineInfo(FunDecl("message_set_actuator_control_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(139), SourceInfo(108, 56))), ENTRY, 108),
  LineInfo(FunDecl("message_set_actuator_control_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(139), SourceInfo(108, 56))), EXIT, 108),
  LineInfo(FunDecl("message_actuator_control_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(140), SourceInfo(109, 52))), ENTRY, 109),
  LineInfo(FunDecl("message_actuator_control_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(140), SourceInfo(109, 52))), EXIT, 109),
  LineInfo(FunDecl("message_altitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(141), SourceInfo(110, 37))), ENTRY, 110),
  LineInfo(FunDecl("message_altitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(141), SourceInfo(110, 37))), EXIT, 110),
  LineInfo(FunDecl("message_resource_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(142), SourceInfo(111, 45))), ENTRY, 111),
  LineInfo(FunDecl("message_resource_request_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(142), SourceInfo(111, 45))), EXIT, 111),
  LineInfo(FunDecl("message_scaled_pressure3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(143), SourceInfo(112, 45))), ENTRY, 112),
  LineInfo(FunDecl("message_scaled_pressure3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(143), SourceInfo(112, 45))), EXIT, 112),
  LineInfo(FunDecl("message_follow_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(144), SourceInfo(113, 42))), ENTRY, 113),
  LineInfo(FunDecl("message_follow_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(144), SourceInfo(113, 42))), EXIT, 113),
  LineInfo(FunDecl("message_control_system_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(146), SourceInfo(114, 49))), ENTRY, 114),
  LineInfo(FunDecl("message_control_system_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(146), SourceInfo(114, 49))), EXIT, 114),
  LineInfo(FunDecl("message_battery_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(147), SourceInfo(115, 43))), ENTRY, 115),
  LineInfo(FunDecl("message_battery_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(147), SourceInfo(115, 43))), EXIT, 115),
  LineInfo(FunDecl("message_autopilot_version_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(148), SourceInfo(116, 46))), ENTRY, 116),
  LineInfo(FunDecl("message_autopilot_version_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(148), SourceInfo(116, 46))), EXIT, 116),
  LineInfo(FunDecl("message_landing_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(149), SourceInfo(117, 43))), ENTRY, 117),
  LineInfo(FunDecl("message_landing_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(149), SourceInfo(117, 43))), EXIT, 117),
  LineInfo(FunDecl("message_estimator_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(230), SourceInfo(118, 45))), ENTRY, 118),
  LineInfo(FunDecl("message_estimator_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(230), SourceInfo(118, 45))), EXIT, 118),
  LineInfo(FunDecl("message_wind_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(231), SourceInfo(119, 37))), ENTRY, 119),
  LineInfo(FunDecl("message_wind_cov_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(231), SourceInfo(119, 37))), EXIT, 119),
  LineInfo(FunDecl("message_gps_rtcm_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(233), SourceInfo(120, 42))), ENTRY, 120),
  LineInfo(FunDecl("message_gps_rtcm_data_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(233), SourceInfo(120, 42))), EXIT, 120),
  LineInfo(FunDecl("message_vibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(121, 38))), ENTRY, 121),
  LineInfo(FunDecl("message_vibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(121, 38))), EXIT, 121),
  LineInfo(FunDecl("message_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(242), SourceInfo(122, 42))), ENTRY, 122),
  LineInfo(FunDecl("message_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(242), SourceInfo(122, 42))), EXIT, 122),
  LineInfo(FunDecl("message_set_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(243), SourceInfo(123, 46))), ENTRY, 123),
  LineInfo(FunDecl("message_set_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(243), SourceInfo(123, 46))), EXIT, 123),
  LineInfo(FunDecl("message_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(244), SourceInfo(124, 45))), ENTRY, 124),
  LineInfo(FunDecl("message_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(244), SourceInfo(124, 45))), EXIT, 124),
  LineInfo(FunDecl("message_extended_sys_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(245), SourceInfo(125, 47))), ENTRY, 125),
  LineInfo(FunDecl("message_extended_sys_state_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(245), SourceInfo(125, 47))), EXIT, 125),
  LineInfo(FunDecl("message_adsb_vehicle_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(246), SourceInfo(126, 41))), ENTRY, 126),
  LineInfo(FunDecl("message_adsb_vehicle_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(246), SourceInfo(126, 41))), EXIT, 126),
  LineInfo(FunDecl("message_v2_extension_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(248), SourceInfo(127, 41))), ENTRY, 127),
  LineInfo(FunDecl("message_v2_extension_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(248), SourceInfo(127, 41))), EXIT, 127),
  LineInfo(FunDecl("message_memory_vect_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(249), SourceInfo(128, 40))), ENTRY, 128),
  LineInfo(FunDecl("message_memory_vect_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(249), SourceInfo(128, 40))), EXIT, 128),
  LineInfo(FunDecl("message_debug_vect_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(250), SourceInfo(129, 39))), ENTRY, 129),
  LineInfo(FunDecl("message_debug_vect_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(250), SourceInfo(129, 39))), EXIT, 129),
  LineInfo(FunDecl("message_named_value_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(251), SourceInfo(130, 46))), ENTRY, 130),
  LineInfo(FunDecl("message_named_value_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(251), SourceInfo(130, 46))), EXIT, 130),
  LineInfo(FunDecl("message_named_value_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(252), SourceInfo(131, 44))), ENTRY, 131),
  LineInfo(FunDecl("message_named_value_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(252), SourceInfo(131, 44))), EXIT, 131),
  LineInfo(FunDecl("message_statustext_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(253), SourceInfo(132, 39))), ENTRY, 132),
  LineInfo(FunDecl("message_statustext_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(253), SourceInfo(132, 39))), EXIT, 132),
  LineInfo(FunDecl("message_debug_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(254), SourceInfo(133, 34))), ENTRY, 133),
  LineInfo(FunDecl("message_debug_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(254), SourceInfo(133, 34))), EXIT, 133),
  LineInfo(FunDecl("message_setup_signing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(134, 42))), ENTRY, 134),
  LineInfo(FunDecl("message_setup_signing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(134, 42))), EXIT, 134),
  LineInfo(FunDecl("mav_autopilot_generic_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(137, 42))), ENTRY, 137),
  LineInfo(FunDecl("mav_autopilot_generic_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(137, 42))), EXIT, 137),
  LineInfo(FunDecl("mav_autopilot_reserved_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(138, 43))), ENTRY, 138),
  LineInfo(FunDecl("mav_autopilot_reserved_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(138, 43))), EXIT, 138),
  LineInfo(FunDecl("mav_autopilot_slugs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(139, 40))), ENTRY, 139),
  LineInfo(FunDecl("mav_autopilot_slugs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(139, 40))), EXIT, 139),
  LineInfo(FunDecl("mav_autopilot_ardupilotmega_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(140, 48))), ENTRY, 140),
  LineInfo(FunDecl("mav_autopilot_ardupilotmega_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(140, 48))), EXIT, 140),
  LineInfo(FunDecl("mav_autopilot_openpilot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(141, 44))), ENTRY, 141),
  LineInfo(FunDecl("mav_autopilot_openpilot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(141, 44))), EXIT, 141),
  LineInfo(FunDecl("mav_autopilot_generic_waypoints_only_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(142, 57))), ENTRY, 142),
  LineInfo(FunDecl("mav_autopilot_generic_waypoints_only_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(142, 57))), EXIT, 142),
  LineInfo(FunDecl("mav_autopilot_generic_waypoints_and_simple_navigation_only_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(143, 79))), ENTRY, 143),
  LineInfo(FunDecl("mav_autopilot_generic_waypoints_and_simple_navigation_only_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(143, 79))), EXIT, 143),
  LineInfo(FunDecl("mav_autopilot_generic_mission_full_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(144, 55))), ENTRY, 144),
  LineInfo(FunDecl("mav_autopilot_generic_mission_full_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(144, 55))), EXIT, 144),
  LineInfo(FunDecl("mav_autopilot_invalid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(145, 42))), ENTRY, 145),
  LineInfo(FunDecl("mav_autopilot_invalid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(145, 42))), EXIT, 145),
  LineInfo(FunDecl("mav_autopilot_ppz_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(146, 38))), ENTRY, 146),
  LineInfo(FunDecl("mav_autopilot_ppz_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(146, 38))), EXIT, 146),
  LineInfo(FunDecl("mav_autopilot_udb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(147, 38))), ENTRY, 147),
  LineInfo(FunDecl("mav_autopilot_udb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(147, 38))), EXIT, 147),
  LineInfo(FunDecl("mav_autopilot_fp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(148, 37))), ENTRY, 148),
  LineInfo(FunDecl("mav_autopilot_fp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(148, 37))), EXIT, 148),
  LineInfo(FunDecl("mav_autopilot_px4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(149, 38))), ENTRY, 149),
  LineInfo(FunDecl("mav_autopilot_px4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(149, 38))), EXIT, 149),
  LineInfo(FunDecl("mav_autopilot_smaccmpilot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(150, 46))), ENTRY, 150),
  LineInfo(FunDecl("mav_autopilot_smaccmpilot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(150, 46))), EXIT, 150),
  LineInfo(FunDecl("mav_autopilot_autoquad_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(151, 43))), ENTRY, 151),
  LineInfo(FunDecl("mav_autopilot_autoquad_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(151, 43))), EXIT, 151),
  LineInfo(FunDecl("mav_autopilot_armazila_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(152, 43))), ENTRY, 152),
  LineInfo(FunDecl("mav_autopilot_armazila_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(152, 43))), EXIT, 152),
  LineInfo(FunDecl("mav_autopilot_aerob_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(153, 40))), ENTRY, 153),
  LineInfo(FunDecl("mav_autopilot_aerob_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(153, 40))), EXIT, 153),
  LineInfo(FunDecl("mav_autopilot_asluav_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(154, 41))), ENTRY, 154),
  LineInfo(FunDecl("mav_autopilot_asluav_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(154, 41))), EXIT, 154),
  LineInfo(FunDecl("mav_type_generic_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(157, 37))), ENTRY, 157),
  LineInfo(FunDecl("mav_type_generic_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(157, 37))), EXIT, 157),
  LineInfo(FunDecl("mav_type_fixed_wing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(158, 40))), ENTRY, 158),
  LineInfo(FunDecl("mav_type_fixed_wing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(158, 40))), EXIT, 158),
  LineInfo(FunDecl("mav_type_quadrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(159, 39))), ENTRY, 159),
  LineInfo(FunDecl("mav_type_quadrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(159, 39))), EXIT, 159),
  LineInfo(FunDecl("mav_type_coaxial_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(160, 37))), ENTRY, 160),
  LineInfo(FunDecl("mav_type_coaxial_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(160, 37))), EXIT, 160),
  LineInfo(FunDecl("mav_type_helicopter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(161, 40))), ENTRY, 161),
  LineInfo(FunDecl("mav_type_helicopter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(161, 40))), EXIT, 161),
  LineInfo(FunDecl("mav_type_antenna_tracker_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(162, 45))), ENTRY, 162),
  LineInfo(FunDecl("mav_type_antenna_tracker_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(162, 45))), EXIT, 162),
  LineInfo(FunDecl("mav_type_gcs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(163, 33))), ENTRY, 163),
  LineInfo(FunDecl("mav_type_gcs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(163, 33))), EXIT, 163),
  LineInfo(FunDecl("mav_type_airship_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(164, 37))), ENTRY, 164),
  LineInfo(FunDecl("mav_type_airship_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(164, 37))), EXIT, 164),
  LineInfo(FunDecl("mav_type_free_balloon_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(165, 42))), ENTRY, 165),
  LineInfo(FunDecl("mav_type_free_balloon_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(165, 42))), EXIT, 165),
  LineInfo(FunDecl("mav_type_rocket_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(166, 36))), ENTRY, 166),
  LineInfo(FunDecl("mav_type_rocket_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(166, 36))), EXIT, 166),
  LineInfo(FunDecl("mav_type_ground_rover_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(167, 42))), ENTRY, 167),
  LineInfo(FunDecl("mav_type_ground_rover_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(167, 42))), EXIT, 167),
  LineInfo(FunDecl("mav_type_surface_boat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(168, 42))), ENTRY, 168),
  LineInfo(FunDecl("mav_type_surface_boat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(168, 42))), EXIT, 168),
  LineInfo(FunDecl("mav_type_submarine_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(169, 39))), ENTRY, 169),
  LineInfo(FunDecl("mav_type_submarine_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(169, 39))), EXIT, 169),
  LineInfo(FunDecl("mav_type_hexarotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(170, 39))), ENTRY, 170),
  LineInfo(FunDecl("mav_type_hexarotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(170, 39))), EXIT, 170),
  LineInfo(FunDecl("mav_type_octorotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(171, 39))), ENTRY, 171),
  LineInfo(FunDecl("mav_type_octorotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(171, 39))), EXIT, 171),
  LineInfo(FunDecl("mav_type_tricopter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(172, 39))), ENTRY, 172),
  LineInfo(FunDecl("mav_type_tricopter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(172, 39))), EXIT, 172),
  LineInfo(FunDecl("mav_type_flapping_wing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(173, 43))), ENTRY, 173),
  LineInfo(FunDecl("mav_type_flapping_wing_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(173, 43))), EXIT, 173),
  LineInfo(FunDecl("mav_type_kite_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(174, 34))), ENTRY, 174),
  LineInfo(FunDecl("mav_type_kite_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(174, 34))), EXIT, 174),
  LineInfo(FunDecl("mav_type_onboard_controller_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(175, 48))), ENTRY, 175),
  LineInfo(FunDecl("mav_type_onboard_controller_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(175, 48))), EXIT, 175),
  LineInfo(FunDecl("mav_type_vtol_duorotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(176, 43))), ENTRY, 176),
  LineInfo(FunDecl("mav_type_vtol_duorotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(176, 43))), EXIT, 176),
  LineInfo(FunDecl("mav_type_vtol_quadrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(177, 44))), ENTRY, 177),
  LineInfo(FunDecl("mav_type_vtol_quadrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(177, 44))), EXIT, 177),
  LineInfo(FunDecl("mav_type_vtol_tiltrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(178, 44))), ENTRY, 178),
  LineInfo(FunDecl("mav_type_vtol_tiltrotor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(178, 44))), EXIT, 178),
  LineInfo(FunDecl("mav_type_vtol_reserved2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(179, 44))), ENTRY, 179),
  LineInfo(FunDecl("mav_type_vtol_reserved2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(179, 44))), EXIT, 179),
  LineInfo(FunDecl("mav_type_vtol_reserved3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(180, 44))), ENTRY, 180),
  LineInfo(FunDecl("mav_type_vtol_reserved3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(180, 44))), EXIT, 180),
  LineInfo(FunDecl("mav_type_vtol_reserved4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(181, 44))), ENTRY, 181),
  LineInfo(FunDecl("mav_type_vtol_reserved4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(181, 44))), EXIT, 181),
  LineInfo(FunDecl("mav_type_vtol_reserved5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(182, 44))), ENTRY, 182),
  LineInfo(FunDecl("mav_type_vtol_reserved5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(182, 44))), EXIT, 182),
  LineInfo(FunDecl("mav_type_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(183, 36))), ENTRY, 183),
  LineInfo(FunDecl("mav_type_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(183, 36))), EXIT, 183),
  LineInfo(FunDecl("mav_type_adsb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(184, 34))), ENTRY, 184),
  LineInfo(FunDecl("mav_type_adsb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(184, 34))), EXIT, 184),
  LineInfo(FunDecl("firmware_version_type_dev_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(187, 46))), ENTRY, 187),
  LineInfo(FunDecl("firmware_version_type_dev_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(187, 46))), EXIT, 187),
  LineInfo(FunDecl("firmware_version_type_alpha_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(188, 48))), ENTRY, 188),
  LineInfo(FunDecl("firmware_version_type_alpha_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(188, 48))), EXIT, 188),
  LineInfo(FunDecl("firmware_version_type_beta_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(189, 47))), ENTRY, 189),
  LineInfo(FunDecl("firmware_version_type_beta_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(189, 47))), EXIT, 189),
  LineInfo(FunDecl("firmware_version_type_rc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(190, 45))), ENTRY, 190),
  LineInfo(FunDecl("firmware_version_type_rc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(190, 45))), EXIT, 190),
  LineInfo(FunDecl("firmware_version_type_official_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(255), SourceInfo(191, 51))), ENTRY, 191),
  LineInfo(FunDecl("firmware_version_type_official_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(255), SourceInfo(191, 51))), EXIT, 191),
  LineInfo(FunDecl("mav_mode_flag_safety_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(194, 47))), ENTRY, 194),
  LineInfo(FunDecl("mav_mode_flag_safety_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(194, 47))), EXIT, 194),
  LineInfo(FunDecl("mav_mode_flag_manual_input_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(195, 55))), ENTRY, 195),
  LineInfo(FunDecl("mav_mode_flag_manual_input_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(195, 55))), EXIT, 195),
  LineInfo(FunDecl("mav_mode_flag_hil_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(196, 46))), ENTRY, 196),
  LineInfo(FunDecl("mav_mode_flag_hil_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(196, 46))), EXIT, 196),
  LineInfo(FunDecl("mav_mode_flag_stabilize_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(197, 52))), ENTRY, 197),
  LineInfo(FunDecl("mav_mode_flag_stabilize_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(197, 52))), EXIT, 197),
  LineInfo(FunDecl("mav_mode_flag_guided_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(198, 49))), ENTRY, 198),
  LineInfo(FunDecl("mav_mode_flag_guided_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(198, 49))), EXIT, 198),
  LineInfo(FunDecl("mav_mode_flag_auto_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(199, 47))), ENTRY, 199),
  LineInfo(FunDecl("mav_mode_flag_auto_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(199, 47))), EXIT, 199),
  LineInfo(FunDecl("mav_mode_flag_test_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(200, 47))), ENTRY, 200),
  LineInfo(FunDecl("mav_mode_flag_test_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(200, 47))), EXIT, 200),
  LineInfo(FunDecl("mav_mode_flag_custom_mode_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(201, 54))), ENTRY, 201),
  LineInfo(FunDecl("mav_mode_flag_custom_mode_enabled_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(201, 54))), EXIT, 201),
  LineInfo(FunDecl("mav_mode_flag_decode_position_safety_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(204, 57))), ENTRY, 204),
  LineInfo(FunDecl("mav_mode_flag_decode_position_safety_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(204, 57))), EXIT, 204),
  LineInfo(FunDecl("mav_mode_flag_decode_position_manual_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(205, 57))), ENTRY, 205),
  LineInfo(FunDecl("mav_mode_flag_decode_position_manual_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(205, 57))), EXIT, 205),
  LineInfo(FunDecl("mav_mode_flag_decode_position_hil_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(206, 54))), ENTRY, 206),
  LineInfo(FunDecl("mav_mode_flag_decode_position_hil_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(206, 54))), EXIT, 206),
  LineInfo(FunDecl("mav_mode_flag_decode_position_stabilize_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(207, 60))), ENTRY, 207),
  LineInfo(FunDecl("mav_mode_flag_decode_position_stabilize_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(207, 60))), EXIT, 207),
  LineInfo(FunDecl("mav_mode_flag_decode_position_guided_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(208, 57))), ENTRY, 208),
  LineInfo(FunDecl("mav_mode_flag_decode_position_guided_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(208, 57))), EXIT, 208),
  LineInfo(FunDecl("mav_mode_flag_decode_position_auto_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(209, 55))), ENTRY, 209),
  LineInfo(FunDecl("mav_mode_flag_decode_position_auto_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(209, 55))), EXIT, 209),
  LineInfo(FunDecl("mav_mode_flag_decode_position_test_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(210, 55))), ENTRY, 210),
  LineInfo(FunDecl("mav_mode_flag_decode_position_test_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(210, 55))), EXIT, 210),
  LineInfo(FunDecl("mav_mode_flag_decode_position_custom_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(211, 62))), ENTRY, 211),
  LineInfo(FunDecl("mav_mode_flag_decode_position_custom_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(211, 62))), EXIT, 211),
  LineInfo(FunDecl("mav_goto_do_hold_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(214, 37))), ENTRY, 214),
  LineInfo(FunDecl("mav_goto_do_hold_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(214, 37))), EXIT, 214),
  LineInfo(FunDecl("mav_goto_do_continue_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(215, 41))), ENTRY, 215),
  LineInfo(FunDecl("mav_goto_do_continue_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(215, 41))), EXIT, 215),
  LineInfo(FunDecl("mav_goto_hold_at_current_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(216, 54))), ENTRY, 216),
  LineInfo(FunDecl("mav_goto_hold_at_current_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(216, 54))), EXIT, 216),
  LineInfo(FunDecl("mav_goto_hold_at_specified_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(217, 56))), ENTRY, 217),
  LineInfo(FunDecl("mav_goto_hold_at_specified_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(217, 56))), EXIT, 217),
  LineInfo(FunDecl("mav_mode_preflight_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(220, 39))), ENTRY, 220),
  LineInfo(FunDecl("mav_mode_preflight_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(220, 39))), EXIT, 220),
  LineInfo(FunDecl("mav_mode_stabilize_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(80), SourceInfo(221, 48))), ENTRY, 221),
  LineInfo(FunDecl("mav_mode_stabilize_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(80), SourceInfo(221, 48))), EXIT, 221),
  LineInfo(FunDecl("mav_mode_stabilize_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(208), SourceInfo(222, 45))), ENTRY, 222),
  LineInfo(FunDecl("mav_mode_stabilize_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(208), SourceInfo(222, 45))), EXIT, 222),
  LineInfo(FunDecl("mav_mode_manual_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(223, 45))), ENTRY, 223),
  LineInfo(FunDecl("mav_mode_manual_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(223, 45))), EXIT, 223),
  LineInfo(FunDecl("mav_mode_manual_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(224, 42))), ENTRY, 224),
  LineInfo(FunDecl("mav_mode_manual_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(224, 42))), EXIT, 224),
  LineInfo(FunDecl("mav_mode_guided_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(88), SourceInfo(225, 45))), ENTRY, 225),
  LineInfo(FunDecl("mav_mode_guided_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(88), SourceInfo(225, 45))), EXIT, 225),
  LineInfo(FunDecl("mav_mode_guided_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(216), SourceInfo(226, 42))), ENTRY, 226),
  LineInfo(FunDecl("mav_mode_guided_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(216), SourceInfo(226, 42))), EXIT, 226),
  LineInfo(FunDecl("mav_mode_auto_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(227, 43))), ENTRY, 227),
  LineInfo(FunDecl("mav_mode_auto_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(227, 43))), EXIT, 227),
  LineInfo(FunDecl("mav_mode_auto_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(228, 40))), ENTRY, 228),
  LineInfo(FunDecl("mav_mode_auto_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(228, 40))), EXIT, 228),
  LineInfo(FunDecl("mav_mode_test_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(66), SourceInfo(229, 43))), ENTRY, 229),
  LineInfo(FunDecl("mav_mode_test_disarmed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(66), SourceInfo(229, 43))), EXIT, 229),
  LineInfo(FunDecl("mav_mode_test_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(194), SourceInfo(230, 40))), ENTRY, 230),
  LineInfo(FunDecl("mav_mode_test_armed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(194), SourceInfo(230, 40))), EXIT, 230),
  LineInfo(FunDecl("mav_state_uninit_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(233, 37))), ENTRY, 233),
  LineInfo(FunDecl("mav_state_uninit_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(233, 37))), EXIT, 233),
  LineInfo(FunDecl("mav_state_boot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(234, 35))), ENTRY, 234),
  LineInfo(FunDecl("mav_state_boot_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(234, 35))), EXIT, 234),
  LineInfo(FunDecl("mav_state_calibrating_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(235, 42))), ENTRY, 235),
  LineInfo(FunDecl("mav_state_calibrating_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(235, 42))), EXIT, 235),
  LineInfo(FunDecl("mav_state_standby_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(236, 38))), ENTRY, 236),
  LineInfo(FunDecl("mav_state_standby_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(236, 38))), EXIT, 236),
  LineInfo(FunDecl("mav_state_active_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(237, 37))), ENTRY, 237),
  LineInfo(FunDecl("mav_state_active_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(237, 37))), EXIT, 237),
  LineInfo(FunDecl("mav_state_critical_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(238, 39))), ENTRY, 238),
  LineInfo(FunDecl("mav_state_critical_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(238, 39))), EXIT, 238),
  LineInfo(FunDecl("mav_state_emergency_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(239, 40))), ENTRY, 239),
  LineInfo(FunDecl("mav_state_emergency_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(239, 40))), EXIT, 239),
  LineInfo(FunDecl("mav_state_poweroff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(240, 39))), ENTRY, 240),
  LineInfo(FunDecl("mav_state_poweroff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(240, 39))), EXIT, 240),
  LineInfo(FunDecl("mav_comp_id_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(243, 36))), ENTRY, 243),
  LineInfo(FunDecl("mav_comp_id_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(243, 36))), EXIT, 243),
  LineInfo(FunDecl("mav_comp_id_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(244, 36))), ENTRY, 244),
  LineInfo(FunDecl("mav_comp_id_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(244, 36))), EXIT, 244),
  LineInfo(FunDecl("mav_comp_id_missionplanner_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(190), SourceInfo(245, 47))), ENTRY, 245),
  LineInfo(FunDecl("mav_comp_id_missionplanner_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(190), SourceInfo(245, 47))), EXIT, 245),
  LineInfo(FunDecl("mav_comp_id_pathplanner_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(195), SourceInfo(246, 44))), ENTRY, 246),
  LineInfo(FunDecl("mav_comp_id_pathplanner_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(195), SourceInfo(246, 44))), EXIT, 246),
  LineInfo(FunDecl("mav_comp_id_mapper_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(180), SourceInfo(247, 39))), ENTRY, 247),
  LineInfo(FunDecl("mav_comp_id_mapper_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(180), SourceInfo(247, 39))), EXIT, 247),
  LineInfo(FunDecl("mav_comp_id_camera_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(100), SourceInfo(248, 39))), ENTRY, 248),
  LineInfo(FunDecl("mav_comp_id_camera_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(100), SourceInfo(248, 39))), EXIT, 248),
  LineInfo(FunDecl("mav_comp_id_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(200), SourceInfo(249, 36))), ENTRY, 249),
  LineInfo(FunDecl("mav_comp_id_imu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(200), SourceInfo(249, 36))), EXIT, 249),
  LineInfo(FunDecl("mav_comp_id_imu_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(201), SourceInfo(250, 38))), ENTRY, 250),
  LineInfo(FunDecl("mav_comp_id_imu_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(201), SourceInfo(250, 38))), EXIT, 250),
  LineInfo(FunDecl("mav_comp_id_imu_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(202), SourceInfo(251, 38))), ENTRY, 251),
  LineInfo(FunDecl("mav_comp_id_imu_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(202), SourceInfo(251, 38))), EXIT, 251),
  LineInfo(FunDecl("mav_comp_id_udp_bridge_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(240), SourceInfo(252, 43))), ENTRY, 252),
  LineInfo(FunDecl("mav_comp_id_udp_bridge_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(240), SourceInfo(252, 43))), EXIT, 252),
  LineInfo(FunDecl("mav_comp_id_uart_bridge_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(253, 44))), ENTRY, 253),
  LineInfo(FunDecl("mav_comp_id_uart_bridge_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(253, 44))), EXIT, 253),
  LineInfo(FunDecl("mav_comp_id_system_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(250), SourceInfo(254, 47))), ENTRY, 254),
  LineInfo(FunDecl("mav_comp_id_system_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(250), SourceInfo(254, 47))), EXIT, 254),
  LineInfo(FunDecl("mav_comp_id_servo1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(140), SourceInfo(255, 39))), ENTRY, 255),
  LineInfo(FunDecl("mav_comp_id_servo1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(140), SourceInfo(255, 39))), EXIT, 255),
  LineInfo(FunDecl("mav_comp_id_servo2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(141), SourceInfo(256, 39))), ENTRY, 256),
  LineInfo(FunDecl("mav_comp_id_servo2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(141), SourceInfo(256, 39))), EXIT, 256),
  LineInfo(FunDecl("mav_comp_id_servo3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(142), SourceInfo(257, 39))), ENTRY, 257),
  LineInfo(FunDecl("mav_comp_id_servo3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(142), SourceInfo(257, 39))), EXIT, 257),
  LineInfo(FunDecl("mav_comp_id_servo4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(143), SourceInfo(258, 39))), ENTRY, 258),
  LineInfo(FunDecl("mav_comp_id_servo4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(143), SourceInfo(258, 39))), EXIT, 258),
  LineInfo(FunDecl("mav_comp_id_servo5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(144), SourceInfo(259, 39))), ENTRY, 259),
  LineInfo(FunDecl("mav_comp_id_servo5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(144), SourceInfo(259, 39))), EXIT, 259),
  LineInfo(FunDecl("mav_comp_id_servo6_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(145), SourceInfo(260, 39))), ENTRY, 260),
  LineInfo(FunDecl("mav_comp_id_servo6_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(145), SourceInfo(260, 39))), EXIT, 260),
  LineInfo(FunDecl("mav_comp_id_servo7_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(146), SourceInfo(261, 39))), ENTRY, 261),
  LineInfo(FunDecl("mav_comp_id_servo7_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(146), SourceInfo(261, 39))), EXIT, 261),
  LineInfo(FunDecl("mav_comp_id_servo8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(147), SourceInfo(262, 39))), ENTRY, 262),
  LineInfo(FunDecl("mav_comp_id_servo8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(147), SourceInfo(262, 39))), EXIT, 262),
  LineInfo(FunDecl("mav_comp_id_servo9_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(148), SourceInfo(263, 39))), ENTRY, 263),
  LineInfo(FunDecl("mav_comp_id_servo9_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(148), SourceInfo(263, 39))), EXIT, 263),
  LineInfo(FunDecl("mav_comp_id_servo10_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(149), SourceInfo(264, 40))), ENTRY, 264),
  LineInfo(FunDecl("mav_comp_id_servo10_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(149), SourceInfo(264, 40))), EXIT, 264),
  LineInfo(FunDecl("mav_comp_id_servo11_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(150), SourceInfo(265, 40))), ENTRY, 265),
  LineInfo(FunDecl("mav_comp_id_servo11_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(150), SourceInfo(265, 40))), EXIT, 265),
  LineInfo(FunDecl("mav_comp_id_servo12_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(151), SourceInfo(266, 40))), ENTRY, 266),
  LineInfo(FunDecl("mav_comp_id_servo12_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(151), SourceInfo(266, 40))), EXIT, 266),
  LineInfo(FunDecl("mav_comp_id_servo13_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(152), SourceInfo(267, 40))), ENTRY, 267),
  LineInfo(FunDecl("mav_comp_id_servo13_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(152), SourceInfo(267, 40))), EXIT, 267),
  LineInfo(FunDecl("mav_comp_id_servo14_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(153), SourceInfo(268, 40))), ENTRY, 268),
  LineInfo(FunDecl("mav_comp_id_servo14_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(153), SourceInfo(268, 40))), EXIT, 268),
  LineInfo(FunDecl("mav_comp_id_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(154), SourceInfo(269, 39))), ENTRY, 269),
  LineInfo(FunDecl("mav_comp_id_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(154), SourceInfo(269, 39))), EXIT, 269),
  LineInfo(FunDecl("mav_comp_id_log_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(155), SourceInfo(270, 36))), ENTRY, 270),
  LineInfo(FunDecl("mav_comp_id_log_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(155), SourceInfo(270, 36))), EXIT, 270),
  LineInfo(FunDecl("mav_comp_id_adsb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(156), SourceInfo(271, 37))), ENTRY, 271),
  LineInfo(FunDecl("mav_comp_id_adsb_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(156), SourceInfo(271, 37))), EXIT, 271),
  LineInfo(FunDecl("mav_comp_id_osd_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(157), SourceInfo(272, 36))), ENTRY, 272),
  LineInfo(FunDecl("mav_comp_id_osd_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(157), SourceInfo(272, 36))), EXIT, 272),
  LineInfo(FunDecl("mav_comp_id_peripheral_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(158), SourceInfo(273, 43))), ENTRY, 273),
  LineInfo(FunDecl("mav_comp_id_peripheral_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(158), SourceInfo(273, 43))), EXIT, 273),
  LineInfo(FunDecl("mav_comp_id_qx1_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(159), SourceInfo(274, 43))), ENTRY, 274),
  LineInfo(FunDecl("mav_comp_id_qx1_gimbal_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(159), SourceInfo(274, 43))), EXIT, 274),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_gyro_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(277, 50))), ENTRY, 277),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_gyro_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(277, 50))), EXIT, 277),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_accel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(278, 51))), ENTRY, 278),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_accel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(278, 51))), EXIT, 278),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_mag_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(279, 49))), ENTRY, 279),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_mag_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(279, 49))), EXIT, 279),
  LineInfo(FunDecl("mav_sys_status_sensor_absolute_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(280, 60))), ENTRY, 280),
  LineInfo(FunDecl("mav_sys_status_sensor_absolute_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(280, 60))), EXIT, 280),
  LineInfo(FunDecl("mav_sys_status_sensor_differential_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(281, 64))), ENTRY, 281),
  LineInfo(FunDecl("mav_sys_status_sensor_differential_pressure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(281, 64))), EXIT, 281),
  LineInfo(FunDecl("mav_sys_status_sensor_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(282, 46))), ENTRY, 282),
  LineInfo(FunDecl("mav_sys_status_sensor_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(282, 46))), EXIT, 282),
  LineInfo(FunDecl("mav_sys_status_sensor_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(283, 55))), ENTRY, 283),
  LineInfo(FunDecl("mav_sys_status_sensor_optical_flow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(283, 55))), EXIT, 283),
  LineInfo(FunDecl("mav_sys_status_sensor_vision_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(284, 58))), ENTRY, 284),
  LineInfo(FunDecl("mav_sys_status_sensor_vision_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(284, 58))), EXIT, 284),
  LineInfo(FunDecl("mav_sys_status_sensor_laser_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(285, 57))), ENTRY, 285),
  LineInfo(FunDecl("mav_sys_status_sensor_laser_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(285, 57))), EXIT, 285),
  LineInfo(FunDecl("mav_sys_status_sensor_external_ground_truth_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(286, 64))), ENTRY, 286),
  LineInfo(FunDecl("mav_sys_status_sensor_external_ground_truth_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(286, 64))), EXIT, 286),
  LineInfo(FunDecl("mav_sys_status_sensor_angular_rate_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(287, 63))), ENTRY, 287),
  LineInfo(FunDecl("mav_sys_status_sensor_angular_rate_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(287, 63))), EXIT, 287),
  LineInfo(FunDecl("mav_sys_status_sensor_attitude_stabilization_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2048), SourceInfo(288, 65))), ENTRY, 288),
  LineInfo(FunDecl("mav_sys_status_sensor_attitude_stabilization_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2048), SourceInfo(288, 65))), EXIT, 288),
  LineInfo(FunDecl("mav_sys_status_sensor_yaw_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4096), SourceInfo(289, 55))), ENTRY, 289),
  LineInfo(FunDecl("mav_sys_status_sensor_yaw_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4096), SourceInfo(289, 55))), EXIT, 289),
  LineInfo(FunDecl("mav_sys_status_sensor_z_altitude_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8192), SourceInfo(290, 61))), ENTRY, 290),
  LineInfo(FunDecl("mav_sys_status_sensor_z_altitude_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8192), SourceInfo(290, 61))), EXIT, 290),
  LineInfo(FunDecl("mav_sys_status_sensor_xy_position_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16384), SourceInfo(291, 62))), ENTRY, 291),
  LineInfo(FunDecl("mav_sys_status_sensor_xy_position_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16384), SourceInfo(291, 62))), EXIT, 291),
  LineInfo(FunDecl("mav_sys_status_sensor_motor_outputs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32768), SourceInfo(292, 56))), ENTRY, 292),
  LineInfo(FunDecl("mav_sys_status_sensor_motor_outputs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32768), SourceInfo(292, 56))), EXIT, 292),
  LineInfo(FunDecl("mav_sys_status_sensor_rc_receiver_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(65536), SourceInfo(293, 54))), ENTRY, 293),
  LineInfo(FunDecl("mav_sys_status_sensor_rc_receiver_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(65536), SourceInfo(293, 54))), EXIT, 293),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_gyro2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(131072), SourceInfo(294, 51))), ENTRY, 294),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_gyro2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(131072), SourceInfo(294, 51))), EXIT, 294),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_accel2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(262144), SourceInfo(295, 52))), ENTRY, 295),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_accel2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(262144), SourceInfo(295, 52))), EXIT, 295),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_mag2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(524288), SourceInfo(296, 50))), ENTRY, 296),
  LineInfo(FunDecl("mav_sys_status_sensor_3d_mag2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(524288), SourceInfo(296, 50))), EXIT, 296),
  LineInfo(FunDecl("mav_sys_status_geofence_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1048576), SourceInfo(297, 44))), ENTRY, 297),
  LineInfo(FunDecl("mav_sys_status_geofence_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1048576), SourceInfo(297, 44))), EXIT, 297),
  LineInfo(FunDecl("mav_sys_status_ahrs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2097152), SourceInfo(298, 40))), ENTRY, 298),
  LineInfo(FunDecl("mav_sys_status_ahrs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2097152), SourceInfo(298, 40))), EXIT, 298),
  LineInfo(FunDecl("mav_sys_status_terrain_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4194304), SourceInfo(299, 43))), ENTRY, 299),
  LineInfo(FunDecl("mav_sys_status_terrain_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4194304), SourceInfo(299, 43))), EXIT, 299),
  LineInfo(FunDecl("mav_sys_status_reverse_motor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8388608), SourceInfo(300, 49))), ENTRY, 300),
  LineInfo(FunDecl("mav_sys_status_reverse_motor_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8388608), SourceInfo(300, 49))), EXIT, 300),
  LineInfo(FunDecl("mav_frame_global_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(303, 37))), ENTRY, 303),
  LineInfo(FunDecl("mav_frame_global_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(303, 37))), EXIT, 303),
  LineInfo(FunDecl("mav_frame_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(304, 40))), ENTRY, 304),
  LineInfo(FunDecl("mav_frame_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(304, 40))), EXIT, 304),
  LineInfo(FunDecl("mav_frame_mission_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(305, 38))), ENTRY, 305),
  LineInfo(FunDecl("mav_frame_mission_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(305, 38))), EXIT, 305),
  LineInfo(FunDecl("mav_frame_global_relative_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(306, 50))), ENTRY, 306),
  LineInfo(FunDecl("mav_frame_global_relative_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(306, 50))), EXIT, 306),
  LineInfo(FunDecl("mav_frame_local_enu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(307, 40))), ENTRY, 307),
  LineInfo(FunDecl("mav_frame_local_enu_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(307, 40))), EXIT, 307),
  LineInfo(FunDecl("mav_frame_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(308, 41))), ENTRY, 308),
  LineInfo(FunDecl("mav_frame_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(308, 41))), EXIT, 308),
  LineInfo(FunDecl("mav_frame_global_relative_alt_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(309, 54))), ENTRY, 309),
  LineInfo(FunDecl("mav_frame_global_relative_alt_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(309, 54))), EXIT, 309),
  LineInfo(FunDecl("mav_frame_local_offset_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(310, 47))), ENTRY, 310),
  LineInfo(FunDecl("mav_frame_local_offset_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(310, 47))), EXIT, 310),
  LineInfo(FunDecl("mav_frame_body_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(311, 39))), ENTRY, 311),
  LineInfo(FunDecl("mav_frame_body_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(311, 39))), EXIT, 311),
  LineInfo(FunDecl("mav_frame_body_offset_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(312, 46))), ENTRY, 312),
  LineInfo(FunDecl("mav_frame_body_offset_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(312, 46))), EXIT, 312),
  LineInfo(FunDecl("mav_frame_global_terrain_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(313, 49))), ENTRY, 313),
  LineInfo(FunDecl("mav_frame_global_terrain_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(313, 49))), EXIT, 313),
  LineInfo(FunDecl("mav_frame_global_terrain_alt_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(314, 53))), ENTRY, 314),
  LineInfo(FunDecl("mav_frame_global_terrain_alt_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(314, 53))), EXIT, 314),
  LineInfo(FunDecl("mavlink_data_stream_img_jpeg_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(317, 49))), ENTRY, 317),
  LineInfo(FunDecl("mavlink_data_stream_img_jpeg_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(317, 49))), EXIT, 317),
  LineInfo(FunDecl("mavlink_data_stream_img_bmp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(318, 48))), ENTRY, 318),
  LineInfo(FunDecl("mavlink_data_stream_img_bmp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(318, 48))), EXIT, 318),
  LineInfo(FunDecl("mavlink_data_stream_img_raw8u_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(319, 50))), ENTRY, 319),
  LineInfo(FunDecl("mavlink_data_stream_img_raw8u_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(319, 50))), EXIT, 319),
  LineInfo(FunDecl("mavlink_data_stream_img_raw32u_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(320, 51))), ENTRY, 320),
  LineInfo(FunDecl("mavlink_data_stream_img_raw32u_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(320, 51))), EXIT, 320),
  LineInfo(FunDecl("mavlink_data_stream_img_pgm_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(321, 48))), ENTRY, 321),
  LineInfo(FunDecl("mavlink_data_stream_img_pgm_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(321, 48))), EXIT, 321),
  LineInfo(FunDecl("mavlink_data_stream_img_png_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(322, 48))), ENTRY, 322),
  LineInfo(FunDecl("mavlink_data_stream_img_png_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(322, 48))), EXIT, 322),
  LineInfo(FunDecl("fence_action_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(325, 38))), ENTRY, 325),
  LineInfo(FunDecl("fence_action_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(325, 38))), EXIT, 325),
  LineInfo(FunDecl("fence_action_guided_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(326, 40))), ENTRY, 326),
  LineInfo(FunDecl("fence_action_guided_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(326, 40))), EXIT, 326),
  LineInfo(FunDecl("fence_action_report_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(327, 40))), ENTRY, 327),
  LineInfo(FunDecl("fence_action_report_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(327, 40))), EXIT, 327),
  LineInfo(FunDecl("fence_action_guided_thr_pass_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(328, 49))), ENTRY, 328),
  LineInfo(FunDecl("fence_action_guided_thr_pass_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(328, 49))), EXIT, 328),
  LineInfo(FunDecl("fence_action_rtl_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(329, 37))), ENTRY, 329),
  LineInfo(FunDecl("fence_action_rtl_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(329, 37))), EXIT, 329),
  LineInfo(FunDecl("fence_breach_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(332, 38))), ENTRY, 332),
  LineInfo(FunDecl("fence_breach_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(332, 38))), EXIT, 332),
  LineInfo(FunDecl("fence_breach_minalt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(333, 40))), ENTRY, 333),
  LineInfo(FunDecl("fence_breach_minalt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(333, 40))), EXIT, 333),
  LineInfo(FunDecl("fence_breach_maxalt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(334, 40))), ENTRY, 334),
  LineInfo(FunDecl("fence_breach_maxalt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(334, 40))), EXIT, 334),
  LineInfo(FunDecl("fence_breach_boundary_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(335, 42))), ENTRY, 335),
  LineInfo(FunDecl("fence_breach_boundary_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(335, 42))), EXIT, 335),
  LineInfo(FunDecl("mav_mount_mode_retract_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(338, 43))), ENTRY, 338),
  LineInfo(FunDecl("mav_mount_mode_retract_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(338, 43))), EXIT, 338),
  LineInfo(FunDecl("mav_mount_mode_neutral_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(339, 43))), ENTRY, 339),
  LineInfo(FunDecl("mav_mount_mode_neutral_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(339, 43))), EXIT, 339),
  LineInfo(FunDecl("mav_mount_mode_mavlink_targeting_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(340, 53))), ENTRY, 340),
  LineInfo(FunDecl("mav_mount_mode_mavlink_targeting_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(340, 53))), EXIT, 340),
  LineInfo(FunDecl("mav_mount_mode_rc_targeting_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(341, 48))), ENTRY, 341),
  LineInfo(FunDecl("mav_mount_mode_rc_targeting_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(341, 48))), EXIT, 341),
  LineInfo(FunDecl("mav_mount_mode_gps_point_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(342, 45))), ENTRY, 342),
  LineInfo(FunDecl("mav_mount_mode_gps_point_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(342, 45))), EXIT, 342),
  LineInfo(FunDecl("mav_cmd_nav_waypoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(345, 41))), ENTRY, 345),
  LineInfo(FunDecl("mav_cmd_nav_waypoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(345, 41))), EXIT, 345),
  LineInfo(FunDecl("mav_cmd_nav_loiter_unlim_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(346, 45))), ENTRY, 346),
  LineInfo(FunDecl("mav_cmd_nav_loiter_unlim_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(346, 45))), EXIT, 346),
  LineInfo(FunDecl("mav_cmd_nav_loiter_turns_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(347, 45))), ENTRY, 347),
  LineInfo(FunDecl("mav_cmd_nav_loiter_turns_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(347, 45))), EXIT, 347),
  LineInfo(FunDecl("mav_cmd_nav_loiter_time_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(348, 44))), ENTRY, 348),
  LineInfo(FunDecl("mav_cmd_nav_loiter_time_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(348, 44))), EXIT, 348),
  LineInfo(FunDecl("mav_cmd_nav_return_to_launch_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(349, 49))), ENTRY, 349),
  LineInfo(FunDecl("mav_cmd_nav_return_to_launch_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(349, 49))), EXIT, 349),
  LineInfo(FunDecl("mav_cmd_nav_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(350, 37))), ENTRY, 350),
  LineInfo(FunDecl("mav_cmd_nav_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(350, 37))), EXIT, 350),
  LineInfo(FunDecl("mav_cmd_nav_takeoff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(351, 40))), ENTRY, 351),
  LineInfo(FunDecl("mav_cmd_nav_takeoff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(351, 40))), EXIT, 351),
  LineInfo(FunDecl("mav_cmd_nav_land_local_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(352, 43))), ENTRY, 352),
  LineInfo(FunDecl("mav_cmd_nav_land_local_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(352, 43))), EXIT, 352),
  LineInfo(FunDecl("mav_cmd_nav_takeoff_local_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(353, 46))), ENTRY, 353),
  LineInfo(FunDecl("mav_cmd_nav_takeoff_local_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(353, 46))), EXIT, 353),
  LineInfo(FunDecl("mav_cmd_nav_follow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(354, 39))), ENTRY, 354),
  LineInfo(FunDecl("mav_cmd_nav_follow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(354, 39))), EXIT, 354),
  LineInfo(FunDecl("mav_cmd_nav_continue_and_change_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(355, 56))), ENTRY, 355),
  LineInfo(FunDecl("mav_cmd_nav_continue_and_change_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(355, 56))), EXIT, 355),
  LineInfo(FunDecl("mav_cmd_nav_loiter_to_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(356, 46))), ENTRY, 356),
  LineInfo(FunDecl("mav_cmd_nav_loiter_to_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(356, 46))), EXIT, 356),
  LineInfo(FunDecl("mav_cmd_do_follow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(357, 38))), ENTRY, 357),
  LineInfo(FunDecl("mav_cmd_do_follow_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(357, 38))), EXIT, 357),
  LineInfo(FunDecl("mav_cmd_do_follow_reposition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(358, 49))), ENTRY, 358),
  LineInfo(FunDecl("mav_cmd_do_follow_reposition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(358, 49))), EXIT, 358),
  LineInfo(FunDecl("mav_cmd_nav_roi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(80), SourceInfo(359, 36))), ENTRY, 359),
  LineInfo(FunDecl("mav_cmd_nav_roi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(80), SourceInfo(359, 36))), EXIT, 359),
  LineInfo(FunDecl("mav_cmd_nav_pathplanning_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(81), SourceInfo(360, 45))), ENTRY, 360),
  LineInfo(FunDecl("mav_cmd_nav_pathplanning_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(81), SourceInfo(360, 45))), EXIT, 360),
  LineInfo(FunDecl("mav_cmd_nav_spline_waypoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(82), SourceInfo(361, 48))), ENTRY, 361),
  LineInfo(FunDecl("mav_cmd_nav_spline_waypoint_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(82), SourceInfo(361, 48))), EXIT, 361),
  LineInfo(FunDecl("mav_cmd_nav_vtol_takeoff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(84), SourceInfo(362, 45))), ENTRY, 362),
  LineInfo(FunDecl("mav_cmd_nav_vtol_takeoff_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(84), SourceInfo(362, 45))), EXIT, 362),
  LineInfo(FunDecl("mav_cmd_nav_vtol_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(85), SourceInfo(363, 42))), ENTRY, 363),
  LineInfo(FunDecl("mav_cmd_nav_vtol_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(85), SourceInfo(363, 42))), EXIT, 363),
  LineInfo(FunDecl("mav_cmd_nav_guided_enable_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(364, 46))), ENTRY, 364),
  LineInfo(FunDecl("mav_cmd_nav_guided_enable_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(92), SourceInfo(364, 46))), EXIT, 364),
  LineInfo(FunDecl("mav_cmd_nav_delay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(93), SourceInfo(365, 38))), ENTRY, 365),
  LineInfo(FunDecl("mav_cmd_nav_delay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(93), SourceInfo(365, 38))), EXIT, 365),
  LineInfo(FunDecl("mav_cmd_nav_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(95), SourceInfo(366, 37))), ENTRY, 366),
  LineInfo(FunDecl("mav_cmd_nav_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(95), SourceInfo(366, 37))), EXIT, 366),
  LineInfo(FunDecl("mav_cmd_condition_delay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(112), SourceInfo(367, 44))), ENTRY, 367),
  LineInfo(FunDecl("mav_cmd_condition_delay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(112), SourceInfo(367, 44))), EXIT, 367),
  LineInfo(FunDecl("mav_cmd_condition_change_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(113), SourceInfo(368, 49))), ENTRY, 368),
  LineInfo(FunDecl("mav_cmd_condition_change_alt_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(113), SourceInfo(368, 49))), EXIT, 368),
  LineInfo(FunDecl("mav_cmd_condition_distance_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(114), SourceInfo(369, 47))), ENTRY, 369),
  LineInfo(FunDecl("mav_cmd_condition_distance_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(114), SourceInfo(369, 47))), EXIT, 369),
  LineInfo(FunDecl("mav_cmd_condition_yaw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(115), SourceInfo(370, 42))), ENTRY, 370),
  LineInfo(FunDecl("mav_cmd_condition_yaw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(115), SourceInfo(370, 42))), EXIT, 370),
  LineInfo(FunDecl("mav_cmd_condition_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(159), SourceInfo(371, 43))), ENTRY, 371),
  LineInfo(FunDecl("mav_cmd_condition_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(159), SourceInfo(371, 43))), EXIT, 371),
  LineInfo(FunDecl("mav_cmd_do_set_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(176), SourceInfo(372, 40))), ENTRY, 372),
  LineInfo(FunDecl("mav_cmd_do_set_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(176), SourceInfo(372, 40))), EXIT, 372),
  LineInfo(FunDecl("mav_cmd_do_jump_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(177), SourceInfo(373, 36))), ENTRY, 373),
  LineInfo(FunDecl("mav_cmd_do_jump_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(177), SourceInfo(373, 36))), EXIT, 373),
  LineInfo(FunDecl("mav_cmd_do_change_speed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(178), SourceInfo(374, 44))), ENTRY, 374),
  LineInfo(FunDecl("mav_cmd_do_change_speed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(178), SourceInfo(374, 44))), EXIT, 374),
  LineInfo(FunDecl("mav_cmd_do_set_home_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(179), SourceInfo(375, 40))), ENTRY, 375),
  LineInfo(FunDecl("mav_cmd_do_set_home_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(179), SourceInfo(375, 40))), EXIT, 375),
  LineInfo(FunDecl("mav_cmd_do_set_parameter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(180), SourceInfo(376, 45))), ENTRY, 376),
  LineInfo(FunDecl("mav_cmd_do_set_parameter_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(180), SourceInfo(376, 45))), EXIT, 376),
  LineInfo(FunDecl("mav_cmd_do_set_relay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(181), SourceInfo(377, 41))), ENTRY, 377),
  LineInfo(FunDecl("mav_cmd_do_set_relay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(181), SourceInfo(377, 41))), EXIT, 377),
  LineInfo(FunDecl("mav_cmd_do_repeat_relay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(182), SourceInfo(378, 44))), ENTRY, 378),
  LineInfo(FunDecl("mav_cmd_do_repeat_relay_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(182), SourceInfo(378, 44))), EXIT, 378),
  LineInfo(FunDecl("mav_cmd_do_set_servo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(183), SourceInfo(379, 41))), ENTRY, 379),
  LineInfo(FunDecl("mav_cmd_do_set_servo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(183), SourceInfo(379, 41))), EXIT, 379),
  LineInfo(FunDecl("mav_cmd_do_repeat_servo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(184), SourceInfo(380, 44))), ENTRY, 380),
  LineInfo(FunDecl("mav_cmd_do_repeat_servo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(184), SourceInfo(380, 44))), EXIT, 380),
  LineInfo(FunDecl("mav_cmd_do_flighttermination_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(185), SourceInfo(381, 49))), ENTRY, 381),
  LineInfo(FunDecl("mav_cmd_do_flighttermination_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(185), SourceInfo(381, 49))), EXIT, 381),
  LineInfo(FunDecl("mav_cmd_do_land_start_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(189), SourceInfo(382, 42))), ENTRY, 382),
  LineInfo(FunDecl("mav_cmd_do_land_start_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(189), SourceInfo(382, 42))), EXIT, 382),
  LineInfo(FunDecl("mav_cmd_do_rally_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(190), SourceInfo(383, 42))), ENTRY, 383),
  LineInfo(FunDecl("mav_cmd_do_rally_land_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(190), SourceInfo(383, 42))), EXIT, 383),
  LineInfo(FunDecl("mav_cmd_do_go_around_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(191), SourceInfo(384, 41))), ENTRY, 384),
  LineInfo(FunDecl("mav_cmd_do_go_around_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(191), SourceInfo(384, 41))), EXIT, 384),
  LineInfo(FunDecl("mav_cmd_do_reposition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(385, 42))), ENTRY, 385),
  LineInfo(FunDecl("mav_cmd_do_reposition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(192), SourceInfo(385, 42))), EXIT, 385),
  LineInfo(FunDecl("mav_cmd_do_pause_continue_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(193), SourceInfo(386, 46))), ENTRY, 386),
  LineInfo(FunDecl("mav_cmd_do_pause_continue_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(193), SourceInfo(386, 46))), EXIT, 386),
  LineInfo(FunDecl("mav_cmd_do_control_video_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(200), SourceInfo(387, 45))), ENTRY, 387),
  LineInfo(FunDecl("mav_cmd_do_control_video_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(200), SourceInfo(387, 45))), EXIT, 387),
  LineInfo(FunDecl("mav_cmd_do_set_roi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(201), SourceInfo(388, 39))), ENTRY, 388),
  LineInfo(FunDecl("mav_cmd_do_set_roi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(201), SourceInfo(388, 39))), EXIT, 388),
  LineInfo(FunDecl("mav_cmd_do_digicam_configure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(202), SourceInfo(389, 49))), ENTRY, 389),
  LineInfo(FunDecl("mav_cmd_do_digicam_configure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(202), SourceInfo(389, 49))), EXIT, 389),
  LineInfo(FunDecl("mav_cmd_do_digicam_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(203), SourceInfo(390, 47))), ENTRY, 390),
  LineInfo(FunDecl("mav_cmd_do_digicam_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(203), SourceInfo(390, 47))), EXIT, 390),
  LineInfo(FunDecl("mav_cmd_do_mount_configure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(204), SourceInfo(391, 47))), ENTRY, 391),
  LineInfo(FunDecl("mav_cmd_do_mount_configure_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(204), SourceInfo(391, 47))), EXIT, 391),
  LineInfo(FunDecl("mav_cmd_do_mount_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(205), SourceInfo(392, 45))), ENTRY, 392),
  LineInfo(FunDecl("mav_cmd_do_mount_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(205), SourceInfo(392, 45))), EXIT, 392),
  LineInfo(FunDecl("mav_cmd_do_set_cam_trigg_dist_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(206), SourceInfo(393, 50))), ENTRY, 393),
  LineInfo(FunDecl("mav_cmd_do_set_cam_trigg_dist_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(206), SourceInfo(393, 50))), EXIT, 393),
  LineInfo(FunDecl("mav_cmd_do_fence_enable_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(207), SourceInfo(394, 44))), ENTRY, 394),
  LineInfo(FunDecl("mav_cmd_do_fence_enable_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(207), SourceInfo(394, 44))), EXIT, 394),
  LineInfo(FunDecl("mav_cmd_do_parachute_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(208), SourceInfo(395, 41))), ENTRY, 395),
  LineInfo(FunDecl("mav_cmd_do_parachute_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(208), SourceInfo(395, 41))), EXIT, 395),
  LineInfo(FunDecl("mav_cmd_do_inverted_flight_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(210), SourceInfo(396, 47))), ENTRY, 396),
  LineInfo(FunDecl("mav_cmd_do_inverted_flight_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(210), SourceInfo(396, 47))), EXIT, 396),
  LineInfo(FunDecl("mav_cmd_do_mount_control_quat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(397, 50))), ENTRY, 397),
  LineInfo(FunDecl("mav_cmd_do_mount_control_quat_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(220), SourceInfo(397, 50))), EXIT, 397),
  LineInfo(FunDecl("mav_cmd_do_guided_master_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(221), SourceInfo(398, 45))), ENTRY, 398),
  LineInfo(FunDecl("mav_cmd_do_guided_master_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(221), SourceInfo(398, 45))), EXIT, 398),
  LineInfo(FunDecl("mav_cmd_do_guided_limits_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(222), SourceInfo(399, 45))), ENTRY, 399),
  LineInfo(FunDecl("mav_cmd_do_guided_limits_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(222), SourceInfo(399, 45))), EXIT, 399),
  LineInfo(FunDecl("mav_cmd_do_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(240), SourceInfo(400, 36))), ENTRY, 400),
  LineInfo(FunDecl("mav_cmd_do_last_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(240), SourceInfo(400, 36))), EXIT, 400),
  LineInfo(FunDecl("mav_cmd_preflight_calibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(401, 50))), ENTRY, 401),
  LineInfo(FunDecl("mav_cmd_preflight_calibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(241), SourceInfo(401, 50))), EXIT, 401),
  LineInfo(FunDecl("mav_cmd_preflight_set_sensor_offsets_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(242), SourceInfo(402, 57))), ENTRY, 402),
  LineInfo(FunDecl("mav_cmd_preflight_set_sensor_offsets_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(242), SourceInfo(402, 57))), EXIT, 402),
  LineInfo(FunDecl("mav_cmd_preflight_uavcan_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(243), SourceInfo(403, 45))), ENTRY, 403),
  LineInfo(FunDecl("mav_cmd_preflight_uavcan_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(243), SourceInfo(403, 45))), EXIT, 403),
  LineInfo(FunDecl("mav_cmd_preflight_storage_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(245), SourceInfo(404, 46))), ENTRY, 404),
  LineInfo(FunDecl("mav_cmd_preflight_storage_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(245), SourceInfo(404, 46))), EXIT, 404),
  LineInfo(FunDecl("mav_cmd_preflight_reboot_shutdown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(246), SourceInfo(405, 54))), ENTRY, 405),
  LineInfo(FunDecl("mav_cmd_preflight_reboot_shutdown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(246), SourceInfo(405, 54))), EXIT, 405),
  LineInfo(FunDecl("mav_cmd_override_goto_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(252), SourceInfo(406, 42))), ENTRY, 406),
  LineInfo(FunDecl("mav_cmd_override_goto_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(252), SourceInfo(406, 42))), EXIT, 406),
  LineInfo(FunDecl("mav_cmd_mission_start_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(300), SourceInfo(407, 42))), ENTRY, 407),
  LineInfo(FunDecl("mav_cmd_mission_start_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(300), SourceInfo(407, 42))), EXIT, 407),
  LineInfo(FunDecl("mav_cmd_component_arm_disarm_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(400), SourceInfo(408, 49))), ENTRY, 408),
  LineInfo(FunDecl("mav_cmd_component_arm_disarm_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(400), SourceInfo(408, 49))), EXIT, 408),
  LineInfo(FunDecl("mav_cmd_get_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(410), SourceInfo(409, 46))), ENTRY, 409),
  LineInfo(FunDecl("mav_cmd_get_home_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(410), SourceInfo(409, 46))), EXIT, 409),
  LineInfo(FunDecl("mav_cmd_start_rx_pair_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(500), SourceInfo(410, 42))), ENTRY, 410),
  LineInfo(FunDecl("mav_cmd_start_rx_pair_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(500), SourceInfo(410, 42))), EXIT, 410),
  LineInfo(FunDecl("mav_cmd_get_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(510), SourceInfo(411, 49))), ENTRY, 411),
  LineInfo(FunDecl("mav_cmd_get_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(510), SourceInfo(411, 49))), EXIT, 411),
  LineInfo(FunDecl("mav_cmd_set_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(511), SourceInfo(412, 49))), ENTRY, 412),
  LineInfo(FunDecl("mav_cmd_set_message_interval_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(511), SourceInfo(412, 49))), EXIT, 412),
  LineInfo(FunDecl("mav_cmd_request_autopilot_capabilities_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(520), SourceInfo(413, 59))), ENTRY, 413),
  LineInfo(FunDecl("mav_cmd_request_autopilot_capabilities_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(520), SourceInfo(413, 59))), EXIT, 413),
  LineInfo(FunDecl("mav_cmd_image_start_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2000), SourceInfo(414, 48))), ENTRY, 414),
  LineInfo(FunDecl("mav_cmd_image_start_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2000), SourceInfo(414, 48))), EXIT, 414),
  LineInfo(FunDecl("mav_cmd_image_stop_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2001), SourceInfo(415, 47))), ENTRY, 415),
  LineInfo(FunDecl("mav_cmd_image_stop_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2001), SourceInfo(415, 47))), EXIT, 415),
  LineInfo(FunDecl("mav_cmd_do_trigger_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2003), SourceInfo(416, 47))), ENTRY, 416),
  LineInfo(FunDecl("mav_cmd_do_trigger_control_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2003), SourceInfo(416, 47))), EXIT, 416),
  LineInfo(FunDecl("mav_cmd_video_start_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2500), SourceInfo(417, 48))), ENTRY, 417),
  LineInfo(FunDecl("mav_cmd_video_start_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2500), SourceInfo(417, 48))), EXIT, 417),
  LineInfo(FunDecl("mav_cmd_video_stop_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2501), SourceInfo(418, 47))), ENTRY, 418),
  LineInfo(FunDecl("mav_cmd_video_stop_capture_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2501), SourceInfo(418, 47))), EXIT, 418),
  LineInfo(FunDecl("mav_cmd_panorama_create_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2800), SourceInfo(419, 44))), ENTRY, 419),
  LineInfo(FunDecl("mav_cmd_panorama_create_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2800), SourceInfo(419, 44))), EXIT, 419),
  LineInfo(FunDecl("mav_cmd_do_vtol_transition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3000), SourceInfo(420, 47))), ENTRY, 420),
  LineInfo(FunDecl("mav_cmd_do_vtol_transition_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3000), SourceInfo(420, 47))), EXIT, 420),
  LineInfo(FunDecl("mav_cmd_payload_prepare_deploy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30001), SourceInfo(421, 51))), ENTRY, 421),
  LineInfo(FunDecl("mav_cmd_payload_prepare_deploy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30001), SourceInfo(421, 51))), EXIT, 421),
  LineInfo(FunDecl("mav_cmd_payload_control_deploy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30002), SourceInfo(422, 51))), ENTRY, 422),
  LineInfo(FunDecl("mav_cmd_payload_control_deploy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30002), SourceInfo(422, 51))), EXIT, 422),
  LineInfo(FunDecl("mav_cmd_waypoint_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31000), SourceInfo(423, 44))), ENTRY, 423),
  LineInfo(FunDecl("mav_cmd_waypoint_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31000), SourceInfo(423, 44))), EXIT, 423),
  LineInfo(FunDecl("mav_cmd_waypoint_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31001), SourceInfo(424, 44))), ENTRY, 424),
  LineInfo(FunDecl("mav_cmd_waypoint_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31001), SourceInfo(424, 44))), EXIT, 424),
  LineInfo(FunDecl("mav_cmd_waypoint_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31002), SourceInfo(425, 44))), ENTRY, 425),
  LineInfo(FunDecl("mav_cmd_waypoint_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31002), SourceInfo(425, 44))), EXIT, 425),
  LineInfo(FunDecl("mav_cmd_waypoint_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31003), SourceInfo(426, 44))), ENTRY, 426),
  LineInfo(FunDecl("mav_cmd_waypoint_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31003), SourceInfo(426, 44))), EXIT, 426),
  LineInfo(FunDecl("mav_cmd_waypoint_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31004), SourceInfo(427, 44))), ENTRY, 427),
  LineInfo(FunDecl("mav_cmd_waypoint_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31004), SourceInfo(427, 44))), EXIT, 427),
  LineInfo(FunDecl("mav_cmd_spatial_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31005), SourceInfo(428, 43))), ENTRY, 428),
  LineInfo(FunDecl("mav_cmd_spatial_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31005), SourceInfo(428, 43))), EXIT, 428),
  LineInfo(FunDecl("mav_cmd_spatial_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31006), SourceInfo(429, 43))), ENTRY, 429),
  LineInfo(FunDecl("mav_cmd_spatial_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31006), SourceInfo(429, 43))), EXIT, 429),
  LineInfo(FunDecl("mav_cmd_spatial_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31007), SourceInfo(430, 43))), ENTRY, 430),
  LineInfo(FunDecl("mav_cmd_spatial_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31007), SourceInfo(430, 43))), EXIT, 430),
  LineInfo(FunDecl("mav_cmd_spatial_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31008), SourceInfo(431, 43))), ENTRY, 431),
  LineInfo(FunDecl("mav_cmd_spatial_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31008), SourceInfo(431, 43))), EXIT, 431),
  LineInfo(FunDecl("mav_cmd_spatial_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31009), SourceInfo(432, 43))), ENTRY, 432),
  LineInfo(FunDecl("mav_cmd_spatial_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31009), SourceInfo(432, 43))), EXIT, 432),
  LineInfo(FunDecl("mav_cmd_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31010), SourceInfo(433, 35))), ENTRY, 433),
  LineInfo(FunDecl("mav_cmd_user_1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31010), SourceInfo(433, 35))), EXIT, 433),
  LineInfo(FunDecl("mav_cmd_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31011), SourceInfo(434, 35))), ENTRY, 434),
  LineInfo(FunDecl("mav_cmd_user_2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31011), SourceInfo(434, 35))), EXIT, 434),
  LineInfo(FunDecl("mav_cmd_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31012), SourceInfo(435, 35))), ENTRY, 435),
  LineInfo(FunDecl("mav_cmd_user_3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31012), SourceInfo(435, 35))), EXIT, 435),
  LineInfo(FunDecl("mav_cmd_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31013), SourceInfo(436, 35))), ENTRY, 436),
  LineInfo(FunDecl("mav_cmd_user_4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31013), SourceInfo(436, 35))), EXIT, 436),
  LineInfo(FunDecl("mav_cmd_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31014), SourceInfo(437, 35))), ENTRY, 437),
  LineInfo(FunDecl("mav_cmd_user_5_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31014), SourceInfo(437, 35))), EXIT, 437),
  LineInfo(FunDecl("mav_data_stream_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(440, 40))), ENTRY, 440),
  LineInfo(FunDecl("mav_data_stream_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(440, 40))), EXIT, 440),
  LineInfo(FunDecl("mav_data_stream_raw_sensors_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(441, 48))), ENTRY, 441),
  LineInfo(FunDecl("mav_data_stream_raw_sensors_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(441, 48))), EXIT, 441),
  LineInfo(FunDecl("mav_data_stream_extended_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(442, 52))), ENTRY, 442),
  LineInfo(FunDecl("mav_data_stream_extended_status_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(442, 52))), EXIT, 442),
  LineInfo(FunDecl("mav_data_stream_rc_channels_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(443, 48))), ENTRY, 443),
  LineInfo(FunDecl("mav_data_stream_rc_channels_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(443, 48))), EXIT, 443),
  LineInfo(FunDecl("mav_data_stream_raw_controller_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(444, 51))), ENTRY, 444),
  LineInfo(FunDecl("mav_data_stream_raw_controller_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(444, 51))), EXIT, 444),
  LineInfo(FunDecl("mav_data_stream_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(445, 45))), ENTRY, 445),
  LineInfo(FunDecl("mav_data_stream_position_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(445, 45))), EXIT, 445),
  LineInfo(FunDecl("mav_data_stream_extra1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(446, 43))), ENTRY, 446),
  LineInfo(FunDecl("mav_data_stream_extra1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(446, 43))), EXIT, 446),
  LineInfo(FunDecl("mav_data_stream_extra2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(447, 43))), ENTRY, 447),
  LineInfo(FunDecl("mav_data_stream_extra2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(447, 43))), EXIT, 447),
  LineInfo(FunDecl("mav_data_stream_extra3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(448, 43))), ENTRY, 448),
  LineInfo(FunDecl("mav_data_stream_extra3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(448, 43))), EXIT, 448),
  LineInfo(FunDecl("mav_roi_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(451, 33))), ENTRY, 451),
  LineInfo(FunDecl("mav_roi_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(451, 33))), EXIT, 451),
  LineInfo(FunDecl("mav_roi_wpnext_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(452, 35))), ENTRY, 452),
  LineInfo(FunDecl("mav_roi_wpnext_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(452, 35))), EXIT, 452),
  LineInfo(FunDecl("mav_roi_wpindex_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(453, 36))), ENTRY, 453),
  LineInfo(FunDecl("mav_roi_wpindex_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(453, 36))), EXIT, 453),
  LineInfo(FunDecl("mav_roi_location_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(454, 37))), ENTRY, 454),
  LineInfo(FunDecl("mav_roi_location_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(454, 37))), EXIT, 454),
  LineInfo(FunDecl("mav_roi_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(455, 35))), ENTRY, 455),
  LineInfo(FunDecl("mav_roi_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(455, 35))), EXIT, 455),
  LineInfo(FunDecl("mav_cmd_ack_ok_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(458, 35))), ENTRY, 458),
  LineInfo(FunDecl("mav_cmd_ack_ok_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(458, 35))), EXIT, 458),
  LineInfo(FunDecl("mav_cmd_ack_err_fail_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(459, 41))), ENTRY, 459),
  LineInfo(FunDecl("mav_cmd_ack_err_fail_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(459, 41))), EXIT, 459),
  LineInfo(FunDecl("mav_cmd_ack_err_access_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(460, 50))), ENTRY, 460),
  LineInfo(FunDecl("mav_cmd_ack_err_access_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(460, 50))), EXIT, 460),
  LineInfo(FunDecl("mav_cmd_ack_err_not_supported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(461, 50))), ENTRY, 461),
  LineInfo(FunDecl("mav_cmd_ack_err_not_supported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(461, 50))), EXIT, 461),
  LineInfo(FunDecl("mav_cmd_ack_err_coordinate_frame_not_supported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(462, 67))), ENTRY, 462),
  LineInfo(FunDecl("mav_cmd_ack_err_coordinate_frame_not_supported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(462, 67))), EXIT, 462),
  LineInfo(FunDecl("mav_cmd_ack_err_coordinates_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(463, 61))), ENTRY, 463),
  LineInfo(FunDecl("mav_cmd_ack_err_coordinates_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(463, 61))), EXIT, 463),
  LineInfo(FunDecl("mav_cmd_ack_err_x_lat_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(464, 55))), ENTRY, 464),
  LineInfo(FunDecl("mav_cmd_ack_err_x_lat_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(464, 55))), EXIT, 464),
  LineInfo(FunDecl("mav_cmd_ack_err_y_lon_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(465, 55))), ENTRY, 465),
  LineInfo(FunDecl("mav_cmd_ack_err_y_lon_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(465, 55))), EXIT, 465),
  LineInfo(FunDecl("mav_cmd_ack_err_z_alt_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(466, 55))), ENTRY, 466),
  LineInfo(FunDecl("mav_cmd_ack_err_z_alt_out_of_range_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(466, 55))), EXIT, 466),
  LineInfo(FunDecl("mav_param_type_uint8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(469, 41))), ENTRY, 469),
  LineInfo(FunDecl("mav_param_type_uint8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(469, 41))), EXIT, 469),
  LineInfo(FunDecl("mav_param_type_int8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(470, 40))), ENTRY, 470),
  LineInfo(FunDecl("mav_param_type_int8_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(470, 40))), EXIT, 470),
  LineInfo(FunDecl("mav_param_type_uint16_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(471, 42))), ENTRY, 471),
  LineInfo(FunDecl("mav_param_type_uint16_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(471, 42))), EXIT, 471),
  LineInfo(FunDecl("mav_param_type_int16_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(472, 41))), ENTRY, 472),
  LineInfo(FunDecl("mav_param_type_int16_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(472, 41))), EXIT, 472),
  LineInfo(FunDecl("mav_param_type_uint32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(473, 42))), ENTRY, 473),
  LineInfo(FunDecl("mav_param_type_uint32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(473, 42))), EXIT, 473),
  LineInfo(FunDecl("mav_param_type_int32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(474, 41))), ENTRY, 474),
  LineInfo(FunDecl("mav_param_type_int32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(474, 41))), EXIT, 474),
  LineInfo(FunDecl("mav_param_type_uint64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(475, 42))), ENTRY, 475),
  LineInfo(FunDecl("mav_param_type_uint64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(475, 42))), EXIT, 475),
  LineInfo(FunDecl("mav_param_type_int64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(476, 41))), ENTRY, 476),
  LineInfo(FunDecl("mav_param_type_int64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(476, 41))), EXIT, 476),
  LineInfo(FunDecl("mav_param_type_real32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(477, 42))), ENTRY, 477),
  LineInfo(FunDecl("mav_param_type_real32_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(477, 42))), EXIT, 477),
  LineInfo(FunDecl("mav_param_type_real64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(478, 42))), ENTRY, 478),
  LineInfo(FunDecl("mav_param_type_real64_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(478, 42))), EXIT, 478),
  LineInfo(FunDecl("mav_result_accepted_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(481, 40))), ENTRY, 481),
  LineInfo(FunDecl("mav_result_accepted_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(481, 40))), EXIT, 481),
  LineInfo(FunDecl("mav_result_temporarily_rejected_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(482, 52))), ENTRY, 482),
  LineInfo(FunDecl("mav_result_temporarily_rejected_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(482, 52))), EXIT, 482),
  LineInfo(FunDecl("mav_result_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(483, 38))), ENTRY, 483),
  LineInfo(FunDecl("mav_result_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(483, 38))), EXIT, 483),
  LineInfo(FunDecl("mav_result_unsupported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(484, 43))), ENTRY, 484),
  LineInfo(FunDecl("mav_result_unsupported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(484, 43))), EXIT, 484),
  LineInfo(FunDecl("mav_result_failed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(485, 38))), ENTRY, 485),
  LineInfo(FunDecl("mav_result_failed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(485, 38))), EXIT, 485),
  LineInfo(FunDecl("mav_mission_accepted_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(488, 41))), ENTRY, 488),
  LineInfo(FunDecl("mav_mission_accepted_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(488, 41))), EXIT, 488),
  LineInfo(FunDecl("mav_mission_error_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(489, 38))), ENTRY, 489),
  LineInfo(FunDecl("mav_mission_error_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(489, 38))), EXIT, 489),
  LineInfo(FunDecl("mav_mission_unsupported_frame_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(490, 50))), ENTRY, 490),
  LineInfo(FunDecl("mav_mission_unsupported_frame_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(490, 50))), EXIT, 490),
  LineInfo(FunDecl("mav_mission_unsupported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(491, 44))), ENTRY, 491),
  LineInfo(FunDecl("mav_mission_unsupported_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(491, 44))), EXIT, 491),
  LineInfo(FunDecl("mav_mission_no_space_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(492, 41))), ENTRY, 492),
  LineInfo(FunDecl("mav_mission_no_space_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(492, 41))), EXIT, 492),
  LineInfo(FunDecl("mav_mission_invalid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(493, 40))), ENTRY, 493),
  LineInfo(FunDecl("mav_mission_invalid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(493, 40))), EXIT, 493),
  LineInfo(FunDecl("mav_mission_invalid_param1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(494, 47))), ENTRY, 494),
  LineInfo(FunDecl("mav_mission_invalid_param1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(494, 47))), EXIT, 494),
  LineInfo(FunDecl("mav_mission_invalid_param2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(495, 47))), ENTRY, 495),
  LineInfo(FunDecl("mav_mission_invalid_param2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(495, 47))), EXIT, 495),
  LineInfo(FunDecl("mav_mission_invalid_param3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(496, 47))), ENTRY, 496),
  LineInfo(FunDecl("mav_mission_invalid_param3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(496, 47))), EXIT, 496),
  LineInfo(FunDecl("mav_mission_invalid_param4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(497, 47))), ENTRY, 497),
  LineInfo(FunDecl("mav_mission_invalid_param4_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(497, 47))), EXIT, 497),
  LineInfo(FunDecl("mav_mission_invalid_param5_x_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(498, 49))), ENTRY, 498),
  LineInfo(FunDecl("mav_mission_invalid_param5_x_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(498, 49))), EXIT, 498),
  LineInfo(FunDecl("mav_mission_invalid_param6_y_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(499, 49))), ENTRY, 499),
  LineInfo(FunDecl("mav_mission_invalid_param6_y_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(499, 49))), EXIT, 499),
  LineInfo(FunDecl("mav_mission_invalid_param7_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(500, 47))), ENTRY, 500),
  LineInfo(FunDecl("mav_mission_invalid_param7_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(500, 47))), EXIT, 500),
  LineInfo(FunDecl("mav_mission_invalid_sequence_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(501, 49))), ENTRY, 501),
  LineInfo(FunDecl("mav_mission_invalid_sequence_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(501, 49))), EXIT, 501),
  LineInfo(FunDecl("mav_mission_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(502, 39))), ENTRY, 502),
  LineInfo(FunDecl("mav_mission_denied_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(502, 39))), EXIT, 502),
  LineInfo(FunDecl("mav_severity_emergency_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(505, 43))), ENTRY, 505),
  LineInfo(FunDecl("mav_severity_emergency_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(505, 43))), EXIT, 505),
  LineInfo(FunDecl("mav_severity_alert_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(506, 39))), ENTRY, 506),
  LineInfo(FunDecl("mav_severity_alert_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(506, 39))), EXIT, 506),
  LineInfo(FunDecl("mav_severity_critical_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(507, 42))), ENTRY, 507),
  LineInfo(FunDecl("mav_severity_critical_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(507, 42))), EXIT, 507),
  LineInfo(FunDecl("mav_severity_error_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(508, 39))), ENTRY, 508),
  LineInfo(FunDecl("mav_severity_error_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(508, 39))), EXIT, 508),
  LineInfo(FunDecl("mav_severity_warning_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(509, 41))), ENTRY, 509),
  LineInfo(FunDecl("mav_severity_warning_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(509, 41))), EXIT, 509),
  LineInfo(FunDecl("mav_severity_notice_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(510, 40))), ENTRY, 510),
  LineInfo(FunDecl("mav_severity_notice_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(510, 40))), EXIT, 510),
  LineInfo(FunDecl("mav_severity_info_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(511, 38))), ENTRY, 511),
  LineInfo(FunDecl("mav_severity_info_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(511, 38))), EXIT, 511),
  LineInfo(FunDecl("mav_severity_debug_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(512, 39))), ENTRY, 512),
  LineInfo(FunDecl("mav_severity_debug_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(512, 39))), EXIT, 512),
  LineInfo(FunDecl("mav_power_status_brick_valid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(515, 49))), ENTRY, 515),
  LineInfo(FunDecl("mav_power_status_brick_valid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(515, 49))), EXIT, 515),
  LineInfo(FunDecl("mav_power_status_servo_valid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(516, 49))), ENTRY, 516),
  LineInfo(FunDecl("mav_power_status_servo_valid_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(516, 49))), EXIT, 516),
  LineInfo(FunDecl("mav_power_status_usb_connected_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(517, 51))), ENTRY, 517),
  LineInfo(FunDecl("mav_power_status_usb_connected_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(517, 51))), EXIT, 517),
  LineInfo(FunDecl("mav_power_status_periph_overcurrent_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(518, 56))), ENTRY, 518),
  LineInfo(FunDecl("mav_power_status_periph_overcurrent_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(518, 56))), EXIT, 518),
  LineInfo(FunDecl("mav_power_status_periph_hipower_overcurrent_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(519, 64))), ENTRY, 519),
  LineInfo(FunDecl("mav_power_status_periph_hipower_overcurrent_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(519, 64))), EXIT, 519),
  LineInfo(FunDecl("mav_power_status_changed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(520, 45))), ENTRY, 520),
  LineInfo(FunDecl("mav_power_status_changed_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(520, 45))), EXIT, 520),
  LineInfo(FunDecl("serial_control_dev_telem1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(523, 46))), ENTRY, 523),
  LineInfo(FunDecl("serial_control_dev_telem1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(523, 46))), EXIT, 523),
  LineInfo(FunDecl("serial_control_dev_telem2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(524, 46))), ENTRY, 524),
  LineInfo(FunDecl("serial_control_dev_telem2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(524, 46))), EXIT, 524),
  LineInfo(FunDecl("serial_control_dev_gps1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(525, 44))), ENTRY, 525),
  LineInfo(FunDecl("serial_control_dev_gps1_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(525, 44))), EXIT, 525),
  LineInfo(FunDecl("serial_control_dev_gps2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(526, 44))), ENTRY, 526),
  LineInfo(FunDecl("serial_control_dev_gps2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(526, 44))), EXIT, 526),
  LineInfo(FunDecl("serial_control_dev_shell_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(527, 45))), ENTRY, 527),
  LineInfo(FunDecl("serial_control_dev_shell_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(527, 45))), EXIT, 527),
  LineInfo(FunDecl("serial_control_flag_reply_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(530, 46))), ENTRY, 530),
  LineInfo(FunDecl("serial_control_flag_reply_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(530, 46))), EXIT, 530),
  LineInfo(FunDecl("serial_control_flag_respond_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(531, 48))), ENTRY, 531),
  LineInfo(FunDecl("serial_control_flag_respond_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(531, 48))), EXIT, 531),
  LineInfo(FunDecl("serial_control_flag_exclusive_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(532, 50))), ENTRY, 532),
  LineInfo(FunDecl("serial_control_flag_exclusive_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(532, 50))), EXIT, 532),
  LineInfo(FunDecl("serial_control_flag_blocking_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(533, 49))), ENTRY, 533),
  LineInfo(FunDecl("serial_control_flag_blocking_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(533, 49))), EXIT, 533),
  LineInfo(FunDecl("serial_control_flag_multi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(534, 46))), ENTRY, 534),
  LineInfo(FunDecl("serial_control_flag_multi_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(534, 46))), EXIT, 534),
  LineInfo(FunDecl("mav_distance_sensor_laser_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(537, 46))), ENTRY, 537),
  LineInfo(FunDecl("mav_distance_sensor_laser_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(537, 46))), EXIT, 537),
  LineInfo(FunDecl("mav_distance_sensor_ultrasound_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(538, 51))), ENTRY, 538),
  LineInfo(FunDecl("mav_distance_sensor_ultrasound_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(538, 51))), EXIT, 538),
  LineInfo(FunDecl("mav_distance_sensor_infrared_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(539, 49))), ENTRY, 539),
  LineInfo(FunDecl("mav_distance_sensor_infrared_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(539, 49))), EXIT, 539),
  LineInfo(FunDecl("mav_sensor_rotation_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(542, 45))), ENTRY, 542),
  LineInfo(FunDecl("mav_sensor_rotation_none_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(542, 45))), EXIT, 542),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(543, 47))), ENTRY, 543),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(543, 47))), EXIT, 543),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(544, 47))), ENTRY, 544),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(544, 47))), EXIT, 544),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(545, 48))), ENTRY, 545),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(545, 48))), EXIT, 545),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(546, 48))), ENTRY, 546),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(546, 48))), EXIT, 546),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_225_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(547, 48))), ENTRY, 547),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_225_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(547, 48))), EXIT, 547),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(548, 48))), ENTRY, 548),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(548, 48))), EXIT, 548),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(549, 48))), ENTRY, 549),
  LineInfo(FunDecl("mav_sensor_rotation_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(549, 48))), EXIT, 549),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(550, 49))), ENTRY, 550),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(550, 49))), EXIT, 550),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(551, 56))), ENTRY, 551),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(551, 56))), EXIT, 551),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(552, 56))), ENTRY, 552),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(552, 56))), EXIT, 552),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(553, 57))), ENTRY, 553),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(553, 57))), EXIT, 553),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(554, 50))), ENTRY, 554),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(554, 50))), EXIT, 554),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_225_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(555, 57))), ENTRY, 555),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_225_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(555, 57))), EXIT, 555),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(556, 57))), ENTRY, 556),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(556, 57))), EXIT, 556),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(557, 57))), ENTRY, 557),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(557, 57))), EXIT, 557),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(558, 48))), ENTRY, 558),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(558, 48))), EXIT, 558),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(559, 55))), ENTRY, 559),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(559, 55))), EXIT, 559),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(560, 55))), ENTRY, 560),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(560, 55))), EXIT, 560),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(561, 56))), ENTRY, 561),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(561, 56))), EXIT, 561),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(562, 49))), ENTRY, 562),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(20), SourceInfo(562, 49))), EXIT, 562),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(563, 56))), ENTRY, 563),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_45_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(21), SourceInfo(563, 56))), EXIT, 563),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(564, 56))), ENTRY, 564),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(22), SourceInfo(564, 56))), EXIT, 564),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(565, 57))), ENTRY, 565),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_yaw_135_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(23), SourceInfo(565, 57))), EXIT, 565),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(566, 49))), ENTRY, 566),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(24), SourceInfo(566, 49))), EXIT, 566),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(567, 50))), ENTRY, 567),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(25), SourceInfo(567, 50))), EXIT, 567),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(568, 57))), ENTRY, 568),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(26), SourceInfo(568, 57))), EXIT, 568),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_180_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(569, 58))), ENTRY, 569),
  LineInfo(FunDecl("mav_sensor_rotation_pitch_180_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(27), SourceInfo(569, 58))), EXIT, 569),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(28), SourceInfo(570, 57))), ENTRY, 570),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(28), SourceInfo(570, 57))), EXIT, 570),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(29), SourceInfo(571, 58))), ENTRY, 571),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(29), SourceInfo(571, 58))), EXIT, 571),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(572, 58))), ENTRY, 572),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(30), SourceInfo(572, 58))), EXIT, 572),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(573, 58))), ENTRY, 573),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(31), SourceInfo(573, 58))), EXIT, 573),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(574, 59))), ENTRY, 574),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_180_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(574, 59))), EXIT, 574),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(575, 58))), ENTRY, 575),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(33), SourceInfo(575, 58))), EXIT, 575),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(34), SourceInfo(576, 59))), ENTRY, 576),
  LineInfo(FunDecl("mav_sensor_rotation_roll_180_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(34), SourceInfo(576, 59))), EXIT, 576),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(35), SourceInfo(577, 59))), ENTRY, 577),
  LineInfo(FunDecl("mav_sensor_rotation_roll_270_pitch_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(35), SourceInfo(577, 59))), EXIT, 577),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(36), SourceInfo(578, 65))), ENTRY, 578),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_pitch_180_yaw_90_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(36), SourceInfo(578, 65))), EXIT, 578),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(37), SourceInfo(579, 56))), ENTRY, 579),
  LineInfo(FunDecl("mav_sensor_rotation_roll_90_yaw_270_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(37), SourceInfo(579, 56))), EXIT, 579),
  LineInfo(FunDecl("mav_sensor_rotation_roll_315_pitch_315_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(38), SourceInfo(580, 67))), ENTRY, 580),
  LineInfo(FunDecl("mav_sensor_rotation_roll_315_pitch_315_yaw_315_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(38), SourceInfo(580, 67))), EXIT, 580),
  LineInfo(FunDecl("mav_protocol_capability_mission_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(583, 58))), ENTRY, 583),
  LineInfo(FunDecl("mav_protocol_capability_mission_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(583, 58))), EXIT, 583),
  LineInfo(FunDecl("mav_protocol_capability_param_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(584, 56))), ENTRY, 584),
  LineInfo(FunDecl("mav_protocol_capability_param_float_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(584, 56))), EXIT, 584),
  LineInfo(FunDecl("mav_protocol_capability_mission_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(585, 56))), ENTRY, 585),
  LineInfo(FunDecl("mav_protocol_capability_mission_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(585, 56))), EXIT, 585),
  LineInfo(FunDecl("mav_protocol_capability_command_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(586, 56))), ENTRY, 586),
  LineInfo(FunDecl("mav_protocol_capability_command_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(586, 56))), EXIT, 586),
  LineInfo(FunDecl("mav_protocol_capability_param_union_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(587, 56))), ENTRY, 587),
  LineInfo(FunDecl("mav_protocol_capability_param_union_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(587, 56))), EXIT, 587),
  LineInfo(FunDecl("mav_protocol_capability_ftp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(588, 48))), ENTRY, 588),
  LineInfo(FunDecl("mav_protocol_capability_ftp_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(588, 48))), EXIT, 588),
  LineInfo(FunDecl("mav_protocol_capability_set_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(589, 64))), ENTRY, 589),
  LineInfo(FunDecl("mav_protocol_capability_set_attitude_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(589, 64))), EXIT, 589),
  LineInfo(FunDecl("mav_protocol_capability_set_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(590, 74))), ENTRY, 590),
  LineInfo(FunDecl("mav_protocol_capability_set_position_target_local_ned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(590, 74))), EXIT, 590),
  LineInfo(FunDecl("mav_protocol_capability_set_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(591, 75))), ENTRY, 591),
  LineInfo(FunDecl("mav_protocol_capability_set_position_target_global_int_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(591, 75))), EXIT, 591),
  LineInfo(FunDecl("mav_protocol_capability_terrain_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(592, 52))), ENTRY, 592),
  LineInfo(FunDecl("mav_protocol_capability_terrain_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(592, 52))), EXIT, 592),
  LineInfo(FunDecl("mav_protocol_capability_set_actuator_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(593, 64))), ENTRY, 593),
  LineInfo(FunDecl("mav_protocol_capability_set_actuator_target_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(593, 64))), EXIT, 593),
  LineInfo(FunDecl("mav_protocol_capability_flight_termination_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2048), SourceInfo(594, 63))), ENTRY, 594),
  LineInfo(FunDecl("mav_protocol_capability_flight_termination_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2048), SourceInfo(594, 63))), EXIT, 594),
  LineInfo(FunDecl("mav_protocol_capability_compass_calibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4096), SourceInfo(595, 64))), ENTRY, 595),
  LineInfo(FunDecl("mav_protocol_capability_compass_calibration_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4096), SourceInfo(595, 64))), EXIT, 595),
  LineInfo(FunDecl("mav_estimator_type_naive_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(598, 45))), ENTRY, 598),
  LineInfo(FunDecl("mav_estimator_type_naive_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(598, 45))), EXIT, 598),
  LineInfo(FunDecl("mav_estimator_type_vision_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(599, 46))), ENTRY, 599),
  LineInfo(FunDecl("mav_estimator_type_vision_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(599, 46))), EXIT, 599),
  LineInfo(FunDecl("mav_estimator_type_vio_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(600, 43))), ENTRY, 600),
  LineInfo(FunDecl("mav_estimator_type_vio_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(600, 43))), EXIT, 600),
  LineInfo(FunDecl("mav_estimator_type_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(601, 43))), ENTRY, 601),
  LineInfo(FunDecl("mav_estimator_type_gps_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(601, 43))), EXIT, 601),
  LineInfo(FunDecl("mav_estimator_type_gps_ins_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(602, 47))), ENTRY, 602),
  LineInfo(FunDecl("mav_estimator_type_gps_ins_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(602, 47))), EXIT, 602),
  LineInfo(FunDecl("mav_battery_type_unknown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(605, 45))), ENTRY, 605),
  LineInfo(FunDecl("mav_battery_type_unknown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(605, 45))), EXIT, 605),
  LineInfo(FunDecl("mav_battery_type_lipo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(606, 42))), ENTRY, 606),
  LineInfo(FunDecl("mav_battery_type_lipo_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(606, 42))), EXIT, 606),
  LineInfo(FunDecl("mav_battery_type_life_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(607, 42))), ENTRY, 607),
  LineInfo(FunDecl("mav_battery_type_life_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(607, 42))), EXIT, 607),
  LineInfo(FunDecl("mav_battery_type_lion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(608, 42))), ENTRY, 608),
  LineInfo(FunDecl("mav_battery_type_lion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(608, 42))), EXIT, 608),
  LineInfo(FunDecl("mav_battery_type_nimh_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(609, 42))), ENTRY, 609),
  LineInfo(FunDecl("mav_battery_type_nimh_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(609, 42))), EXIT, 609),
  LineInfo(FunDecl("mav_battery_function_unknown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(612, 49))), ENTRY, 612),
  LineInfo(FunDecl("mav_battery_function_unknown_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(612, 49))), EXIT, 612),
  LineInfo(FunDecl("mav_battery_function_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(613, 45))), ENTRY, 613),
  LineInfo(FunDecl("mav_battery_function_all_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(613, 45))), EXIT, 613),
  LineInfo(FunDecl("mav_battery_function_propulsion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(614, 52))), ENTRY, 614),
  LineInfo(FunDecl("mav_battery_function_propulsion_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(614, 52))), EXIT, 614),
  LineInfo(FunDecl("mav_battery_function_avionics_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(615, 50))), ENTRY, 615),
  LineInfo(FunDecl("mav_battery_function_avionics_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(615, 50))), EXIT, 615),
  LineInfo(FunDecl("mav_battery_type_payload_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(616, 45))), ENTRY, 616),
  LineInfo(FunDecl("mav_battery_type_payload_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(616, 45))), EXIT, 616),
  LineInfo(FunDecl("mav_vtol_state_undefined_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(619, 45))), ENTRY, 619),
  LineInfo(FunDecl("mav_vtol_state_undefined_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(619, 45))), EXIT, 619),
  LineInfo(FunDecl("mav_vtol_state_transition_to_fw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(620, 52))), ENTRY, 620),
  LineInfo(FunDecl("mav_vtol_state_transition_to_fw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(620, 52))), EXIT, 620),
  LineInfo(FunDecl("mav_vtol_state_transition_to_mc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(621, 52))), ENTRY, 621),
  LineInfo(FunDecl("mav_vtol_state_transition_to_mc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(621, 52))), EXIT, 621),
  LineInfo(FunDecl("mav_vtol_state_mc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(622, 38))), ENTRY, 622),
  LineInfo(FunDecl("mav_vtol_state_mc_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(622, 38))), EXIT, 622),
  LineInfo(FunDecl("mav_vtol_state_fw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(623, 38))), ENTRY, 623),
  LineInfo(FunDecl("mav_vtol_state_fw_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(623, 38))), EXIT, 623),
  LineInfo(FunDecl("mav_landed_state_undefined_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(626, 47))), ENTRY, 626),
  LineInfo(FunDecl("mav_landed_state_undefined_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(626, 47))), EXIT, 626),
  LineInfo(FunDecl("mav_landed_state_on_ground_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(627, 47))), ENTRY, 627),
  LineInfo(FunDecl("mav_landed_state_on_ground_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(627, 47))), EXIT, 627),
  LineInfo(FunDecl("mav_landed_state_in_air_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(628, 44))), ENTRY, 628),
  LineInfo(FunDecl("mav_landed_state_in_air_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(628, 44))), EXIT, 628),
  LineInfo(FunDecl("adsb_altitude_type_pressure_qnh_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(631, 52))), ENTRY, 631),
  LineInfo(FunDecl("adsb_altitude_type_pressure_qnh_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(631, 52))), EXIT, 631),
  LineInfo(FunDecl("adsb_altitude_type_geometric_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(632, 49))), ENTRY, 632),
  LineInfo(FunDecl("adsb_altitude_type_geometric_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(632, 49))), EXIT, 632),
  LineInfo(FunDecl("adsb_emitter_type_no_info_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(635, 46))), ENTRY, 635),
  LineInfo(FunDecl("adsb_emitter_type_no_info_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(0), SourceInfo(635, 46))), EXIT, 635),
  LineInfo(FunDecl("adsb_emitter_type_light_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(636, 44))), ENTRY, 636),
  LineInfo(FunDecl("adsb_emitter_type_light_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(636, 44))), EXIT, 636),
  LineInfo(FunDecl("adsb_emitter_type_small_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(637, 44))), ENTRY, 637),
  LineInfo(FunDecl("adsb_emitter_type_small_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(637, 44))), EXIT, 637),
  LineInfo(FunDecl("adsb_emitter_type_large_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(638, 44))), ENTRY, 638),
  LineInfo(FunDecl("adsb_emitter_type_large_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(3), SourceInfo(638, 44))), EXIT, 638),
  LineInfo(FunDecl("adsb_emitter_type_high_vortex_large_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(639, 56))), ENTRY, 639),
  LineInfo(FunDecl("adsb_emitter_type_high_vortex_large_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(639, 56))), EXIT, 639),
  LineInfo(FunDecl("adsb_emitter_type_heavy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(640, 44))), ENTRY, 640),
  LineInfo(FunDecl("adsb_emitter_type_heavy_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(5), SourceInfo(640, 44))), EXIT, 640),
  LineInfo(FunDecl("adsb_emitter_type_highly_manuv_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(641, 51))), ENTRY, 641),
  LineInfo(FunDecl("adsb_emitter_type_highly_manuv_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(6), SourceInfo(641, 51))), EXIT, 641),
  LineInfo(FunDecl("adsb_emitter_type_rotocraft_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(642, 48))), ENTRY, 642),
  LineInfo(FunDecl("adsb_emitter_type_rotocraft_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(7), SourceInfo(642, 48))), EXIT, 642),
  LineInfo(FunDecl("adsb_emitter_type_unassigned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(643, 49))), ENTRY, 643),
  LineInfo(FunDecl("adsb_emitter_type_unassigned_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(643, 49))), EXIT, 643),
  LineInfo(FunDecl("adsb_emitter_type_glider_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(644, 45))), ENTRY, 644),
  LineInfo(FunDecl("adsb_emitter_type_glider_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(9), SourceInfo(644, 45))), EXIT, 644),
  LineInfo(FunDecl("adsb_emitter_type_lighter_air_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(645, 50))), ENTRY, 645),
  LineInfo(FunDecl("adsb_emitter_type_lighter_air_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(10), SourceInfo(645, 50))), EXIT, 645),
  LineInfo(FunDecl("adsb_emitter_type_parachute_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(646, 48))), ENTRY, 646),
  LineInfo(FunDecl("adsb_emitter_type_parachute_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(11), SourceInfo(646, 48))), EXIT, 646),
  LineInfo(FunDecl("adsb_emitter_type_ultra_light_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(647, 50))), ENTRY, 647),
  LineInfo(FunDecl("adsb_emitter_type_ultra_light_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(12), SourceInfo(647, 50))), EXIT, 647),
  LineInfo(FunDecl("adsb_emitter_type_unassigned2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(648, 50))), ENTRY, 648),
  LineInfo(FunDecl("adsb_emitter_type_unassigned2_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(13), SourceInfo(648, 50))), EXIT, 648),
  LineInfo(FunDecl("adsb_emitter_type_uav_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(649, 42))), ENTRY, 649),
  LineInfo(FunDecl("adsb_emitter_type_uav_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(14), SourceInfo(649, 42))), EXIT, 649),
  LineInfo(FunDecl("adsb_emitter_type_space_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(650, 44))), ENTRY, 650),
  LineInfo(FunDecl("adsb_emitter_type_space_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(15), SourceInfo(650, 44))), EXIT, 650),
  LineInfo(FunDecl("adsb_emitter_type_unassgined3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(651, 50))), ENTRY, 651),
  LineInfo(FunDecl("adsb_emitter_type_unassgined3_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(651, 50))), EXIT, 651),
  LineInfo(FunDecl("adsb_emitter_type_emergency_surface_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(652, 56))), ENTRY, 652),
  LineInfo(FunDecl("adsb_emitter_type_emergency_surface_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(17), SourceInfo(652, 56))), EXIT, 652),
  LineInfo(FunDecl("adsb_emitter_type_service_surface_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(653, 54))), ENTRY, 653),
  LineInfo(FunDecl("adsb_emitter_type_service_surface_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(18), SourceInfo(653, 54))), EXIT, 653),
  LineInfo(FunDecl("adsb_emitter_type_point_obstacle_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(654, 53))), ENTRY, 654),
  LineInfo(FunDecl("adsb_emitter_type_point_obstacle_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(19), SourceInfo(654, 53))), EXIT, 654),
  LineInfo(FunDecl("adsb_flags_valid_coords_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(657, 44))), ENTRY, 657),
  LineInfo(FunDecl("adsb_flags_valid_coords_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(657, 44))), EXIT, 657),
  LineInfo(FunDecl("adsb_flags_valid_altitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(658, 46))), ENTRY, 658),
  LineInfo(FunDecl("adsb_flags_valid_altitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(658, 46))), EXIT, 658),
  LineInfo(FunDecl("adsb_flags_valid_heading_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(659, 45))), ENTRY, 659),
  LineInfo(FunDecl("adsb_flags_valid_heading_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(659, 45))), EXIT, 659),
  LineInfo(FunDecl("adsb_flags_valid_velocity_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(660, 46))), ENTRY, 660),
  LineInfo(FunDecl("adsb_flags_valid_velocity_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(660, 46))), EXIT, 660),
  LineInfo(FunDecl("adsb_flags_valid_callsign_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(661, 46))), ENTRY, 661),
  LineInfo(FunDecl("adsb_flags_valid_callsign_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(661, 46))), EXIT, 661),
  LineInfo(FunDecl("adsb_flags_valid_squawk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(662, 44))), ENTRY, 662),
  LineInfo(FunDecl("adsb_flags_valid_squawk_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(662, 44))), EXIT, 662),
  LineInfo(FunDecl("adsb_flags_simulated_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(663, 41))), ENTRY, 663),
  LineInfo(FunDecl("adsb_flags_simulated_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(663, 41))), EXIT, 663),
  LineInfo(FunDecl("mav_do_reposition_flags_change_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(666, 56))), ENTRY, 666),
  LineInfo(FunDecl("mav_do_reposition_flags_change_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(666, 56))), EXIT, 666),
  LineInfo(FunDecl("estimator_attitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(669, 39))), ENTRY, 669),
  LineInfo(FunDecl("estimator_attitude_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1), SourceInfo(669, 39))), EXIT, 669),
  LineInfo(FunDecl("estimator_velocity_horiz_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(670, 45))), ENTRY, 670),
  LineInfo(FunDecl("estimator_velocity_horiz_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(2), SourceInfo(670, 45))), EXIT, 670),
  LineInfo(FunDecl("estimator_velocity_vert_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(671, 44))), ENTRY, 671),
  LineInfo(FunDecl("estimator_velocity_vert_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(4), SourceInfo(671, 44))), EXIT, 671),
  LineInfo(FunDecl("estimator_pos_horiz_rel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(672, 44))), ENTRY, 672),
  LineInfo(FunDecl("estimator_pos_horiz_rel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(8), SourceInfo(672, 44))), EXIT, 672),
  LineInfo(FunDecl("estimator_pos_horiz_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(673, 44))), ENTRY, 673),
  LineInfo(FunDecl("estimator_pos_horiz_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(16), SourceInfo(673, 44))), EXIT, 673),
  LineInfo(FunDecl("estimator_pos_vert_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(674, 43))), ENTRY, 674),
  LineInfo(FunDecl("estimator_pos_vert_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(32), SourceInfo(674, 43))), EXIT, 674),
  LineInfo(FunDecl("estimator_pos_vert_agl_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(675, 43))), ENTRY, 675),
  LineInfo(FunDecl("estimator_pos_vert_agl_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(64), SourceInfo(675, 43))), EXIT, 675),
  LineInfo(FunDecl("estimator_const_pos_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(676, 45))), ENTRY, 676),
  LineInfo(FunDecl("estimator_const_pos_mode_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(128), SourceInfo(676, 45))), EXIT, 676),
  LineInfo(FunDecl("estimator_pred_pos_horiz_rel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(677, 49))), ENTRY, 677),
  LineInfo(FunDecl("estimator_pred_pos_horiz_rel_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(256), SourceInfo(677, 49))), EXIT, 677),
  LineInfo(FunDecl("estimator_pred_pos_horiz_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(678, 49))), ENTRY, 678),
  LineInfo(FunDecl("estimator_pred_pos_horiz_abs_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(512), SourceInfo(678, 49))), EXIT, 678),
  LineInfo(FunDecl("estimator_gps_glitch_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(679, 41))), ENTRY, 679),
  LineInfo(FunDecl("estimator_gps_glitch_enum", NIL, REAL, NIL, BaseType(INT), NIL, Return(NulApp(1024), SourceInfo(679, 41))), EXIT, 679).
}

